{"version":3,"file":"cornerstoneWADOImageLoader.bundle.min.js","mappings":"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","sources":["webpack://cornerstoneWADOImageLoader/webpack/universalModuleDefinition","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/actual/object/define-property.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/actual/symbol/index.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/actual/symbol/iterator.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/actual/symbol/to-primitive.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/es/instance/flags.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/es/object/define-property.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/es/regexp/flags.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/es/symbol/index.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/es/symbol/iterator.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/es/symbol/to-primitive.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/features/object/define-property.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/features/symbol/index.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/features/symbol/iterator.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/features/symbol/to-primitive.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/full/object/define-property.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/full/symbol/index.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/full/symbol/iterator.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/full/symbol/to-primitive.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/a-callable.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/a-possible-prototype.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/add-to-unscopables.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/an-object.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/array-includes.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/array-iteration.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/array-method-has-species-support.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/array-slice-simple.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/array-slice.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/array-species-constructor.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/array-species-create.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/classof-raw.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/classof.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/correct-prototype-getter.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/create-iter-result-object.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/create-non-enumerable-property.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/create-property-descriptor.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/create-property.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/define-built-in.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/define-global-property.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/descriptors.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/document-all.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/document-create-element.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/does-not-exceed-safe-integer.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/dom-iterables.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/engine-user-agent.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/engine-v8-version.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/enum-bug-keys.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/export.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/fails.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/function-apply.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/function-bind-context.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/function-bind-native.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/function-call.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/function-name.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/function-uncurry-this-clause.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/function-uncurry-this.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/get-built-in.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/get-method.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/global.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/has-own-property.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/hidden-keys.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/html.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/ie8-dom-define.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/indexed-object.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/inspect-source.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/internal-state.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/is-array.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/is-callable.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/is-constructor.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/is-forced.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/is-null-or-undefined.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/is-object.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/is-pure.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/is-symbol.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/iterator-create-constructor.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/iterator-define.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/iterators-core.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/iterators.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/length-of-array-like.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/math-trunc.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/object-create.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/object-define-properties.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/object-define-property.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/object-get-own-property-descriptor.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/object-get-own-property-names-external.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/object-get-own-property-names.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/object-get-own-property-symbols.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/object-get-prototype-of.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/object-is-prototype-of.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/object-keys-internal.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/object-keys.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/object-property-is-enumerable.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/object-set-prototype-of.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/object-to-string.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/ordinary-to-primitive.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/path.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/regexp-flags.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/regexp-get-flags.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/require-object-coercible.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/set-to-string-tag.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/shared-key.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/shared-store.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/shared.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/string-multibyte.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/symbol-constructor-detection.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/symbol-define-to-primitive.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/symbol-registry-detection.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/to-absolute-index.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/to-indexed-object.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/to-integer-or-infinity.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/to-length.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/to-object.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/to-primitive.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/to-property-key.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/to-string-tag-support.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/to-string.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/try-to-string.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/uid.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/use-symbol-as-uid.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/v8-prototype-define-bug.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/weak-map-basic-detection.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/well-known-symbol-define.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/well-known-symbol-wrapped.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/internals/well-known-symbol.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.array.concat.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.array.iterator.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.json.stringify.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.json.to-string-tag.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.object.define-property.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.object.get-own-property-symbols.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.string.iterator.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.async-iterator.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.constructor.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.for.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.has-instance.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.is-concat-spreadable.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.iterator.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.key-for.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.match-all.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.match.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.replace.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.search.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.species.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.split.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.to-primitive.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.to-string-tag.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/es.symbol.unscopables.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/esnext.symbol.async-dispose.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/esnext.symbol.dispose.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/esnext.symbol.matcher.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/esnext.symbol.metadata-key.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/esnext.symbol.metadata.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/esnext.symbol.observable.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/esnext.symbol.pattern-match.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/esnext.symbol.replace-all.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/modules/web.dom-collections.iterator.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/stable/instance/flags.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/stable/object/define-property.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/stable/symbol/index.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/stable/symbol/iterator.js","webpack://cornerstoneWADOImageLoader/../node_modules/core-js-pure/stable/symbol/to-primitive.js","webpack://cornerstoneWADOImageLoader/../node_modules/pako/lib/inflate.js","webpack://cornerstoneWADOImageLoader/../node_modules/pako/lib/utils/common.js","webpack://cornerstoneWADOImageLoader/../node_modules/pako/lib/utils/strings.js","webpack://cornerstoneWADOImageLoader/../node_modules/pako/lib/zlib/adler32.js","webpack://cornerstoneWADOImageLoader/../node_modules/pako/lib/zlib/constants.js","webpack://cornerstoneWADOImageLoader/../node_modules/pako/lib/zlib/crc32.js","webpack://cornerstoneWADOImageLoader/../node_modules/pako/lib/zlib/gzheader.js","webpack://cornerstoneWADOImageLoader/../node_modules/pako/lib/zlib/inffast.js","webpack://cornerstoneWADOImageLoader/../node_modules/pako/lib/zlib/inflate.js","webpack://cornerstoneWADOImageLoader/../node_modules/pako/lib/zlib/inftrees.js","webpack://cornerstoneWADOImageLoader/../node_modules/pako/lib/zlib/messages.js","webpack://cornerstoneWADOImageLoader/../node_modules/pako/lib/zlib/zstream.js","webpack://cornerstoneWADOImageLoader/../node_modules/worker-loader/dist/runtime/inline.js","webpack://cornerstoneWADOImageLoader/../node_modules/@babel/runtime-corejs3/core-js-stable/instance/flags.js","webpack://cornerstoneWADOImageLoader/../node_modules/@babel/runtime-corejs3/core-js/object/define-property.js","webpack://cornerstoneWADOImageLoader/../node_modules/@babel/runtime-corejs3/core-js/symbol.js","webpack://cornerstoneWADOImageLoader/../node_modules/@babel/runtime-corejs3/core-js/symbol/iterator.js","webpack://cornerstoneWADOImageLoader/../node_modules/@babel/runtime-corejs3/core-js/symbol/to-primitive.js","webpack://cornerstoneWADOImageLoader/webpack/bootstrap","webpack://cornerstoneWADOImageLoader/webpack/runtime/compat get default export","webpack://cornerstoneWADOImageLoader/webpack/runtime/define property getters","webpack://cornerstoneWADOImageLoader/webpack/runtime/global","webpack://cornerstoneWADOImageLoader/webpack/runtime/hasOwnProperty shorthand","webpack://cornerstoneWADOImageLoader/webpack/runtime/make namespace object","webpack://cornerstoneWADOImageLoader/webpack/runtime/publicPath","webpack://cornerstoneWADOImageLoader/./imageLoader/colorSpaceConverters/convertRGBColorByPixel.js","webpack://cornerstoneWADOImageLoader/./imageLoader/colorSpaceConverters/convertRGBColorByPlane.js","webpack://cornerstoneWADOImageLoader/./imageLoader/colorSpaceConverters/convertYBRFullByPixel.js","webpack://cornerstoneWADOImageLoader/./imageLoader/colorSpaceConverters/convertYBRFullByPlane.js","webpack://cornerstoneWADOImageLoader/./imageLoader/colorSpaceConverters/convertPALETTECOLOR.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/metaData/getImagePixelModule.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/metaData/getLUTs.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/metaData/getModalityLUTOutputPixelRepresentation.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/metaData/getNumberValues.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadors/metaData/getValue.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadors/metaData/getNumberString.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadors/metaData/getNumberValue.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadors/metaData/getNumberValues.js","webpack://cornerstoneWADOImageLoader/./imageLoader/imageIdToURI.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadors/metaDataManager.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadors/metaData/metaDataProvider.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadors/metaData/getOverlayPlaneModule.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadors/findIndexOfString.js","webpack://cornerstoneWADOImageLoader/./imageLoader/internal/options.js","webpack://cornerstoneWADOImageLoader/./imageLoader/internal/xhrRequest.js","webpack://cornerstoneWADOImageLoader/./imageLoader/internal/index.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadors/getPixelData.js","webpack://cornerstoneWADOImageLoader/../node_modules/@babel/runtime-corejs3/helpers/esm/typeof.js","webpack://cornerstoneWADOImageLoader/../node_modules/@babel/runtime-corejs3/helpers/esm/toPropertyKey.js","webpack://cornerstoneWADOImageLoader/../node_modules/@babel/runtime-corejs3/helpers/esm/toPrimitive.js","webpack://cornerstoneWADOImageLoader/../node_modules/@babel/runtime-corejs3/helpers/esm/defineProperty.js","webpack://cornerstoneWADOImageLoader/./imageLoader/getImageFrame.js","webpack://cornerstoneWADOImageLoader/./webWorker/index.worker.js","webpack://cornerstoneWADOImageLoader/./imageLoader/webWorkerManager.js","webpack://cornerstoneWADOImageLoader/./shared/getMinMax.js","webpack://cornerstoneWADOImageLoader/./imageLoader/decodeJPEGBaseline8BitColor.js","webpack://cornerstoneWADOImageLoader/./imageLoader/decodeImageFrame.js","webpack://cornerstoneWADOImageLoader/./imageLoader/isColorImage.js","webpack://cornerstoneWADOImageLoader/./imageLoader/convertColorSpace.js","webpack://cornerstoneWADOImageLoader/./imageLoader/colorSpaceConverters/convertYBRFull422ByPixel.js","webpack://cornerstoneWADOImageLoader/./imageLoader/isJPEGBaseline8BitColor.js","webpack://cornerstoneWADOImageLoader/./imageLoader/createImage.js","webpack://cornerstoneWADOImageLoader/./imageLoader/getScalingParameters.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadors/loadImage.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadors/index.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadors/register.js","webpack://cornerstoneWADOImageLoader/./imageLoader/registerLoaders.js","webpack://cornerstoneWADOImageLoader/./externalModules.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/parseImageId.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/dataset-from-partial-content.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/dataSetCacheManager.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/metaData/metaDataProvider.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/metaData/getOverlayPlaneModule.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/fileManager.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/getEncapsulatedImageFrame.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/unpackBinaryFrame.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/getUncompressedImageFrame.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/loadFileRequest.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/getPixelData.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/loadImage.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/index.js","webpack://cornerstoneWADOImageLoader/./imageLoader/wadouri/register.js","webpack://cornerstoneWADOImageLoader/./imageLoader/configure.js","webpack://cornerstoneWADOImageLoader/./version.js","webpack://cornerstoneWADOImageLoader/./imageLoader/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneWADOImageLoader\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneWADOImageLoader\"] = factory();\n\telse\n\t\troot[\"cornerstoneWADOImageLoader\"] = factory();\n})(this, () => {\nreturn ","var parent = require('../../stable/object/define-property');\n\nmodule.exports = parent;\n","var parent = require('../../stable/symbol');\n\nrequire('../../modules/esnext.symbol.dispose');\n\nmodule.exports = parent;\n","var parent = require('../../stable/symbol/iterator');\n\nmodule.exports = parent;\n","var parent = require('../../stable/symbol/to-primitive');\n\nmodule.exports = parent;\n","var isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar flags = require('../regexp/flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (it) {\n  return (it === RegExpPrototype || isPrototypeOf(RegExpPrototype, it)) ? flags(it) : it.flags;\n};\n","require('../../modules/es.object.define-property');\nvar path = require('../../internals/path');\n\nvar Object = path.Object;\n\nvar defineProperty = module.exports = function defineProperty(it, key, desc) {\n  return Object.defineProperty(it, key, desc);\n};\n\nif (Object.defineProperty.sham) defineProperty.sham = true;\n","require('../../modules/es.regexp.flags');\nvar getRegExpFlags = require('../../internals/regexp-get-flags');\n\nmodule.exports = getRegExpFlags;\n","require('../../modules/es.array.concat');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.symbol');\nrequire('../../modules/es.symbol.async-iterator');\nrequire('../../modules/es.symbol.description');\nrequire('../../modules/es.symbol.has-instance');\nrequire('../../modules/es.symbol.is-concat-spreadable');\nrequire('../../modules/es.symbol.iterator');\nrequire('../../modules/es.symbol.match');\nrequire('../../modules/es.symbol.match-all');\nrequire('../../modules/es.symbol.replace');\nrequire('../../modules/es.symbol.search');\nrequire('../../modules/es.symbol.species');\nrequire('../../modules/es.symbol.split');\nrequire('../../modules/es.symbol.to-primitive');\nrequire('../../modules/es.symbol.to-string-tag');\nrequire('../../modules/es.symbol.unscopables');\nrequire('../../modules/es.json.to-string-tag');\nrequire('../../modules/es.math.to-string-tag');\nrequire('../../modules/es.reflect.to-string-tag');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Symbol;\n","require('../../modules/es.array.iterator');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.string.iterator');\nrequire('../../modules/es.symbol.iterator');\nvar WrappedWellKnownSymbolModule = require('../../internals/well-known-symbol-wrapped');\n\nmodule.exports = WrappedWellKnownSymbolModule.f('iterator');\n","require('../../modules/es.date.to-primitive');\nrequire('../../modules/es.symbol.to-primitive');\nvar WrappedWellKnownSymbolModule = require('../../internals/well-known-symbol-wrapped');\n\nmodule.exports = WrappedWellKnownSymbolModule.f('toPrimitive');\n","module.exports = require('../../full/object/define-property');\n","module.exports = require('../../full/symbol');\n","module.exports = require('../../full/symbol/iterator');\n","module.exports = require('../../full/symbol/to-primitive');\n","var parent = require('../../actual/object/define-property');\n\nmodule.exports = parent;\n","var parent = require('../../actual/symbol');\nrequire('../../modules/esnext.symbol.async-dispose');\nrequire('../../modules/esnext.symbol.matcher');\nrequire('../../modules/esnext.symbol.metadata-key');\nrequire('../../modules/esnext.symbol.observable');\n// TODO: Remove from `core-js@4`\nrequire('../../modules/esnext.symbol.metadata');\nrequire('../../modules/esnext.symbol.pattern-match');\nrequire('../../modules/esnext.symbol.replace-all');\n\nmodule.exports = parent;\n","var parent = require('../../actual/symbol/iterator');\n\nmodule.exports = parent;\n","var parent = require('../../actual/symbol/to-primitive');\n\nmodule.exports = parent;\n","var isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n","var isCallable = require('../internals/is-callable');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (typeof argument == 'object' || isCallable(argument)) return argument;\n  throw $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};\n","module.exports = function () { /* empty */ };\n","var isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw $TypeError($String(argument) + ' is not an object');\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = uncurryThis([].push);\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_REJECT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that);\n    var length = lengthOfArrayLike(self);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push(target, value);      // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push(target, value);      // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod(7)\n};\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","var toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\n\nvar $Array = Array;\nvar max = Math.max;\n\nmodule.exports = function (O, start, end) {\n  var length = lengthOfArrayLike(O);\n  var k = toAbsoluteIndex(start, length);\n  var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n  var result = $Array(max(fin - k, 0));\n  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);\n  result.length = n;\n  return result;\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis([].slice);\n","var isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar $Array = Array;\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? $Array : C;\n};\n","var arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","// `CreateIterResultObject` abstract operation\n// https://tc39.es/ecma262/#sec-createiterresultobject\nmodule.exports = function (value, done) {\n  return { value: value, done: done };\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (target, key, value, options) {\n  if (options && options.enumerable) target[key] = value;\n  else createNonEnumerableProperty(target, key, value);\n  return target;\n};\n","var global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var documentAll = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nvar IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;\n\nmodule.exports = {\n  all: documentAll,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","'use strict';\nvar global = require('../internals/global');\nvar apply = require('../internals/function-apply');\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar isCallable = require('../internals/is-callable');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar isForced = require('../internals/is-forced');\nvar path = require('../internals/path');\nvar bind = require('../internals/function-bind-context');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\n\nvar wrapConstructor = function (NativeConstructor) {\n  var Wrapper = function (a, b, c) {\n    if (this instanceof Wrapper) {\n      switch (arguments.length) {\n        case 0: return new NativeConstructor();\n        case 1: return new NativeConstructor(a);\n        case 2: return new NativeConstructor(a, b);\n      } return new NativeConstructor(a, b, c);\n    } return apply(NativeConstructor, this, arguments);\n  };\n  Wrapper.prototype = NativeConstructor.prototype;\n  return Wrapper;\n};\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var PROTO = options.proto;\n\n  var nativeSource = GLOBAL ? global : STATIC ? global[TARGET] : (global[TARGET] || {}).prototype;\n\n  var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];\n  var targetPrototype = target.prototype;\n\n  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;\n  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;\n\n  for (key in source) {\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contains in native\n    USE_NATIVE = !FORCED && nativeSource && hasOwn(nativeSource, key);\n\n    targetProperty = target[key];\n\n    if (USE_NATIVE) if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(nativeSource, key);\n      nativeProperty = descriptor && descriptor.value;\n    } else nativeProperty = nativeSource[key];\n\n    // export native or implementation\n    sourceProperty = (USE_NATIVE && nativeProperty) ? nativeProperty : source[key];\n\n    if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue;\n\n    // bind methods to global for calling from export context\n    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, global);\n    // wrap global constructors for prevent changs in this version\n    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);\n    // make static versions for prototype methods\n    else if (PROTO && isCallable(sourceProperty)) resultProperty = uncurryThis(sourceProperty);\n    // default case\n    else resultProperty = sourceProperty;\n\n    // add a flag to not completely full polyfills\n    if (options.sham || (sourceProperty && sourceProperty.sham) || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(resultProperty, 'sham', true);\n    }\n\n    createNonEnumerableProperty(target, key, resultProperty);\n\n    if (PROTO) {\n      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';\n      if (!hasOwn(path, VIRTUAL_PROTOTYPE)) {\n        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});\n      }\n      // export virtual prototype methods\n      createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty);\n      // export real prototype methods\n      if (options.real && targetPrototype && (FORCED || !targetPrototype[key])) {\n        createNonEnumerableProperty(targetPrototype, key, sourceProperty);\n      }\n    }\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n","var uncurryThis = require('../internals/function-uncurry-this-clause');\nvar aCallable = require('../internals/a-callable');\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","var classofRaw = require('../internals/classof-raw');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === 'Function') return uncurryThis(fn);\n};\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (variable) {\n  return isCallable(variable) ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","module.exports = {};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","var $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = $documentAll.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof');\nvar getBuiltIn = require('../internals/get-built-in');\nvar inspectSource = require('../internals/inspect-source');\n\nvar noop = function () { /* empty */ };\nvar empty = [];\nvar construct = getBuiltIn('Reflect', 'construct');\nvar constructorRegExp = /^\\s*(?:class|function)\\b/;\nvar exec = uncurryThis(constructorRegExp.exec);\nvar INCORRECT_TO_STRING = !constructorRegExp.exec(noop);\n\nvar isConstructorModern = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  try {\n    construct(noop, empty, argument);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar isConstructorLegacy = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  switch (classof(argument)) {\n    case 'AsyncFunction':\n    case 'GeneratorFunction':\n    case 'AsyncGeneratorFunction': return false;\n  }\n  try {\n    // we can't check .prototype since constructors produced by .bind haven't it\n    // `Function#toString` throws on some built-it function in some legacy engines\n    // (for example, `DOMQuad` and similar in FF41-)\n    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));\n  } catch (error) {\n    return true;\n  }\n};\n\nisConstructorLegacy.sham = true;\n\n// `IsConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-isconstructor\nmodule.exports = !construct || fails(function () {\n  var called;\n  return isConstructorModern(isConstructorModern.call)\n    || !isConstructorModern(Object)\n    || !isConstructorModern(function () { called = true; })\n    || called;\n}) ? isConstructorLegacy : isConstructorModern;\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","var isCallable = require('../internals/is-callable');\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\nmodule.exports = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","module.exports = true;\n","var getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar IS_PURE = require('../internals/is-pure');\nvar FunctionName = require('../internals/function-name');\nvar isCallable = require('../internals/is-callable');\nvar createIteratorConstructor = require('../internals/iterator-create-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar PROPER_FUNCTION_NAME = FunctionName.PROPER;\nvar CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {\n          defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF\n  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {\n      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);\n    } else {\n      INCORRECT_VALUES_NAME = true;\n      defaultIterator = function values() { return call(nativeIterator, this); };\n    }\n  }\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        defineBuiltIn(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });\n  }\n  Iterators[NAME] = defaultIterator;\n\n  return methods;\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\nelse if (IS_PURE) IteratorPrototype = create(IteratorPrototype);\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (!isCallable(IteratorPrototype[ITERATOR])) {\n  defineBuiltIn(IteratorPrototype, ITERATOR, function () {\n    return this;\n  });\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","module.exports = {};\n","var toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es/no-object-create -- safe\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","/* eslint-disable es/no-object-getownpropertynames -- safe */\nvar classof = require('../internals/classof-raw');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar arraySlice = require('../internals/array-slice-simple');\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return $getOwnPropertyNames(it);\n  } catch (error) {\n    return arraySlice(windowNames);\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && classof(it) == 'Window'\n    ? getWindowNames(it)\n    : $getOwnPropertyNames(toIndexedObject(it));\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar $Object = Object;\nvar ObjectPrototype = $Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object ? ObjectPrototype : null;\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","/* eslint-disable no-proto -- safe */\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","var call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw $TypeError(\"Can't convert object to primitive value\");\n};\n","module.exports = {};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n","var isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar defineProperty = require('../internals/object-define-property').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/object-to-string');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC, SET_METHOD) {\n  if (it) {\n    var target = STATIC ? it : it.prototype;\n    if (!hasOwn(target, TO_STRING_TAG)) {\n      defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });\n    }\n    if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {\n      createNonEnumerableProperty(target, 'toString', toString);\n    }\n  }\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.27.2',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.27.2/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar stringSlice = uncurryThis(''.slice);\n\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = toString(requireObjectCoercible($this));\n    var position = toIntegerOrInfinity(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = charCodeAt(S, position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING\n          ? charAt(S, position)\n          : first\n        : CONVERT_TO_STRING\n          ? stringSlice(S, position, position + 2)\n          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","var call = require('../internals/function-call');\nvar getBuiltIn = require('../internals/get-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar defineBuiltIn = require('../internals/define-built-in');\n\nmodule.exports = function () {\n  var Symbol = getBuiltIn('Symbol');\n  var SymbolPrototype = Symbol && Symbol.prototype;\n  var valueOf = SymbolPrototype && SymbolPrototype.valueOf;\n  var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n  if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {\n    // `Symbol.prototype[@@toPrimitive]` method\n    // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\n    // eslint-disable-next-line no-unused-vars -- required for .length\n    defineBuiltIn(SymbolPrototype, TO_PRIMITIVE, function (hint) {\n      return call(valueOf, this);\n    }, { arity: 1 });\n  }\n};\n","var NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\n/* eslint-disable es/no-symbol -- safe */\nmodule.exports = NATIVE_SYMBOL && !!Symbol['for'] && !!Symbol.keyFor;\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","var call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","var $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","var path = require('../internals/path');\nvar hasOwn = require('../internals/has-own-property');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!hasOwn(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = global.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport('concat');\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = lengthOfArrayLike(E);\n        doesNotExceedSafeInteger(n + len);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        doesNotExceedSafeInteger(n + 1);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineProperty = require('../internals/object-define-property').f;\nvar defineIterator = require('../internals/iterator-define');\nvar createIterResultObject = require('../internals/create-iter-result-object');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return createIterResultObject(undefined, true);\n  }\n  if (kind == 'keys') return createIterResultObject(index, false);\n  if (kind == 'values') return createIterResultObject(target[index], false);\n  return createIterResultObject([index, target[index]], false);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nvar values = Iterators.Arguments = Iterators.Array;\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n// V8 ~ Chrome 45- bug\nif (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {\n  defineProperty(values, 'name', { value: 'values' });\n} catch (error) { /* empty */ }\n","var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar arraySlice = require('../internals/array-slice');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar exec = uncurryThis(/./.exec);\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar replace = uncurryThis(''.replace);\nvar numberToString = uncurryThis(1.0.toString);\n\nvar tester = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\n\nvar WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function () {\n  var symbol = getBuiltIn('Symbol')();\n  // MS Edge converts symbol values to JSON as {}\n  return $stringify([symbol]) != '[null]'\n    // WebKit converts symbol values to JSON as null\n    || $stringify({ a: symbol }) != '{}'\n    // V8 throws on boxed symbols\n    || $stringify(Object(symbol)) != '{}';\n});\n\n// https://github.com/tc39/proposal-well-formed-stringify\nvar ILL_FORMED_UNICODE = fails(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"'\n    || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\n\nvar stringifyWithSymbolsFix = function (it, replacer) {\n  var args = arraySlice(arguments);\n  var $replacer = replacer;\n  if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n  if (!isArray(replacer)) replacer = function (key, value) {\n    if (isCallable($replacer)) value = call($replacer, this, key, value);\n    if (!isSymbol(value)) return value;\n  };\n  args[1] = replacer;\n  return apply($stringify, null, args);\n};\n\nvar fixIllFormed = function (match, offset, string) {\n  var prev = charAt(string, offset - 1);\n  var next = charAt(string, offset + 1);\n  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {\n    return '\\\\u' + numberToString(charCodeAt(match, 0), 16);\n  } return match;\n};\n\nif ($stringify) {\n  // `JSON.stringify` method\n  // https://tc39.es/ecma262/#sec-json.stringify\n  $({ target: 'JSON', stat: true, arity: 3, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      var args = arraySlice(arguments);\n      var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);\n      return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;\n    }\n  });\n}\n","var global = require('../internals/global');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// JSON[@@toStringTag] property\n// https://tc39.es/ecma262/#sec-json-@@tostringtag\nsetToStringTag(global.JSON, 'JSON', true);\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\n// eslint-disable-next-line es/no-object-defineproperty -- safe\n$({ target: 'Object', stat: true, forced: Object.defineProperty !== defineProperty, sham: !DESCRIPTORS }, {\n  defineProperty: defineProperty\n});\n","var $ = require('../internals/export');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar fails = require('../internals/fails');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar toObject = require('../internals/to-object');\n\n// V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FORCED = !NATIVE_SYMBOL || fails(function () { getOwnPropertySymbolsModule.f(1); });\n\n// `Object.getOwnPropertySymbols` method\n// https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n$({ target: 'Object', stat: true, forced: FORCED }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];\n  }\n});\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar toString = require('../internals/to-string');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/iterator-define');\nvar createIterResultObject = require('../internals/create-iter-result-object');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: toString(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return createIterResultObject(undefined, true);\n  point = charAt(string, index);\n  state.index += point.length;\n  return createIterResultObject(point, false);\n});\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.asyncIterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.asynciterator\ndefineWellKnownSymbol('asyncIterator');\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar fails = require('../internals/fails');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar $toString = require('../internals/to-string');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar defineSymbolToPrimitive = require('../internals/symbol-define-to-primitive');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\n\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];\nvar TypeError = global.TypeError;\nvar QObject = global.QObject;\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar push = uncurryThis([].push);\n\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar WellKnownSymbolsStore = shared('wks');\n\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPropertyKey(P);\n  anObject(Attributes);\n  if (hasOwn(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPropertyKey(V);\n  var enumerable = call(nativePropertyIsEnumerable, this, P);\n  if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P]\n    ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPropertyKey(P);\n  if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) push(result, key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function (O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {\n      push(result, AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.es/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (isPrototypeOf(SymbolPrototype, this)) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) call(setter, ObjectPrototypeSymbols, value);\n      if (hasOwn(this, HIDDEN) && hasOwn(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  SymbolPrototype = $Symbol[PROTOTYPE];\n\n  defineBuiltIn(SymbolPrototype, 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  defineBuiltIn($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  definePropertiesModule.f = $defineProperties;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty(SymbolPrototype, 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      defineBuiltIn(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, constructor: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames\n});\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/symbol-registry-detection');\n\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.for` method\n// https://tc39.es/ecma262/#sec-symbol.for\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  'for': function (key) {\n    var string = toString(key);\n    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = getBuiltIn('Symbol')(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  }\n});\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.hasInstance` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.hasinstance\ndefineWellKnownSymbol('hasInstance');\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.isConcatSpreadable` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable\ndefineWellKnownSymbol('isConcatSpreadable');\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","// TODO: Remove this module from `core-js@4` since it's split to modules listed below\nrequire('../modules/es.symbol.constructor');\nrequire('../modules/es.symbol.for');\nrequire('../modules/es.symbol.key-for');\nrequire('../modules/es.json.stringify');\nrequire('../modules/es.object.get-own-property-symbols');\n","var $ = require('../internals/export');\nvar hasOwn = require('../internals/has-own-property');\nvar isSymbol = require('../internals/is-symbol');\nvar tryToString = require('../internals/try-to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/symbol-registry-detection');\n\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.keyFor` method\n// https://tc39.es/ecma262/#sec-symbol.keyfor\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(tryToString(sym) + ' is not a symbol');\n    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  }\n});\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.matchAll` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.matchall\ndefineWellKnownSymbol('matchAll');\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.match` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.match\ndefineWellKnownSymbol('match');\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.replace` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.replace\ndefineWellKnownSymbol('replace');\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.search` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.search\ndefineWellKnownSymbol('search');\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.species` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.species\ndefineWellKnownSymbol('species');\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.split` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.split\ndefineWellKnownSymbol('split');\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar defineSymbolToPrimitive = require('../internals/symbol-define-to-primitive');\n\n// `Symbol.toPrimitive` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.toprimitive\ndefineWellKnownSymbol('toPrimitive');\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n","var getBuiltIn = require('../internals/get-built-in');\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// `Symbol.toStringTag` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.tostringtag\ndefineWellKnownSymbol('toStringTag');\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag(getBuiltIn('Symbol'), 'Symbol');\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.unscopables` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.unscopables\ndefineWellKnownSymbol('unscopables');\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.asyncDispose` well-known symbol\n// https://github.com/tc39/proposal-async-explicit-resource-management\ndefineWellKnownSymbol('asyncDispose');\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.dispose` well-known symbol\n// https://github.com/tc39/proposal-explicit-resource-management\ndefineWellKnownSymbol('dispose');\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.matcher` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('matcher');\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.metadataKey` well-known symbol\n// https://github.com/tc39/proposal-decorator-metadata\ndefineWellKnownSymbol('metadataKey');\n","// TODO: Remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.metadata` well-known symbol\n// https://github.com/tc39/proposal-decorators\ndefineWellKnownSymbol('metadata');\n","var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.observable` well-known symbol\n// https://github.com/tc39/proposal-observable\ndefineWellKnownSymbol('observable');\n","// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.patternMatch` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('patternMatch');\n","// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\ndefineWellKnownSymbol('replaceAll');\n","require('../modules/es.array.iterator');\nvar DOMIterables = require('../internals/dom-iterables');\nvar global = require('../internals/global');\nvar classof = require('../internals/classof');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype && classof(CollectionPrototype) !== TO_STRING_TAG) {\n    createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n  }\n  Iterators[COLLECTION_NAME] = Iterators.Array;\n}\n","var parent = require('../../es/instance/flags');\n\nmodule.exports = parent;\n","var parent = require('../../es/object/define-property');\n\nmodule.exports = parent;\n","var parent = require('../../es/symbol');\nrequire('../../modules/web.dom-collections.iterator');\n\nmodule.exports = parent;\n","var parent = require('../../es/symbol/iterator');\nrequire('../../modules/web.dom-collections.iterator');\n\nmodule.exports = parent;\n","var parent = require('../../es/symbol/to-primitive');\n\nmodule.exports = parent;\n","'use strict';\n\n\nconst zlib_inflate = require('./zlib/inflate');\nconst utils        = require('./utils/common');\nconst strings      = require('./utils/strings');\nconst msg          = require('./zlib/messages');\nconst ZStream      = require('./zlib/zstream');\nconst GZheader     = require('./zlib/gzheader');\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = require('./zlib/constants');\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  this.options = utils.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = zlib_inflate.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      zlib_inflate.inflateReset(strm);\n      status = zlib_inflate.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = zlib_inflate.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  const inflator = new Inflate(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || msg[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = inflate;\nmodule.exports.constants = require('./zlib/constants');\n","'use strict';\n\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nmodule.exports.assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nmodule.exports.flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n","// String encode/decode helpers\n'use strict';\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nmodule.exports.string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nmodule.exports.buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nmodule.exports.utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD = 16209;       /* got a data error -- remain here until reset */\nconst TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32       = require('./adler32');\nconst crc32         = require('./crc32');\nconst inflate_fast  = require('./inffast');\nconst inflate_table = require('./inftrees');\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH, Z_BLOCK, Z_TREES,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR, Z_BUF_ERROR,\n  Z_DEFLATED\n} = require('./constants');\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n};\n\n\nmodule.exports.inflateReset = inflateReset;\nmodule.exports.inflateReset2 = inflateReset2;\nmodule.exports.inflateResetKeep = inflateResetKeep;\nmodule.exports.inflateInit = inflateInit;\nmodule.exports.inflateInit2 = inflateInit2;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateEnd = inflateEnd;\nmodule.exports.inflateGetHeader = inflateGetHeader;\nmodule.exports.inflateSetDictionary = inflateSetDictionary;\nmodule.exports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nmodule.exports = inflate_table;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","module.exports = require(\"core-js-pure/stable/instance/flags\");","module.exports = require(\"core-js-pure/features/object/define-property\");","module.exports = require(\"core-js-pure/features/symbol\");","module.exports = require(\"core-js-pure/features/symbol/iterator\");","module.exports = require(\"core-js-pure/features/symbol/to-primitive\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export default function (imageFrame, colorBuffer, useRGBA) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: rgbBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: rgbBuffer length must be divisible by 3');\n  }\n\n  const numPixels = imageFrame.length / 3;\n\n  let rgbIndex = 0;\n\n  let bufferIndex = 0;\n\n  if (useRGBA) {\n    for (let i = 0; i < numPixels; i++) {\n      colorBuffer[bufferIndex++] = imageFrame[rgbIndex++]; // red\n      colorBuffer[bufferIndex++] = imageFrame[rgbIndex++]; // green\n      colorBuffer[bufferIndex++] = imageFrame[rgbIndex++]; // blue\n      colorBuffer[bufferIndex++] = 255; // alpha\n    }\n\n    return;\n  }\n\n  // if RGB buffer\n  colorBuffer.set(imageFrame);\n}\n","export default function (imageFrame, colorBuffer, useRGBA) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: rgbBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: rgbBuffer length must be divisible by 3');\n  }\n\n  const numPixels = imageFrame.length / 3;\n\n  let bufferIndex = 0;\n\n  let rIndex = 0;\n\n  let gIndex = numPixels;\n\n  let bIndex = numPixels * 2;\n\n  if (useRGBA) {\n    for (let i = 0; i < numPixels; i++) {\n      colorBuffer[bufferIndex++] = imageFrame[rIndex++]; // red\n      colorBuffer[bufferIndex++] = imageFrame[gIndex++]; // green\n      colorBuffer[bufferIndex++] = imageFrame[bIndex++]; // blue\n      colorBuffer[bufferIndex++] = 255; // alpha\n    }\n\n    return;\n  }\n\n  // if RGB buffer\n  colorBuffer.set(imageFrame);\n}\n","export default function (imageFrame, colorBuffer, useRGBA) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: ybrBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: ybrBuffer length must be divisble by 3');\n  }\n\n  const numPixels = imageFrame.length / 3;\n\n  let ybrIndex = 0;\n\n  let bufferIndex = 0;\n\n  if (useRGBA) {\n    for (let i = 0; i < numPixels; i++) {\n      const y = imageFrame[ybrIndex++];\n      const cb = imageFrame[ybrIndex++];\n      const cr = imageFrame[ybrIndex++];\n\n      colorBuffer[bufferIndex++] = y + 1.402 * (cr - 128); // red\n      colorBuffer[bufferIndex++] =\n        y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n      colorBuffer[bufferIndex++] = y + 1.772 * (cb - 128); // blue\n      colorBuffer[bufferIndex++] = 255; // alpha\n    }\n\n    return;\n  }\n\n  for (let i = 0; i < numPixels; i++) {\n    const y = imageFrame[ybrIndex++];\n    const cb = imageFrame[ybrIndex++];\n    const cr = imageFrame[ybrIndex++];\n\n    colorBuffer[bufferIndex++] = y + 1.402 * (cr - 128); // red\n    colorBuffer[bufferIndex++] =\n      y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n    colorBuffer[bufferIndex++] = y + 1.772 * (cb - 128); // blue\n  }\n}\n","export default function (imageFrame, colorBuffer, useRGBA) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: ybrBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: ybrBuffer length must be divisble by 3');\n  }\n\n  const numPixels = imageFrame.length / 3;\n\n  let bufferIndex = 0;\n\n  let yIndex = 0;\n\n  let cbIndex = numPixels;\n\n  let crIndex = numPixels * 2;\n\n  if (useRGBA) {\n    for (let i = 0; i < numPixels; i++) {\n      const y = imageFrame[yIndex++];\n      const cb = imageFrame[cbIndex++];\n      const cr = imageFrame[crIndex++];\n\n      colorBuffer[bufferIndex++] = y + 1.402 * (cr - 128); // red\n      colorBuffer[bufferIndex++] =\n        y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n      colorBuffer[bufferIndex++] = y + 1.772 * (cb - 128); // blue\n      colorBuffer[bufferIndex++] = 255; // alpha\n    }\n\n    return;\n  }\n\n  for (let i = 0; i < numPixels; i++) {\n    const y = imageFrame[yIndex++];\n    const cb = imageFrame[cbIndex++];\n    const cr = imageFrame[crIndex++];\n\n    colorBuffer[bufferIndex++] = y + 1.402 * (cr - 128); // red\n    colorBuffer[bufferIndex++] =\n      y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n    colorBuffer[bufferIndex++] = y + 1.772 * (cb - 128); // blue\n  }\n}\n","/* eslint no-bitwise: 0 */\n\nfunction convertLUTto8Bit(lut, shift) {\n  const numEntries = lut.length;\n  const cleanedLUT = new Uint8ClampedArray(numEntries);\n\n  for (let i = 0; i < numEntries; ++i) {\n    cleanedLUT[i] = lut[i] >> shift;\n  }\n\n  return cleanedLUT;\n}\n\n/**\n * Convert pixel data with PALETTE COLOR Photometric Interpretation to RGBA\n *\n * @param {ImageFrame} imageFrame\n * @param {Uint8ClampedArray} colorBuffer\n * @returns {void}\n */\nexport default function (imageFrame, colorBuffer, useRGBA) {\n  const numPixels = imageFrame.columns * imageFrame.rows;\n  const pixelData = imageFrame.pixelData;\n  const rData = imageFrame.redPaletteColorLookupTableData;\n  const gData = imageFrame.greenPaletteColorLookupTableData;\n  const bData = imageFrame.bluePaletteColorLookupTableData;\n  const len = imageFrame.redPaletteColorLookupTableData.length;\n\n  let palIndex = 0;\n\n  let bufferIndex = 0;\n\n  const start = imageFrame.redPaletteColorLookupTableDescriptor[1];\n  const shift =\n    imageFrame.redPaletteColorLookupTableDescriptor[2] === 8 ? 0 : 8;\n\n  const rDataCleaned = convertLUTto8Bit(rData, shift);\n  const gDataCleaned = convertLUTto8Bit(gData, shift);\n  const bDataCleaned = convertLUTto8Bit(bData, shift);\n\n  if (useRGBA) {\n    for (let i = 0; i < numPixels; ++i) {\n      let value = pixelData[palIndex++];\n\n      if (value < start) {\n        value = 0;\n      } else if (value > start + len - 1) {\n        value = len - 1;\n      } else {\n        value -= start;\n      }\n\n      colorBuffer[bufferIndex++] = rDataCleaned[value];\n      colorBuffer[bufferIndex++] = gDataCleaned[value];\n      colorBuffer[bufferIndex++] = bDataCleaned[value];\n      colorBuffer[bufferIndex++] = 255;\n    }\n\n    return;\n  }\n\n  for (let i = 0; i < numPixels; ++i) {\n    let value = pixelData[palIndex++];\n\n    if (value < start) {\n      value = 0;\n    } else if (value > start + len - 1) {\n      value = len - 1;\n    } else {\n      value -= start;\n    }\n\n    colorBuffer[bufferIndex++] = rDataCleaned[value];\n    colorBuffer[bufferIndex++] = gDataCleaned[value];\n    colorBuffer[bufferIndex++] = bDataCleaned[value];\n  }\n}\n","function getLutDescriptor(dataSet, tag) {\n  if (!dataSet.elements[tag] || dataSet.elements[tag].length !== 6) {\n    return;\n  }\n\n  return [\n    dataSet.uint16(tag, 0),\n    dataSet.uint16(tag, 1),\n    dataSet.uint16(tag, 2),\n  ];\n}\n\nfunction getLutData(lutDataSet, tag, lutDescriptor) {\n  const lut = [];\n  const lutData = lutDataSet.elements[tag];\n\n  for (let i = 0; i < lutDescriptor[0]; i++) {\n    // Output range is always unsigned\n    if (lutDescriptor[2] === 16) {\n      lut[i] = lutDataSet.uint16(tag, i);\n    } else {\n      lut[i] = lutDataSet.byteArray[i + lutData.dataOffset];\n    }\n  }\n\n  return lut;\n}\n\nfunction populatePaletteColorLut(dataSet, imagePixelModule) {\n  imagePixelModule.redPaletteColorLookupTableDescriptor = getLutDescriptor(\n    dataSet,\n    'x00281101'\n  );\n  imagePixelModule.greenPaletteColorLookupTableDescriptor = getLutDescriptor(\n    dataSet,\n    'x00281102'\n  );\n  imagePixelModule.bluePaletteColorLookupTableDescriptor = getLutDescriptor(\n    dataSet,\n    'x00281103'\n  );\n\n  // The first Palette Color Lookup Table Descriptor value is the number of entries in the lookup table.\n  // When the number of table entries is equal to 2ˆ16 then this value shall be 0.\n  // See http://dicom.nema.org/MEDICAL/DICOM/current/output/chtml/part03/sect_C.7.6.3.html#sect_C.7.6.3.1.5\n  if (imagePixelModule.redPaletteColorLookupTableDescriptor[0] === 0) {\n    imagePixelModule.redPaletteColorLookupTableDescriptor[0] = 65536;\n    imagePixelModule.greenPaletteColorLookupTableDescriptor[0] = 65536;\n    imagePixelModule.bluePaletteColorLookupTableDescriptor[0] = 65536;\n  }\n\n  // The third Palette Color Lookup Table Descriptor value specifies the number of bits for each entry in the Lookup Table Data.\n  // It shall take the value of 8 or 16.\n  // The LUT Data shall be stored in a format equivalent to 8 bits allocated when the number of bits for each entry is 8, and 16 bits allocated when the number of bits for each entry is 16, where in both cases the high bit is equal to bits allocated-1.\n  // The third value shall be identical for each of the Red, Green and Blue Palette Color Lookup Table Descriptors.\n  //\n  // Note: Some implementations have encoded 8 bit entries with 16 bits allocated, padding the high bits;\n  // this can be detected by comparing the number of entries specified in the LUT Descriptor with the actual value length of the LUT Data entry.\n  // The value length in bytes should equal the number of entries if bits allocated is 8, and be twice as long if bits allocated is 16.\n  const numLutEntries =\n    imagePixelModule.redPaletteColorLookupTableDescriptor[0];\n  const lutData = dataSet.elements.x00281201;\n  const lutBitsAllocated = lutData.length === numLutEntries ? 8 : 16;\n\n  // If the descriptors do not appear to have the correct values, correct them\n  if (\n    imagePixelModule.redPaletteColorLookupTableDescriptor[2] !==\n    lutBitsAllocated\n  ) {\n    imagePixelModule.redPaletteColorLookupTableDescriptor[2] = lutBitsAllocated;\n    imagePixelModule.greenPaletteColorLookupTableDescriptor[2] =\n      lutBitsAllocated;\n    imagePixelModule.bluePaletteColorLookupTableDescriptor[2] =\n      lutBitsAllocated;\n  }\n\n  imagePixelModule.redPaletteColorLookupTableData = getLutData(\n    dataSet,\n    'x00281201',\n    imagePixelModule.redPaletteColorLookupTableDescriptor\n  );\n  imagePixelModule.greenPaletteColorLookupTableData = getLutData(\n    dataSet,\n    'x00281202',\n    imagePixelModule.greenPaletteColorLookupTableDescriptor\n  );\n  imagePixelModule.bluePaletteColorLookupTableData = getLutData(\n    dataSet,\n    'x00281203',\n    imagePixelModule.bluePaletteColorLookupTableDescriptor\n  );\n}\n\nfunction populateSmallestLargestPixelValues(dataSet, imagePixelModule) {\n  const pixelRepresentation = dataSet.uint16('x00280103');\n\n  if (pixelRepresentation === 0) {\n    imagePixelModule.smallestPixelValue = dataSet.uint16('x00280106');\n    imagePixelModule.largestPixelValue = dataSet.uint16('x00280107');\n  } else {\n    imagePixelModule.smallestPixelValue = dataSet.int16('x00280106');\n    imagePixelModule.largestPixelValue = dataSet.int16('x00280107');\n  }\n}\n\nfunction getImagePixelModule(dataSet) {\n  const imagePixelModule = {\n    samplesPerPixel: dataSet.uint16('x00280002'),\n    photometricInterpretation: dataSet.string('x00280004'),\n    rows: dataSet.uint16('x00280010'),\n    columns: dataSet.uint16('x00280011'),\n    bitsAllocated: dataSet.uint16('x00280100'),\n    bitsStored: dataSet.uint16('x00280101'),\n    highBit: dataSet.uint16('x00280102'),\n    pixelRepresentation: dataSet.uint16('x00280103'),\n    planarConfiguration: dataSet.uint16('x00280006'),\n    pixelAspectRatio: dataSet.string('x00280034'),\n  };\n\n  populateSmallestLargestPixelValues(dataSet, imagePixelModule);\n\n  if (\n    imagePixelModule.photometricInterpretation === 'PALETTE COLOR' &&\n    dataSet.elements.x00281101\n  ) {\n    populatePaletteColorLut(dataSet, imagePixelModule);\n  }\n\n  return imagePixelModule;\n}\n\nexport default getImagePixelModule;\n","function getLUT(pixelRepresentation, lutDataSet) {\n  let numLUTEntries = lutDataSet.uint16('x00283002', 0);\n\n  if (numLUTEntries === 0) {\n    numLUTEntries = 65535;\n  }\n  let firstValueMapped = 0;\n\n  if (pixelRepresentation === 0) {\n    firstValueMapped = lutDataSet.uint16('x00283002', 1);\n  } else {\n    firstValueMapped = lutDataSet.int16('x00283002', 1);\n  }\n  const numBitsPerEntry = lutDataSet.uint16('x00283002', 2);\n  // console.log('LUT(', numLUTEntries, ',', firstValueMapped, ',', numBitsPerEntry, ')');\n  const lut = {\n    id: '1',\n    firstValueMapped,\n    numBitsPerEntry,\n    lut: [],\n  };\n\n  // console.log(\"minValue=\", minValue, \"; maxValue=\", maxValue);\n  for (let i = 0; i < numLUTEntries; i++) {\n    if (pixelRepresentation === 0) {\n      lut.lut[i] = lutDataSet.uint16('x00283006', i);\n    } else {\n      lut.lut[i] = lutDataSet.int16('x00283006', i);\n    }\n  }\n\n  return lut;\n}\n\nfunction getLUTs(pixelRepresentation, lutSequence) {\n  if (!lutSequence || !lutSequence.items || !lutSequence.items.length) {\n    return;\n  }\n  const luts = [];\n\n  for (let i = 0; i < lutSequence.items.length; i++) {\n    const lutDataSet = lutSequence.items[i].dataSet;\n    const lut = getLUT(pixelRepresentation, lutDataSet);\n\n    if (lut) {\n      luts.push(lut);\n    }\n  }\n\n  return luts;\n}\n\nexport default getLUTs;\n","/* eslint no-bitwise: 0 */\n\nfunction getMinStoredPixelValue(dataSet) {\n  const pixelRepresentation = dataSet.uint16('x00280103');\n  const bitsStored = dataSet.uint16('x00280101');\n\n  if (pixelRepresentation === 0) {\n    return 0;\n  }\n\n  return -1 << (bitsStored - 1);\n}\n\n// 0 = unsigned / US, 1 = signed / SS\nfunction getModalityLUTOutputPixelRepresentation(dataSet) {\n  // CT SOP Classes are always signed\n  const sopClassUID = dataSet.string('x00080016');\n\n  if (\n    sopClassUID === '1.2.840.10008.5.1.4.1.1.2' ||\n    sopClassUID === '1.2.840.10008.5.1.4.1.1.2.1'\n  ) {\n    return 1;\n  }\n\n  // if rescale intercept and rescale slope are present, pass the minimum stored\n  // pixel value through them to see if we get a signed output range\n  const rescaleIntercept = dataSet.floatString('x00281052');\n  const rescaleSlope = dataSet.floatString('x00281053');\n\n  if (rescaleIntercept !== undefined && rescaleSlope !== undefined) {\n    const minStoredPixelValue = getMinStoredPixelValue(dataSet); //\n    const minModalityLutValue =\n      minStoredPixelValue * rescaleSlope + rescaleIntercept;\n\n    if (minModalityLutValue < 0) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  // Output of non linear modality lut is always unsigned\n  if (dataSet.elements.x00283000 && dataSet.elements.x00283000.length > 0) {\n    return 0;\n  }\n\n  // If no modality lut transform, output is same as pixel representation\n  return dataSet.uint16('x00280103');\n}\n\nexport default getModalityLUTOutputPixelRepresentation;\n","function getNumberValues(dataSet, tag, minimumLength) {\n  const values = [];\n  const valueAsString = dataSet.string(tag);\n\n  if (!valueAsString) {\n    return;\n  }\n  const split = valueAsString.split('\\\\');\n\n  if (minimumLength && split.length < minimumLength) {\n    return;\n  }\n  for (let i = 0; i < split.length; i++) {\n    values.push(parseFloat(split[i]));\n  }\n\n  return values;\n}\n\nexport default getNumberValues;\n","/**\n * Returns the raw value\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [index] - the index of the value in a multi-valued element, default is 0\n * @param [defaultValue] - The default value to return if the element does not exist\n * @returns {*}\n */\nfunction getValue(element, index, defaultValue) {\n  index = index || 0;\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // make sure we have the specified index\n  if (element.Value.length <= index) {\n    return defaultValue;\n  }\n\n  return element.Value[index];\n}\n\nexport default getValue;\n","import getValue from './getValue.js';\n\n/**\n * Returns the first string value as a Javascript number\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [index] - the index of the value in a multi-valued element, default is 0\n * @param [defaultValue] - The default value to return if the element does not exist\n * @returns {*}\n */\nfunction getNumberString(element, index, defaultValue) {\n  const value = getValue(element, index, defaultValue);\n\n  if (value === undefined) {\n    return;\n  }\n\n  return parseFloat(value);\n}\n\nexport default getNumberString;\n","import getValue from './getValue.js';\n\nfunction getNumberValue(element, index) {\n  const value = getValue(element, index);\n\n  if (value === undefined) {\n    return;\n  }\n\n  return parseFloat(value);\n}\n\nexport default getNumberValue;\n","/**\n * Returns the values as an array of javascript numbers\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [minimumLength] - the minimum number of values\n * @returns {*}\n */\nfunction getNumberValues(element, minimumLength) {\n  if (!element) {\n    return;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return;\n  }\n  // make sure we have the expected length\n  if (minimumLength && element.Value.length < minimumLength) {\n    return;\n  }\n\n  const values = [];\n\n  for (let i = 0; i < element.Value.length; i++) {\n    values.push(parseFloat(element.Value[i]));\n  }\n\n  return values;\n}\n\nexport default getNumberValues;\n","/**\n * Removes the data loader scheme from the imageId\n *\n * @param {string} imageId Image ID\n * @returns {string} imageId without the data loader scheme\n * @memberof Cache\n */\nexport default function imageIdToURI(imageId) {\n  const colonIndex = imageId.indexOf(':');\n\n  return imageId.substring(colonIndex + 1);\n}\n","import imageIdToURI from '../imageIdToURI.js';\n\nlet metadataByImageURI = [];\n\nfunction add(imageId, metadata) {\n  const imageURI = imageIdToURI(imageId);\n\n  metadataByImageURI[imageURI] = metadata;\n}\n\nfunction get(imageId) {\n  const imageURI = imageIdToURI(imageId);\n\n  return metadataByImageURI[imageURI];\n}\n\nfunction remove(imageId) {\n  const imageURI = imageIdToURI(imageId);\n\n  metadataByImageURI[imageURI] = undefined;\n}\n\nfunction purge() {\n  metadataByImageURI = [];\n}\n\nexport default {\n  add,\n  get,\n  remove,\n  purge,\n};\n","import external from '../../../externalModules.js';\nimport getNumberValues from './getNumberValues.js';\nimport getValue from './getValue.js';\nimport getNumberValue from './getNumberValue.js';\nimport getOverlayPlaneModule from './getOverlayPlaneModule.js';\nimport metaDataManager from '../metaDataManager.js';\n\nfunction metaDataProvider(type, imageId) {\n  const { dicomParser } = external;\n  const metaData = metaDataManager.get(imageId);\n\n  if (!metaData) {\n    return;\n  }\n\n  if (type === 'generalSeriesModule') {\n    return {\n      modality: getValue(metaData['00080060']),\n      seriesInstanceUID: getValue(metaData['0020000E']),\n      seriesNumber: getNumberValue(metaData['00200011']),\n      studyInstanceUID: getValue(metaData['0020000D']),\n      seriesDate: dicomParser.parseDA(getValue(metaData['00080021'])),\n      seriesTime: dicomParser.parseTM(getValue(metaData['00080031'], 0, '')),\n    };\n  }\n\n  if (type === 'patientStudyModule') {\n    return {\n      patientAge: getNumberValue(metaData['00101010']),\n      patientSize: getNumberValue(metaData['00101020']),\n      patientWeight: getNumberValue(metaData['00101030']),\n    };\n  }\n\n  if (type === 'imagePlaneModule') {\n    const imageOrientationPatient = getNumberValues(metaData['00200037'], 6);\n    const imagePositionPatient = getNumberValues(metaData['00200032'], 3);\n    const pixelSpacing = getNumberValues(metaData['00280030'], 2);\n\n    let columnPixelSpacing = null;\n\n    let rowPixelSpacing = null;\n\n    if (pixelSpacing) {\n      rowPixelSpacing = pixelSpacing[0];\n      columnPixelSpacing = pixelSpacing[1];\n    }\n\n    let rowCosines = null;\n\n    let columnCosines = null;\n\n    if (imageOrientationPatient) {\n      rowCosines = [\n        parseFloat(imageOrientationPatient[0]),\n        parseFloat(imageOrientationPatient[1]),\n        parseFloat(imageOrientationPatient[2]),\n      ];\n      columnCosines = [\n        parseFloat(imageOrientationPatient[3]),\n        parseFloat(imageOrientationPatient[4]),\n        parseFloat(imageOrientationPatient[5]),\n      ];\n    }\n\n    return {\n      frameOfReferenceUID: getValue(metaData['00200052']),\n      rows: getNumberValue(metaData['00280010']),\n      columns: getNumberValue(metaData['00280011']),\n      imageOrientationPatient,\n      rowCosines,\n      columnCosines,\n      imagePositionPatient,\n      sliceThickness: getNumberValue(metaData['00180050']),\n      sliceLocation: getNumberValue(metaData['00201041']),\n      pixelSpacing,\n      rowPixelSpacing,\n      columnPixelSpacing,\n    };\n  }\n\n  if (type === 'imagePixelModule') {\n    return {\n      samplesPerPixel: getNumberValue(metaData['00280002']),\n      photometricInterpretation: getValue(metaData['00280004']),\n      rows: getNumberValue(metaData['00280010']),\n      columns: getNumberValue(metaData['00280011']),\n      bitsAllocated: getNumberValue(metaData['00280100']),\n      bitsStored: getNumberValue(metaData['00280101']),\n      highBit: getValue(metaData['00280102']),\n      pixelRepresentation: getNumberValue(metaData['00280103']),\n      planarConfiguration: getNumberValue(metaData['00280006']),\n      pixelAspectRatio: getValue(metaData['00280034']),\n      smallestPixelValue: getNumberValue(metaData['00280106']),\n      largestPixelValue: getNumberValue(metaData['00280107']),\n      redPaletteColorLookupTableDescriptor: getNumberValues(\n        metaData['00281101']\n      ),\n      greenPaletteColorLookupTableDescriptor: getNumberValues(\n        metaData['00281102']\n      ),\n      bluePaletteColorLookupTableDescriptor: getNumberValues(\n        metaData['00281103']\n      ),\n      redPaletteColorLookupTableData: getNumberValues(metaData['00281201']),\n      greenPaletteColorLookupTableData: getNumberValues(metaData['00281202']),\n      bluePaletteColorLookupTableData: getNumberValues(metaData['00281203']),\n    };\n  }\n\n  if (type === 'voiLutModule') {\n    return {\n      // TODO VOT LUT Sequence\n      windowCenter: getNumberValues(metaData['00281050'], 1),\n      windowWidth: getNumberValues(metaData['00281051'], 1),\n    };\n  }\n\n  if (type === 'modalityLutModule') {\n    return {\n      // TODO VOT LUT Sequence\n      rescaleIntercept: getNumberValue(metaData['00281052']),\n      rescaleSlope: getNumberValue(metaData['00281053']),\n      rescaleType: getValue(metaData['00281054']),\n    };\n  }\n\n  if (type === 'sopCommonModule') {\n    return {\n      sopClassUID: getValue(metaData['00080016']),\n      sopInstanceUID: getValue(metaData['00080018']),\n    };\n  }\n\n  if (type === 'petIsotopeModule') {\n    const radiopharmaceuticalInfo = getValue(metaData['00540016']);\n\n    if (radiopharmaceuticalInfo === undefined) {\n      return;\n    }\n\n    return {\n      radiopharmaceuticalInfo: {\n        radiopharmaceuticalStartTime: dicomParser.parseTM(\n          getValue(radiopharmaceuticalInfo['00181072'], 0, '')\n        ),\n        radionuclideTotalDose: getNumberValue(\n          radiopharmaceuticalInfo['00181074']\n        ),\n        radionuclideHalfLife: getNumberValue(\n          radiopharmaceuticalInfo['00181075']\n        ),\n      },\n    };\n  }\n\n  if (type === 'overlayPlaneModule') {\n    return getOverlayPlaneModule(metaData);\n  }\n\n  // Note: this is not a DICOM module, but a useful metadata that can be\n  // retrieved from the image\n  if (type === 'transferSyntax') {\n    return {\n      transferSyntaxUID: getValue(metaData['00020010']),\n    };\n  }\n}\n\nexport default metaDataProvider;\n","import getValue from './getValue.js';\nimport getNumberValue from './getNumberValue.js';\n\nexport default function getOverlayPlaneModule(metaData) {\n  const overlays = [];\n\n  for (let overlayGroup = 0x00; overlayGroup <= 0x1e; overlayGroup += 0x02) {\n    let groupStr = `x60${overlayGroup.toString(16)}`;\n\n    if (groupStr.length === 4) {\n      groupStr = `x600${overlayGroup.toString(16)}`;\n    }\n\n    const data = getValue(metaData[`${groupStr}3000`]);\n\n    if (!data) {\n      continue;\n    }\n\n    const pixelData = [];\n\n    for (let i = 0; i < data.length; i++) {\n      for (let k = 0; k < 8; k++) {\n        const byte_as_int = metaData.Value[data.dataOffset + i];\n\n        pixelData[i * 8 + k] = (byte_as_int >> k) & 0b1; // eslint-disable-line no-bitwise\n      }\n    }\n\n    overlays.push({\n      rows: getNumberValue(metaData[`${groupStr}0010`]),\n      columns: getNumberValue(metaData[`${groupStr}0011`]),\n      type: getValue(metaData[`${groupStr}0040`]),\n      x: getNumberValue(metaData[`${groupStr}0050`], 1) - 1,\n      y: getNumberValue(metaData[`${groupStr}0050`], 0) - 1,\n      pixelData,\n      description: getValue(metaData[`${groupStr}0022`]),\n      label: getValue(metaData[`${groupStr}1500`]),\n      roiArea: getValue(metaData[`${groupStr}1301`]),\n      roiMean: getValue(metaData[`${groupStr}1302`]),\n      roiStandardDeviation: getValue(metaData[`${groupStr}1303`]),\n    });\n  }\n\n  return {\n    overlays,\n  };\n}\n","function checkToken(token, data, dataOffset) {\n  if (dataOffset + token.length > data.length) {\n    return false;\n  }\n\n  let endIndex = dataOffset;\n\n  for (let i = 0; i < token.length; i++) {\n    if (token[i] !== data[endIndex++]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction stringToUint8Array(str) {\n  const uint = new Uint8Array(str.length);\n\n  for (let i = 0, j = str.length; i < j; i++) {\n    uint[i] = str.charCodeAt(i);\n  }\n\n  return uint;\n}\n\nfunction findIndexOfString(data, str, offset) {\n  offset = offset || 0;\n\n  const token = stringToUint8Array(str);\n\n  for (let i = offset; i < data.length; i++) {\n    if (token[0] === data[i]) {\n      // console.log('match @', i);\n      if (checkToken(token, data, i)) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\nexport default findIndexOfString;\n","let options = {\n  // callback to open the object\n  open(xhr, url) {\n    xhr.open('get', url, true);\n  },\n  // callback allowing customization of the xhr (e.g. adding custom auth headers, cors, etc)\n  beforeSend(/* xhr, imageId */) {},\n  // callback allowing modification of the xhr response before creating image objects\n  beforeProcessing(xhr) {\n    return Promise.resolve(xhr.response);\n  },\n  // callback allowing modification of newly created image objects\n  imageCreated(/* image */) {},\n  strict: false,\n  decodeConfig: {\n    convertFloatPixelDataToInt: true,\n  },\n};\n\nexport function setOptions(newOptions) {\n  options = Object.assign(options, newOptions);\n}\n\nexport function getOptions() {\n  return options;\n}\n","import external from '../../externalModules.js';\nimport { getOptions } from './options.js';\n\nfunction xhrRequest(url, imageId, defaultHeaders = {}, params = {}) {\n  const { cornerstone } = external;\n  const options = getOptions();\n\n  const errorInterceptor = (xhr) => {\n    if (typeof options.errorInterceptor === 'function') {\n      const error = new Error('request failed');\n\n      error.request = xhr;\n      error.response = xhr.response;\n      error.status = xhr.status;\n      options.errorInterceptor(error);\n    }\n  };\n\n  // Make the request for the DICOM P10 SOP Instance\n  const xhr = new XMLHttpRequest();\n  const promise = new Promise((resolve, reject) => {\n    options.open(xhr, url, defaultHeaders, params);\n    const beforeSendHeaders = options.beforeSend(\n      xhr,\n      imageId,\n      defaultHeaders,\n      params\n    );\n\n    xhr.responseType = 'arraybuffer';\n\n    const headers = Object.assign({}, defaultHeaders, beforeSendHeaders);\n\n    Object.keys(headers).forEach(function (key) {\n      if (headers[key] === null) {\n        return;\n      }\n      if (key === 'Accept' && url.indexOf('accept=') !== -1) {\n        return;\n      }\n      xhr.setRequestHeader(key, headers[key]);\n    });\n\n    params.deferred = {\n      resolve,\n      reject,\n    };\n    params.url = url;\n    params.imageId = imageId;\n\n    // Event triggered when downloading an image starts\n    xhr.onloadstart = function (event) {\n      // Action\n      if (options.onloadstart) {\n        options.onloadstart(event, params);\n      }\n\n      // Event\n      const eventData = {\n        url,\n        imageId,\n      };\n\n      cornerstone.triggerEvent(\n        cornerstone.events,\n        'cornerstoneimageloadstart',\n        eventData\n      );\n    };\n\n    // Event triggered when downloading an image ends\n    xhr.onloadend = function (event) {\n      // Action\n      if (options.onloadend) {\n        options.onloadend(event, params);\n      }\n\n      const eventData = {\n        url,\n        imageId,\n      };\n\n      // Event\n      cornerstone.triggerEvent(\n        cornerstone.events,\n        'cornerstoneimageloadend',\n        eventData\n      );\n    };\n\n    // handle response data\n    xhr.onreadystatechange = function (event) {\n      // Action\n      if (options.onreadystatechange) {\n        options.onreadystatechange(event, params);\n\n        return;\n      }\n\n      // Default action\n      // TODO: consider sending out progress messages here as we receive\n      // the pixel data\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          options\n            .beforeProcessing(xhr)\n            .then(resolve)\n            .catch(() => {\n              errorInterceptor(xhr);\n              // request failed, reject the Promise\n              reject(xhr);\n            });\n        } else {\n          errorInterceptor(xhr);\n          // request failed, reject the Promise\n          reject(xhr);\n        }\n      }\n    };\n\n    // Event triggered when downloading an image progresses\n    xhr.onprogress = function (oProgress) {\n      // console.log('progress:',oProgress)\n      const loaded = oProgress.loaded; // evt.loaded the bytes browser receive\n\n      let total;\n\n      let percentComplete;\n\n      if (oProgress.lengthComputable) {\n        total = oProgress.total; // evt.total the total bytes seted by the header\n        percentComplete = Math.round((loaded / total) * 100);\n      }\n\n      // Action\n      if (options.onprogress) {\n        options.onprogress(oProgress, params);\n      }\n\n      // Event\n      const eventData = {\n        url,\n        imageId,\n        loaded,\n        total,\n        percentComplete,\n      };\n\n      cornerstone.triggerEvent(\n        cornerstone.events,\n        cornerstone.EVENTS.IMAGE_LOAD_PROGRESS,\n        eventData\n      );\n    };\n    xhr.onerror = function () {\n      errorInterceptor(xhr);\n      reject(xhr);\n    };\n\n    xhr.onabort = function () {\n      errorInterceptor(xhr);\n      reject(xhr);\n    };\n    xhr.send();\n  });\n\n  promise.xhr = xhr;\n\n  return promise;\n}\n\nexport default xhrRequest;\n","import { default as xhrRequest } from './xhrRequest.js';\nimport { setOptions, getOptions } from './options.js';\n\nconst internal = {\n  xhrRequest,\n  setOptions,\n  getOptions,\n};\n\nexport { setOptions, getOptions, xhrRequest, internal };\n","import { xhrRequest } from '../internal/index.js';\nimport findIndexOfString from './findIndexOfString.js';\n\nfunction findBoundary(header) {\n  for (let i = 0; i < header.length; i++) {\n    if (header[i].substr(0, 2) === '--') {\n      return header[i];\n    }\n  }\n}\n\nfunction findContentType(header) {\n  for (let i = 0; i < header.length; i++) {\n    if (header[i].substr(0, 13) === 'Content-Type:') {\n      return header[i].substr(13).trim();\n    }\n  }\n}\n\nfunction uint8ArrayToString(data, offset, length) {\n  offset = offset || 0;\n  length = length || data.length - offset;\n  let str = '';\n\n  for (let i = offset; i < offset + length; i++) {\n    str += String.fromCharCode(data[i]);\n  }\n\n  return str;\n}\n\nfunction getPixelData(uri, imageId, mediaType = 'application/octet-stream') {\n  const headers = {\n    Accept: mediaType,\n  };\n\n  return new Promise((resolve, reject) => {\n    const loadPromise = xhrRequest(uri, imageId, headers);\n    const { xhr } = loadPromise;\n\n    loadPromise.then(function (imageFrameAsArrayBuffer) {\n      // request succeeded, Parse the multi-part mime response\n      const response = new Uint8Array(imageFrameAsArrayBuffer);\n\n      const contentType = xhr.getResponseHeader('Content-Type');\n\n      if (contentType.indexOf('multipart') === -1) {\n        resolve({\n          contentType,\n          imageFrame: {\n            pixelData: response,\n          },\n        });\n\n        return;\n      }\n\n      // First look for the multipart mime header\n      const tokenIndex = findIndexOfString(response, '\\r\\n\\r\\n');\n\n      if (tokenIndex === -1) {\n        reject(new Error('invalid response - no multipart mime header'));\n      }\n      const header = uint8ArrayToString(response, 0, tokenIndex);\n      // Now find the boundary  marker\n      const split = header.split('\\r\\n');\n      const boundary = findBoundary(split);\n\n      if (!boundary) {\n        reject(new Error('invalid response - no boundary marker'));\n      }\n      const offset = tokenIndex + 4; // skip over the \\r\\n\\r\\n\n\n      // find the terminal boundary marker\n      const endIndex = findIndexOfString(response, boundary, offset);\n\n      if (endIndex === -1) {\n        reject(new Error('invalid response - terminating boundary not found'));\n      }\n\n      // Remove \\r\\n from the length\n      const length = endIndex - offset - 2;\n\n      // return the info for this pixel data\n      resolve({\n        contentType: findContentType(split),\n        imageFrame: {\n          pixelData: new Uint8Array(imageFrameAsArrayBuffer, offset, length),\n        },\n      });\n    }, reject);\n  });\n}\n\nexport default getPixelData;\n","import _Symbol from \"@babel/runtime-corejs3/core-js/symbol\";\nimport _Symbol$iterator from \"@babel/runtime-corejs3/core-js/symbol/iterator\";\nexport default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof _Symbol && \"symbol\" == typeof _Symbol$iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof _Symbol && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nimport _Symbol$toPrimitive from \"@babel/runtime-corejs3/core-js/symbol/to-primitive\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[_Symbol$toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _Object$defineProperty from \"@babel/runtime-corejs3/core-js/object/define-property\";\nimport toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import external from '../externalModules.js';\n\nfunction getImageFrame(imageId) {\n  const { cornerstone } = external;\n  const imagePixelModule = cornerstone.metaData.get(\n    'imagePixelModule',\n    imageId\n  );\n\n  return {\n    samplesPerPixel: imagePixelModule.samplesPerPixel,\n    photometricInterpretation: imagePixelModule.photometricInterpretation,\n    planarConfiguration: imagePixelModule.planarConfiguration,\n    rows: imagePixelModule.rows,\n    columns: imagePixelModule.columns,\n    bitsAllocated: imagePixelModule.bitsAllocated,\n    bitsStored: imagePixelModule.bitsStored,\n    pixelRepresentation: imagePixelModule.pixelRepresentation, // 0 = unsigned,\n    smallestPixelValue: imagePixelModule.smallestPixelValue,\n    largestPixelValue: imagePixelModule.largestPixelValue,\n    redPaletteColorLookupTableDescriptor:\n      imagePixelModule.redPaletteColorLookupTableDescriptor,\n    greenPaletteColorLookupTableDescriptor:\n      imagePixelModule.greenPaletteColorLookupTableDescriptor,\n    bluePaletteColorLookupTableDescriptor:\n      imagePixelModule.bluePaletteColorLookupTableDescriptor,\n    redPaletteColorLookupTableData:\n      imagePixelModule.redPaletteColorLookupTableData,\n    greenPaletteColorLookupTableData:\n      imagePixelModule.greenPaletteColorLookupTableData,\n    bluePaletteColorLookupTableData:\n      imagePixelModule.bluePaletteColorLookupTableData,\n    pixelData: undefined, // populated later after decoding\n  };\n}\n\nexport default getImageFrame;\n","\nimport worker from \"!!../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"(()=>{var A,I,g={8327:(A,I,g)=>{var B,Q=\\\"/\\\",C=(B=(B=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(A){var I,C=void 0!==(A=A||{})?A:{},E={};for(I in C)C.hasOwnProperty(I)&&(E[I]=C[I]);var i,o,D=[],w=!1,a=!1;w=\\\"object\\\"==typeof window,a=\\\"function\\\"==typeof importScripts,i=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node&&!w&&!a,o=!w&&!i&&!a;var F,G,s,y,h=\\\"\\\";i?(h=Q+\\\"/\\\",F=function(A,I){return s||(s=g(981)),y||(y=g(1209)),A=y.normalize(A),s.readFileSync(A,I?null:\\\"utf8\\\")},G=function(A){var I=F(A,!0);return I.buffer||(I=new Uint8Array(I)),r(I.buffer),I},process.argv.length>1&&process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\"),D=process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(A){if(!(A instanceof pI))throw A})),process.on(\\\"unhandledRejection\\\",z),C.inspect=function(){return\\\"[Emscripten Module object]\\\"}):o?(\\\"undefined\\\"!=typeof read&&(F=function(A){return read(A)}),G=function(A){var I;return\\\"function\\\"==typeof readbuffer?new Uint8Array(readbuffer(A)):(r(\\\"object\\\"==typeof(I=read(A,\\\"binary\\\"))),I)},\\\"undefined\\\"!=typeof scriptArgs?D=scriptArgs:void 0!==arguments&&(D=arguments),\\\"undefined\\\"!=typeof print&&(\\\"undefined\\\"==typeof console&&(console={}),console.log=print,console.warn=console.error=\\\"undefined\\\"!=typeof printErr?printErr:print)):(w||a)&&(a?h=self.location.href:document.currentScript&&(h=document.currentScript.src),B&&(h=B),h=0!==h.indexOf(\\\"blob:\\\")?h.substr(0,h.lastIndexOf(\\\"/\\\")+1):\\\"\\\",F=function(A){var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.send(null),I.responseText},a&&(G=function(A){var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.responseType=\\\"arraybuffer\\\",I.send(null),new Uint8Array(I.response)}));var t=C.print||console.log.bind(console),c=C.printErr||console.warn.bind(console);for(I in E)E.hasOwnProperty(I)&&(C[I]=E[I]);E=null,C.arguments&&(D=C.arguments),C.thisProgram&&C.thisProgram,C.quit&&C.quit;var N,R,S=function(A){};C.wasmBinary&&(N=C.wasmBinary),C.noExitRuntime&&C.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&c(\\\"no native wasm support detected\\\");var U=new WebAssembly.Table({initial:181,maximum:181,element:\\\"anyfunc\\\"}),n=!1;function r(A,I){A||z(\\\"Assertion failed: \\\"+I)}var k,Y,e,H,J,K,M,L,d,l=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function f(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.subarray&&l)return l.decode(A.subarray(I,Q));for(var C=\\\"\\\";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else{var D=E-65536;C+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else C+=String.fromCharCode((31&E)<<6|i)}else C+=String.fromCharCode(E)}return C}function q(A,I){return A?f(e,A,I):\\\"\\\"}function b(A,I,g){return function(A,I,g,B){if(!(B>0))return 0;for(var Q=g,C=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=C)break;I[g++]=i}else if(i<=2047){if(g+1>=C)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=C)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=C)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-Q}(A,e,I,g)}function p(A,I){return A%I>0&&(A+=I-A%I),A}function u(A){k=A,C.HEAP8=Y=new Int8Array(A),C.HEAP16=H=new Int16Array(A),C.HEAP32=K=new Int32Array(A),C.HEAPU8=e=new Uint8Array(A),C.HEAPU16=J=new Uint16Array(A),C.HEAPU32=M=new Uint32Array(A),C.HEAPF32=L=new Float32Array(A),C.HEAPF64=d=new Float64Array(A)}\\\"undefined\\\"!=typeof TextDecoder&&new TextDecoder(\\\"utf-16le\\\");var Z=46048,W=C.TOTAL_MEMORY||1073741824;function X(A){for(;A.length>0;){var I=A.shift();if(\\\"function\\\"!=typeof I){var g=I.func;\\\"number\\\"==typeof g?void 0===I.arg?C.dynCall_v(g):C.dynCall_vi(g,I.arg):g(void 0===I.arg?null:I.arg)}else I()}}(R=C.wasmMemory?C.wasmMemory:new WebAssembly.Memory({initial:W/65536}))&&(k=R.buffer),W=k.byteLength,u(k),K[Z>>2]=5289088;var m=[],x=[],V=[],T=[],v=[];Math.abs,Math.ceil,Math.floor,Math.min;var j=0,O=null,P=null;function z(A){throw C.onAbort&&C.onAbort(A),t(A+=\\\"\\\"),c(A),n=!0,A=\\\"abort(\\\"+A+\\\"). Build with -s ASSERTIONS=1 for more info.\\\",new WebAssembly.RuntimeError(A)}C.preloadedImages={},C.preloadedAudios={};var _=\\\"data:application/octet-stream;base64,\\\";function $(A){return String.prototype.startsWith?A.startsWith(_):0===A.indexOf(_)}var AA,IA=\\\"charlswasm_decode.wasm\\\";function gA(){try{if(N)return new Uint8Array(N);if(G)return G(IA);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(A){z(A)}}function BA(A,I){T.unshift({func:A,arg:I})}$(IA)||(AA=IA,IA=C.locateFile?C.locateFile(AA,h):h+AA),x.push({func:function(){KI()}});var QA={},CA={};function EA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function iA(A){return this.fromWireType(M[A>>2])}var oA={},DA={},wA={},aA=48,FA=57;function GA(A){if(void 0===A)return\\\"_unknown\\\";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return I>=aA&&I<=FA?\\\"_\\\"+A:A}function sA(A,I){return A=GA(A),new Function(\\\"body\\\",\\\"return function \\\"+A+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(I)}function yA(A,I){var g=sA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+\\\"\\\\n\\\"+g.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},g}var hA=void 0;function tA(A){throw new hA(A)}function cA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&tA(\\\"Mismatched type converter count\\\");for(var Q=0;Q<A.length;++Q)rA(A[Q],B[Q])}A.forEach((function(A){wA[A]=I}));var Q=new Array(I.length),C=[],E=0;I.forEach((function(A,I){DA.hasOwnProperty(A)?Q[I]=DA[A]:(C.push(A),oA.hasOwnProperty(A)||(oA[A]=[]),oA[A].push((function(){Q[I]=DA[A],++E===C.length&&B(Q)})))})),0===C.length&&B(Q)}function NA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+A)}}var RA=void 0;function SA(A){for(var I=\\\"\\\",g=A;e[g];)I+=RA[e[g++]];return I}var UA=void 0;function nA(A){throw new UA(A)}function rA(A,I,g){if(g=g||{},!(\\\"argPackAdvance\\\"in I))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var B=I.name;if(A||nA('type \\\"'+B+'\\\" must have a positive integer typeid pointer'),DA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;nA(\\\"Cannot register type '\\\"+B+\\\"' twice\\\")}if(DA[A]=I,delete wA[A],oA.hasOwnProperty(A)){var Q=oA[A];delete oA[A],Q.forEach((function(A){A()}))}}function kA(A){if(!(this instanceof pA))return!1;if(!(A instanceof pA))return!1;for(var I=this.$$.ptrType.registeredClass,g=this.$$.ptr,B=A.$$.ptrType.registeredClass,Q=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)Q=B.upcast(Q),B=B.baseClass;return I===B&&g===Q}function YA(A){nA(A.$$.ptrType.registeredClass.name+\\\" instance already deleted\\\")}var eA=!1;function HA(A){}function JA(A){A.count.value-=1,0===A.count.value&&function(A){A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)}(A)}function KA(A){return\\\"undefined\\\"==typeof FinalizationGroup?(KA=function(A){return A},A):(eA=new FinalizationGroup((function(A){for(var I=A.next();!I.done;I=A.next()){var g=I.value;g.ptr?JA(g):console.warn(\\\"object already deleted: \\\"+g.ptr)}})),KA=function(A){return eA.register(A,A.$$,A.$$),A},HA=function(A){eA.unregister(A.$$)},KA(A))}function MA(){if(this.$$.ptr||YA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=KA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I}function LA(){this.$$.ptr||YA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&nA(\\\"Object already scheduled for deletion\\\"),HA(this),JA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function dA(){return!this.$$.ptr}var lA=void 0,fA=[];function qA(){for(;fA.length;){var A=fA.pop();A.$$.deleteScheduled=!1,A.delete()}}function bA(){return this.$$.ptr||YA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&nA(\\\"Object already scheduled for deletion\\\"),fA.push(this),1===fA.length&&lA&&lA(qA),this.$$.deleteScheduled=!0,this}function pA(){}var uA={};function ZA(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||nA(\\\"Function '\\\"+g+\\\"' called with an invalid number of arguments (\\\"+arguments.length+\\\") - expects one of (\\\"+A[I].overloadTable+\\\")!\\\"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function WA(A,I,g){C.hasOwnProperty(A)?((void 0===g||void 0!==C[A].overloadTable&&void 0!==C[A].overloadTable[g])&&nA(\\\"Cannot register public name '\\\"+A+\\\"' twice\\\"),ZA(C,A,A),C.hasOwnProperty(g)&&nA(\\\"Cannot register multiple overloads of a function with the same number of arguments (\\\"+g+\\\")!\\\"),C[A].overloadTable[g]=I):(C[A]=I,void 0!==g&&(C[A].numArguments=g))}function XA(A,I,g,B,Q,C,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=Q,this.getActualType=C,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}function mA(A,I,g){for(;I!==g;)I.upcast||nA(\\\"Expected null or instance of \\\"+g.name+\\\", got an instance of \\\"+I.name),A=I.upcast(A),I=I.baseClass;return A}function xA(A,I){if(null===I)return this.isReference&&nA(\\\"null is not a valid \\\"+this.name),0;I.$$||nA('Cannot pass \\\"'+cI(I)+'\\\" as a '+this.name),I.$$.ptr||nA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return mA(I.$$.ptr,g,this.registeredClass)}function VA(A,I){var g;if(null===I)return this.isReference&&nA(\\\"null is not a valid \\\"+this.name),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I.$$||nA('Cannot pass \\\"'+cI(I)+'\\\" as a '+this.name),I.$$.ptr||nA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),!this.isConst&&I.$$.ptrType.isConst&&nA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);var B=I.$$.ptrType.registeredClass;if(g=mA(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&nA(\\\"Passing raw pointer to smart pointer is illegal\\\"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:nA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var Q=I.clone();g=this.rawShare(g,tI((function(){Q.delete()}))),null!==A&&A.push(this.rawDestructor,g)}break;default:nA(\\\"Unsupporting sharing policy\\\")}return g}function TA(A,I){if(null===I)return this.isReference&&nA(\\\"null is not a valid \\\"+this.name),0;I.$$||nA('Cannot pass \\\"'+cI(I)+'\\\" as a '+this.name),I.$$.ptr||nA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),I.$$.ptrType.isConst&&nA(\\\"Cannot convert argument of type \\\"+I.$$.ptrType.name+\\\" to parameter type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return mA(I.$$.ptr,g,this.registeredClass)}function vA(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A}function jA(A){this.rawDestructor&&this.rawDestructor(A)}function OA(A){null!==A&&A.delete()}function PA(A,I,g){if(I===g)return A;if(void 0===g.baseClass)return null;var B=PA(A,I,g.baseClass);return null===B?null:g.downcast(B)}function zA(){return Object.keys(AI).length}function _A(){var A=[];for(var I in AI)AI.hasOwnProperty(I)&&A.push(AI[I]);return A}function $A(A){lA=A,fA.length&&lA&&lA(qA)}var AI={};function II(A,I){return I=function(A,I){for(void 0===I&&nA(\\\"ptr should not be undefined\\\");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I}(A,I),AI[I]}function gI(A,I){return I.ptrType&&I.ptr||tA(\\\"makeClassHandle requires ptr and ptrType\\\"),!!I.smartPtrType!=!!I.smartPtr&&tA(\\\"Both smartPtrType and smartPtr must be specified\\\"),I.count={value:1},KA(Object.create(A,{$$:{value:I}}))}function BI(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=II(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function Q(){return this.isSmartPointer?gI(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):gI(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var C,E=this.registeredClass.getActualType(I),i=uA[E];if(!i)return Q.call(this);C=this.isConst?i.constPointerType:i.pointerType;var o=PA(I,this.registeredClass,C.registeredClass);return null===o?Q.call(this):this.isSmartPointer?gI(C.registeredClass.instancePrototype,{ptrType:C,ptr:o,smartPtrType:this,smartPtr:A}):gI(C.registeredClass.instancePrototype,{ptrType:C,ptr:o})}function QI(A,I,g,B,Q,C,E,i,o,D,w){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=Q,this.pointeeType=C,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=w,Q||void 0!==I.baseClass?this.toWireType=VA:B?(this.toWireType=xA,this.destructorFunction=null):(this.toWireType=TA,this.destructorFunction=null)}function CI(A,I,g){C.hasOwnProperty(A)||tA(\\\"Replacing nonexistant public symbol\\\"),void 0!==C[A].overloadTable&&void 0!==g?C[A].overloadTable[g]=I:(C[A]=I,C[A].argCount=g)}function EI(A,I){var g;if(A=SA(A),void 0!==C[\\\"FUNCTION_TABLE_\\\"+A])g=C[\\\"FUNCTION_TABLE_\\\"+A][I];else if(\\\"undefined\\\"!=typeof FUNCTION_TABLE)g=FUNCTION_TABLE[I];else{var B=C[\\\"dynCall_\\\"+A];void 0===B&&void 0===(B=C[\\\"dynCall_\\\"+A.replace(/f/g,\\\"d\\\")])&&nA(\\\"No dynCall invoker for signature: \\\"+A),g=function(g){for(var B=[],Q=1;Q<A.length;++Q)B.push(\\\"a\\\"+Q);var C=\\\"return function dynCall_\\\"+A+\\\"_\\\"+I+\\\"(\\\"+B.join(\\\", \\\")+\\\") {\\\\n\\\";return C+=\\\"    return dynCall(rawFunction\\\"+(B.length?\\\", \\\":\\\"\\\")+B.join(\\\", \\\")+\\\");\\\\n\\\",C+=\\\"};\\\\n\\\",new Function(\\\"dynCall\\\",\\\"rawFunction\\\",C)(g,I)}(B)}return\\\"function\\\"!=typeof g&&nA(\\\"unknown function pointer with signature \\\"+A+\\\": \\\"+I),g}var iI=void 0;function oI(A){var I=lI(A),g=SA(I);return dI(I),g}function DI(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||DA[I]||(wA[I]?wA[I].forEach(A):(g.push(I),B[I]=!0))})),new iI(A+\\\": \\\"+g.map(oI).join([\\\", \\\"]))}function wI(A,I){for(var g=[],B=0;B<A;B++)g.push(K[(I>>2)+B]);return g}function aI(A,I,g,B,Q){var C=I.length;C<2&&nA(\\\"argTypes array size mismatch! Must at least get return value and 'this' types!\\\");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var D=\\\"void\\\"!==I[0].name,w=\\\"\\\",a=\\\"\\\";for(o=0;o<C-2;++o)w+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o,a+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o+\\\"Wired\\\";var F=\\\"return function \\\"+GA(A)+\\\"(\\\"+w+\\\") {\\\\nif (arguments.length !== \\\"+(C-2)+\\\") {\\\\nthrowBindingError('function \\\"+A+\\\" called with ' + arguments.length + ' arguments, expected \\\"+(C-2)+\\\" args!');\\\\n}\\\\n\\\";i&&(F+=\\\"var destructors = [];\\\\n\\\");var G=i?\\\"destructors\\\":\\\"null\\\",s=[\\\"throwBindingError\\\",\\\"invoker\\\",\\\"fn\\\",\\\"runDestructors\\\",\\\"retType\\\",\\\"classParam\\\"],y=[nA,B,Q,EA,I[0],I[1]];for(E&&(F+=\\\"var thisWired = classParam.toWireType(\\\"+G+\\\", this);\\\\n\\\"),o=0;o<C-2;++o)F+=\\\"var arg\\\"+o+\\\"Wired = argType\\\"+o+\\\".toWireType(\\\"+G+\\\", arg\\\"+o+\\\"); // \\\"+I[o+2].name+\\\"\\\\n\\\",s.push(\\\"argType\\\"+o),y.push(I[o+2]);if(E&&(a=\\\"thisWired\\\"+(a.length>0?\\\", \\\":\\\"\\\")+a),F+=(D?\\\"var rv = \\\":\\\"\\\")+\\\"invoker(fn\\\"+(a.length>0?\\\", \\\":\\\"\\\")+a+\\\");\\\\n\\\",i)F+=\\\"runDestructors(destructors);\\\\n\\\";else for(o=E?1:2;o<I.length;++o){var h=1===o?\\\"thisWired\\\":\\\"arg\\\"+(o-2)+\\\"Wired\\\";null!==I[o].destructorFunction&&(F+=h+\\\"_dtor(\\\"+h+\\\"); // \\\"+I[o].name+\\\"\\\\n\\\",s.push(h+\\\"_dtor\\\"),y.push(I[o].destructorFunction))}return D&&(F+=\\\"var ret = retType.fromWireType(rv);\\\\nreturn ret;\\\\n\\\"),F+=\\\"}\\\\n\\\",s.push(F),function(A,I){if(!(A instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof A+\\\" which is not a function\\\");var g=sA(A.name||\\\"unknownFunctionName\\\",(function(){}));g.prototype=A.prototype;var B=new g,Q=A.apply(B,I);return Q instanceof Object?Q:B}(Function,s).apply(null,y)}var FI=[],GI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function sI(A){A>4&&0==--GI[A].refcount&&(GI[A]=void 0,FI.push(A))}function yI(){for(var A=0,I=5;I<GI.length;++I)void 0!==GI[I]&&++A;return A}function hI(){for(var A=5;A<GI.length;++A)if(void 0!==GI[A])return GI[A];return null}function tI(A){switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=FI.length?FI.pop():GI.length;return GI[I]={refcount:1,value:A},I}}function cI(A){if(null===A)return\\\"null\\\";var I=typeof A;return\\\"object\\\"===I||\\\"array\\\"===I||\\\"function\\\"===I?A.toString():\\\"\\\"+A}function NI(A,I){switch(I){case 2:return function(A){return this.fromWireType(L[A>>2])};case 3:return function(A){return this.fromWireType(d[A>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+A)}}function RI(A,I,g){switch(I){case 0:return g?function(A){return Y[A]}:function(A){return e[A]};case 1:return g?function(A){return H[A>>1]}:function(A){return J[A>>1]};case 2:return g?function(A){return K[A>>2]}:function(A){return M[A>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+A)}}var SI={};function UI(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}function nI(A,I){var g=DA[A];return void 0===g&&nA(I+\\\" has unknown type \\\"+oI(A)),g}var rI={};function kI(){return Y.length}var YI={buffers:[null,[],[]],printChar:function(A,I){var g=YI.buffers[A];0===I||10===I?((1===A?t:c)(f(g,0)),g.length=0):g.push(I)},varargs:0,get:function(A){return YI.varargs+=4,K[YI.varargs-4>>2]},getStr:function(){return q(YI.get())},get64:function(){var A=YI.get();return YI.get(),A},getZero:function(){YI.get()}};hA=C.InternalError=yA(Error,\\\"InternalError\\\"),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);RA=A}(),UA=C.BindingError=yA(Error,\\\"BindingError\\\"),pA.prototype.isAliasOf=kA,pA.prototype.clone=MA,pA.prototype.delete=LA,pA.prototype.isDeleted=dA,pA.prototype.deleteLater=bA,QI.prototype.getPointee=vA,QI.prototype.destructor=jA,QI.prototype.argPackAdvance=8,QI.prototype.readValueFromPointer=iA,QI.prototype.deleteObject=OA,QI.prototype.fromWireType=BI,C.getInheritedInstanceCount=zA,C.getLiveInheritedInstances=_A,C.flushPendingDeletes=qA,C.setDelayFunction=$A,iI=C.UnboundTypeError=yA(Error,\\\"UnboundTypeError\\\"),C.count_emval_handles=yI,C.get_first_emval=hI;var eI={__cxa_allocate_exception:function(A){return MI(A)},__cxa_atexit:function(){return BA.apply(null,arguments)},__cxa_thread_atexit:function(){return BA.apply(null,arguments)},__cxa_throw:function(A,I,g){throw QA[A]={ptr:A,adjusted:[A],type:I,destructor:g,refcount:0,caught:!1,rethrown:!1},\\\"uncaught_exception\\\"in LI?LI.uncaught_exceptions++:LI.uncaught_exceptions=1,A},_embind_finalize_value_object:function(A){var I=CA[A];delete CA[A];var g=I.rawConstructor,B=I.rawDestructor,Q=I.fields;cA([A],Q.map((function(A){return A.getterReturnType})).concat(Q.map((function(A){return A.setterArgumentType}))),(function(A){var C={};return Q.forEach((function(I,g){var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+Q.length],w=I.setter,a=I.setterContext;C[B]={read:function(A){return E.fromWireType(i(o,A))},write:function(A,I){var g=[];w(a,A,D.toWireType(g,I)),EA(g)}}})),[{name:I.name,fromWireType:function(A){var I={};for(var g in C)I[g]=C[g].read(A);return B(A),I},toWireType:function(A,I){for(var Q in C)if(!(Q in I))throw new TypeError(\\\"Missing field\\\");var E=g();for(Q in C)C[Q].write(E,I[Q]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:iA,destructorFunction:B}]}))},_embind_register_bool:function(A,I,g,B,Q){var C=NA(g);rA(A,{name:I=SA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:Q},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=Y;else if(2===g)B=H;else{if(4!==g)throw new TypeError(\\\"Unknown boolean type size: \\\"+I);B=K}return this.fromWireType(B[A>>C])},destructorFunction:null})},_embind_register_class:function(A,I,g,B,Q,C,E,i,o,D,w,a,F){w=SA(w),C=EI(Q,C),i&&(i=EI(E,i)),D&&(D=EI(o,D)),F=EI(a,F);var G=GA(w);WA(G,(function(){DI(\\\"Cannot construct \\\"+w+\\\" due to unbound types\\\",[B])})),cA([A,I,g],B?[B]:[],(function(I){var g,Q;I=I[0],Q=B?(g=I.registeredClass).instancePrototype:pA.prototype;var E=sA(G,(function(){if(Object.getPrototypeOf(this)!==o)throw new UA(\\\"Use 'new' to construct \\\"+w);if(void 0===a.constructor_body)throw new UA(w+\\\" has no accessible constructor\\\");var A=a.constructor_body[arguments.length];if(void 0===A)throw new UA(\\\"Tried to invoke ctor of \\\"+w+\\\" with invalid number of parameters (\\\"+arguments.length+\\\") - expected (\\\"+Object.keys(a.constructor_body).toString()+\\\") parameters instead!\\\");return A.apply(this,arguments)})),o=Object.create(Q,{constructor:{value:E}});E.prototype=o;var a=new XA(w,E,o,F,g,C,i,D),s=new QI(w,a,!0,!1,!1),y=new QI(w+\\\"*\\\",a,!1,!1,!1),h=new QI(w+\\\" const*\\\",a,!1,!0,!1);return uA[A]={pointerType:y,constPointerType:h},CI(G,E),[s,y,h]}))},_embind_register_class_constructor:function(A,I,g,B,Q,C){r(I>0);var E=wI(I,g);Q=EI(B,Q);var i=[C],o=[];cA([],[A],(function(A){var g=\\\"constructor \\\"+(A=A[0]).name;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new UA(\\\"Cannot register multiple constructors with identical number of parameters (\\\"+(I-1)+\\\") for class '\\\"+A.name+\\\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\\\");return A.registeredClass.constructor_body[I-1]=function(){DI(\\\"Cannot construct \\\"+A.name+\\\" due to unbound types\\\",E)},cA([],E,(function(B){return A.registeredClass.constructor_body[I-1]=function(){arguments.length!==I-1&&nA(g+\\\" called with \\\"+arguments.length+\\\" arguments, expected \\\"+(I-1)),o.length=0,i.length=I;for(var A=1;A<I;++A)i[A]=B[A].toWireType(o,arguments[A-1]);var C=Q.apply(null,i);return EA(o),B[0].fromWireType(C)},[]})),[]}))},_embind_register_class_function:function(A,I,g,B,Q,C,E,i){var o=wI(g,B);I=SA(I),C=EI(Q,C),cA([],[A],(function(A){var B=(A=A[0]).name+\\\".\\\"+I;function Q(){DI(\\\"Cannot call \\\"+B+\\\" due to unbound types\\\",o)}i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,w=D[I];return void 0===w||void 0===w.overloadTable&&w.className!==A.name&&w.argCount===g-2?(Q.argCount=g-2,Q.className=A.name,D[I]=Q):(ZA(D,I,B),D[I].overloadTable[g-2]=Q),cA([],o,(function(Q){var i=aI(B,Q,A,C,E);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},_embind_register_emval:function(A,I){rA(A,{name:I=SA(I),fromWireType:function(A){var I=GI[A].value;return sI(A),I},toWireType:function(A,I){return tI(I)},argPackAdvance:8,readValueFromPointer:iA,destructorFunction:null})},_embind_register_float:function(A,I,g){var B=NA(g);rA(A,{name:I=SA(I),fromWireType:function(A){return A},toWireType:function(A,I){if(\\\"number\\\"!=typeof I&&\\\"boolean\\\"!=typeof I)throw new TypeError('Cannot convert \\\"'+cI(I)+'\\\" to '+this.name);return I},argPackAdvance:8,readValueFromPointer:NI(I,B),destructorFunction:null})},_embind_register_function:function(A,I,g,B,Q,C){var E=wI(I,g);A=SA(A),Q=EI(B,Q),WA(A,(function(){DI(\\\"Cannot call \\\"+A+\\\" due to unbound types\\\",E)}),I-1),cA([],E,(function(g){var B=[g[0],null].concat(g.slice(1));return CI(A,aI(A,B,null,Q,C),I-1),[]}))},_embind_register_integer:function(A,I,g,B,Q){I=SA(I),-1===Q&&(Q=4294967295);var C=NA(g),E=function(A){return A};if(0===B){var i=32-8*g;E=function(A){return A<<i>>>i}}var o=-1!=I.indexOf(\\\"unsigned\\\");rA(A,{name:I,fromWireType:E,toWireType:function(A,g){if(\\\"number\\\"!=typeof g&&\\\"boolean\\\"!=typeof g)throw new TypeError('Cannot convert \\\"'+cI(g)+'\\\" to '+this.name);if(g<B||g>Q)throw new TypeError('Passing a number \\\"'+cI(g)+'\\\" from JS side to C/C++ side to an argument of type \\\"'+I+'\\\", which is outside the valid range ['+B+\\\", \\\"+Q+\\\"]!\\\");return o?g>>>0:0|g},argPackAdvance:8,readValueFromPointer:RI(I,C,0!==B),destructorFunction:null})},_embind_register_memory_view:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function Q(A){var I=M,g=I[A>>=2],Q=I[A+1];return new B(I.buffer,Q,g)}rA(A,{name:g=SA(g),fromWireType:Q,argPackAdvance:8,readValueFromPointer:Q},{ignoreDuplicateRegistrations:!0})},_embind_register_std_string:function(A,I){var g=\\\"std::string\\\"===(I=SA(I));rA(A,{name:I,fromWireType:function(A){var I,B=M[A>>2];if(g){var Q=e[A+4+B],C=0;0!=Q&&(C=Q,e[A+4+B]=0);for(var E=A+4,i=0;i<=B;++i){var o=A+4+i;if(0==e[o]){var D=q(E);void 0===I?I=D:(I+=String.fromCharCode(0),I+=D),E=o+1}}0!=C&&(e[A+4+B]=C)}else{var w=new Array(B);for(i=0;i<B;++i)w[i]=String.fromCharCode(e[A+4+i]);I=w.join(\\\"\\\")}return dI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var Q=\\\"string\\\"==typeof I;Q||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||nA(\\\"Cannot pass non-string to std::string\\\"),B=g&&Q?function(){return function(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&(B=65536+((1023&B)<<10)|1023&A.charCodeAt(++g)),B<=127?++I:I+=B<=2047?2:B<=65535?3:4}return I}(I)}:function(){return I.length};var C=B(),E=MI(4+C+1);if(M[E>>2]=C,g&&Q)b(I,E+4,C+1);else if(Q)for(var i=0;i<C;++i){var o=I.charCodeAt(i);o>255&&(dI(E),nA(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),e[E+4+i]=o}else for(i=0;i<C;++i)e[E+4+i]=I[i];return null!==A&&A.push(dI,E),E},argPackAdvance:8,readValueFromPointer:iA,destructorFunction:function(A){dI(A)}})},_embind_register_std_wstring:function(A,I,g){var B,Q;g=SA(g),2===I?(B=function(){return J},Q=1):4===I&&(B=function(){return M},Q=2),rA(A,{name:g,fromWireType:function(A){for(var I=B(),g=M[A>>2],C=new Array(g),E=A+4>>Q,i=0;i<g;++i)C[i]=String.fromCharCode(I[E+i]);return dI(A),C.join(\\\"\\\")},toWireType:function(A,g){var C=g.length,E=MI(4+C*I),i=B();M[E>>2]=C;for(var o=E+4>>Q,D=0;D<C;++D)i[o+D]=g.charCodeAt(D);return null!==A&&A.push(dI,E),E},argPackAdvance:8,readValueFromPointer:iA,destructorFunction:function(A){dI(A)}})},_embind_register_value_object:function(A,I,g,B,Q,C){CA[A]={name:SA(I),rawConstructor:EI(g,B),rawDestructor:EI(Q,C),fields:[]}},_embind_register_value_object_field:function(A,I,g,B,Q,C,E,i,o,D){CA[A].fields.push({fieldName:SA(I),getterReturnType:g,getter:EI(B,Q),getterContext:C,setterArgumentType:E,setter:EI(i,o),setterContext:D})},_embind_register_void:function(A,I){rA(A,{isVoid:!0,name:I=SA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},_emval_decref:sI,_emval_get_global:function(A){return 0===A?tI(UI()):(A=void 0===(g=SI[I=A])?SA(I):g,tI(UI()[A]));var I,g},_emval_incref:function(A){A>4&&(GI[A].refcount+=1)},_emval_new:function(A,I,g,B){A=function(A){return A||nA(\\\"Cannot use deleted val. handle = \\\"+A),GI[A].value}(A);var Q=rI[I];return Q||(Q=function(A){for(var I=\\\"\\\",g=0;g<A;++g)I+=(0!==g?\\\", \\\":\\\"\\\")+\\\"arg\\\"+g;var B=\\\"return function emval_allocator_\\\"+A+\\\"(constructor, argTypes, args) {\\\\n\\\";for(g=0;g<A;++g)B+=\\\"var argType\\\"+g+\\\" = requireRegisteredType(Module['HEAP32'][(argTypes >> 2) + \\\"+g+'], \\\"parameter '+g+'\\\");\\\\nvar arg'+g+\\\" = argType\\\"+g+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+g+\\\"['argPackAdvance'];\\\\n\\\";return B+=\\\"var obj = new constructor(\\\"+I+\\\");\\\\nreturn __emval_register(obj);\\\\n}\\\\n\\\",new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"__emval_register\\\",B)(nI,C,tI)}(I),rI[I]=Q),Q(A,g,B)},_emval_take_value:function(A,I){return tI((A=nI(A,\\\"_emval_take_value\\\")).readValueFromPointer(I))},abort:function(){z()},emscripten_get_sbrk_ptr:function(){return 46048},emscripten_memcpy_big:function(A,I,g){e.set(e.subarray(I,I+g),A)},emscripten_resize_heap:function(A){var I=kI(),g=65536,B=2147418112;if(A>B)return!1;for(var Q=Math.max(I,16777216);Q<A;)Q=Q<=536870912?p(2*Q,g):Math.min(p((3*Q+2147483648)/4,g),B);return!!function(A){try{return R.grow(A-k.byteLength+65535>>16),u(R.buffer),1}catch(A){}}(Q)},fd_close:function(A){try{return 0}catch(A){return\\\"undefined\\\"!=typeof FS&&A instanceof FS.ErrnoError||z(A),A.errno}},fd_seek:function(A,I,g,B,Q){try{return 0}catch(A){return\\\"undefined\\\"!=typeof FS&&A instanceof FS.ErrnoError||z(A),A.errno}},fd_write:function(A,I,g,B){try{for(var Q=0,C=0;C<g;C++){for(var E=K[I+8*C>>2],i=K[I+(8*C+4)>>2],o=0;o<i;o++)YI.printChar(A,e[E+o]);Q+=i}return K[B>>2]=Q,0}catch(A){return\\\"undefined\\\"!=typeof FS&&A instanceof FS.ErrnoError||z(A),A.errno}},memory:R,setTempRet0:function(A){S(0|A)},table:U},HI=function(){var A={env:eI,wasi_snapshot_preview1:eI};function I(A,I){var g=A.exports;C.asm=g,function(A){if(j--,C.monitorRunDependencies&&C.monitorRunDependencies(j),0==j&&(null!==O&&(clearInterval(O),O=null),P)){var I=P;P=null,I()}}()}function g(A){I(A.instance)}function B(I){return(N||!w&&!a||\\\"function\\\"!=typeof fetch?new Promise((function(A,I){A(gA())})):fetch(IA,{credentials:\\\"same-origin\\\"}).then((function(A){if(!A.ok)throw\\\"failed to load wasm binary file at '\\\"+IA+\\\"'\\\";return A.arrayBuffer()})).catch((function(){return gA()}))).then((function(I){return WebAssembly.instantiate(I,A)})).then(I,(function(A){c(\\\"failed to asynchronously prepare wasm: \\\"+A),z(A)}))}if(j++,C.monitorRunDependencies&&C.monitorRunDependencies(j),C.instantiateWasm)try{return C.instantiateWasm(A,I)}catch(A){return c(\\\"Module.instantiateWasm callback failed with error: \\\"+A),!1}return function(){if(N||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||$(IA)||\\\"function\\\"!=typeof fetch)return B(g);fetch(IA,{credentials:\\\"same-origin\\\"}).then((function(I){return WebAssembly.instantiateStreaming(I,A).then(g,(function(A){c(\\\"wasm streaming compile failed: \\\"+A),c(\\\"falling back to ArrayBuffer instantiation\\\"),B(g)}))}))}(),{}}();C.asm=HI;var JI,KI=C.___wasm_call_ctors=function(){return C.asm.__wasm_call_ctors.apply(null,arguments)},MI=C._malloc=function(){return C.asm.malloc.apply(null,arguments)},LI=(C._setThrew=function(){return C.asm.setThrew.apply(null,arguments)},C.__ZSt18uncaught_exceptionv=function(){return C.asm._ZSt18uncaught_exceptionv.apply(null,arguments)}),dI=C._free=function(){return C.asm.free.apply(null,arguments)},lI=C.___getTypeName=function(){return C.asm.__getTypeName.apply(null,arguments)},fI=(C.___embind_register_native_and_builtin_types=function(){return C.asm.__embind_register_native_and_builtin_types.apply(null,arguments)},C.stackSave=function(){return C.asm.stackSave.apply(null,arguments)}),qI=C.stackAlloc=function(){return C.asm.stackAlloc.apply(null,arguments)},bI=C.stackRestore=function(){return C.asm.stackRestore.apply(null,arguments)};function pI(A){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+A+\\\")\\\",this.status=A}function uI(A){function I(){JI||(JI=!0,n||(X(x),X(V),C.onRuntimeInitialized&&C.onRuntimeInitialized(),function(){if(C.postRun)for(\\\"function\\\"==typeof C.postRun&&(C.postRun=[C.postRun]);C.postRun.length;)A=C.postRun.shift(),v.unshift(A);var A;X(v)}()))}A=A||D,j>0||(function(){if(C.preRun)for(\\\"function\\\"==typeof C.preRun&&(C.preRun=[C.preRun]);C.preRun.length;)A=C.preRun.shift(),m.unshift(A);var A;X(m)}(),j>0||(C.setStatus?(C.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){C.setStatus(\\\"\\\")}),1),I()}),1)):I()))}if(C.__growWasmMemory=function(){return C.asm.__growWasmMemory.apply(null,arguments)},C.dynCall_i=function(){return C.asm.dynCall_i.apply(null,arguments)},C.dynCall_vi=function(){return C.asm.dynCall_vi.apply(null,arguments)},C.dynCall_iii=function(){return C.asm.dynCall_iii.apply(null,arguments)},C.dynCall_viii=function(){return C.asm.dynCall_viii.apply(null,arguments)},C.dynCall_ii=function(){return C.asm.dynCall_ii.apply(null,arguments)},C.dynCall_iiii=function(){return C.asm.dynCall_iiii.apply(null,arguments)},C.dynCall_vii=function(){return C.asm.dynCall_vii.apply(null,arguments)},C.dynCall_viiii=function(){return C.asm.dynCall_viiii.apply(null,arguments)},C.dynCall_v=function(){return C.asm.dynCall_v.apply(null,arguments)},C.dynCall_iidiiii=function(){return C.asm.dynCall_iidiiii.apply(null,arguments)},C.dynCall_jiji=function(){return C.asm.dynCall_jiji.apply(null,arguments)},C.dynCall_viiiiii=function(){return C.asm.dynCall_viiiiii.apply(null,arguments)},C.dynCall_viiiii=function(){return C.asm.dynCall_viiiii.apply(null,arguments)},C.asm=HI,C.ccall=function(A,I,g,B,Q){var E={string:function(A){var I=0;if(null!=A&&0!==A){var g=1+(A.length<<2);b(A,I=qI(g),g)}return I},array:function(A){var I=qI(A.length);return function(A,I){Y.set(A,I)}(A,I),I}},i=function(A){var I=C[\\\"_\\\"+A];return r(I,\\\"Cannot call unknown function \\\"+A+\\\", make sure it is exported\\\"),I}(A),o=[],D=0;if(B)for(var w=0;w<B.length;w++){var a=E[g[w]];a?(0===D&&(D=fI()),o[w]=a(B[w])):o[w]=B[w]}var F=i.apply(null,o);return F=function(A){return\\\"string\\\"===I?q(A):\\\"boolean\\\"===I?Boolean(A):A}(F),0!==D&&bI(D),F},C.then=function(A){if(JI)A(C);else{var I=C.onRuntimeInitialized;C.onRuntimeInitialized=function(){I&&I(),A(C)}}return C},P=function A(){JI||uI(),JI||(P=A)},C.run=uI,C.preInit)for(\\\"function\\\"==typeof C.preInit&&(C.preInit=[C.preInit]);C.preInit.length>0;)C.preInit.pop()();return uI(),A});A.exports=C},9400:(A,I,g)=>{var B,Q=\\\"/\\\",C=(B=(B=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(A){var I,C=void 0!==(A=A||{})?A:{},E={};for(I in C)C.hasOwnProperty(I)&&(E[I]=C[I]);var i,o,D=[],w=\\\"./this.program\\\",a=function(A,I){throw I},F=!1,G=!1;F=\\\"object\\\"==typeof window,G=\\\"function\\\"==typeof importScripts,i=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node&&!F&&!G,o=!F&&!i&&!G;var s,y,h,t,c=\\\"\\\";i?(c=Q+\\\"/\\\",s=function(A,I){return h||(h=g(1973)),t||(t=g(378)),A=t.normalize(A),h.readFileSync(A,I?null:\\\"utf8\\\")},y=function(A){var I=s(A,!0);return I.buffer||(I=new Uint8Array(I)),J(I.buffer),I},process.argv.length>1&&(w=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),D=process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(A){if(!(A instanceof zI))throw A})),process.on(\\\"unhandledRejection\\\",gA),a=function(A){process.exit(A)},C.inspect=function(){return\\\"[Emscripten Module object]\\\"}):o?(\\\"undefined\\\"!=typeof read&&(s=function(A){return read(A)}),y=function(A){var I;return\\\"function\\\"==typeof readbuffer?new Uint8Array(readbuffer(A)):(J(\\\"object\\\"==typeof(I=read(A,\\\"binary\\\"))),I)},\\\"undefined\\\"!=typeof scriptArgs?D=scriptArgs:void 0!==arguments&&(D=arguments),\\\"function\\\"==typeof quit&&(a=function(A){quit(A)}),\\\"undefined\\\"!=typeof print&&(\\\"undefined\\\"==typeof console&&(console={}),console.log=print,console.warn=console.error=\\\"undefined\\\"!=typeof printErr?printErr:print)):(F||G)&&(G?c=self.location.href:document.currentScript&&(c=document.currentScript.src),B&&(c=B),c=0!==c.indexOf(\\\"blob:\\\")?c.substr(0,c.lastIndexOf(\\\"/\\\")+1):\\\"\\\",s=function(A){var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.send(null),I.responseText},G&&(y=function(A){var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.responseType=\\\"arraybuffer\\\",I.send(null),new Uint8Array(I.response)}));var N=C.print||console.log.bind(console),R=C.printErr||console.warn.bind(console);for(I in E)E.hasOwnProperty(I)&&(C[I]=E[I]);E=null,C.arguments&&(D=C.arguments),C.thisProgram&&(w=C.thisProgram),C.quit&&(a=C.quit);var S,U,n,r=0,k=function(A){r=A},Y=function(){return r};C.wasmBinary&&(S=C.wasmBinary),C.noExitRuntime&&(U=C.noExitRuntime),\\\"object\\\"!=typeof WebAssembly&&R(\\\"no native wasm support detected\\\");var e=new WebAssembly.Table({initial:204,maximum:204,element:\\\"anyfunc\\\"}),H=!1;function J(A,I){A||gA(\\\"Assertion failed: \\\"+I)}var K,M,L,d,l,f,q,b,p,u=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function Z(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.subarray&&u)return u.decode(A.subarray(I,Q));for(var C=\\\"\\\";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else{var D=E-65536;C+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else C+=String.fromCharCode((31&E)<<6|i)}else C+=String.fromCharCode(E)}return C}function W(A,I){return A?Z(L,A,I):\\\"\\\"}function X(A,I,g){return function(A,I,g,B){if(!(B>0))return 0;for(var Q=g,C=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=C)break;I[g++]=i}else if(i<=2047){if(g+1>=C)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=C)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=C)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-Q}(A,L,I,g)}function m(A,I){return A%I>0&&(A+=I-A%I),A}function x(A){K=A,C.HEAP8=M=new Int8Array(A),C.HEAP16=d=new Int16Array(A),C.HEAP32=f=new Int32Array(A),C.HEAPU8=L=new Uint8Array(A),C.HEAPU16=l=new Uint16Array(A),C.HEAPU32=q=new Uint32Array(A),C.HEAPF32=b=new Float32Array(A),C.HEAPF64=p=new Float64Array(A)}\\\"undefined\\\"!=typeof TextDecoder&&new TextDecoder(\\\"utf-16le\\\");var V=15728,T=C.TOTAL_MEMORY||1073741824;function v(A){for(;A.length>0;){var I=A.shift();if(\\\"function\\\"!=typeof I){var g=I.func;\\\"number\\\"==typeof g?void 0===I.arg?C.dynCall_v(g):C.dynCall_vi(g,I.arg):g(void 0===I.arg?null:I.arg)}else I()}}(n=C.wasmMemory?C.wasmMemory:new WebAssembly.Memory({initial:T/65536}))&&(K=n.buffer),T=K.byteLength,x(K),f[V>>2]=5258768;var j=[],O=[],P=[],z=[],_=[];Math.abs,Math.ceil,Math.floor,Math.min;var $=0,AA=null,IA=null;function gA(A){throw C.onAbort&&C.onAbort(A),N(A+=\\\"\\\"),R(A),H=!0,A=\\\"abort(\\\"+A+\\\"). Build with -s ASSERTIONS=1 for more info.\\\",new WebAssembly.RuntimeError(A)}C.preloadedImages={},C.preloadedAudios={};var BA=\\\"data:application/octet-stream;base64,\\\";function QA(A){return String.prototype.startsWith?A.startsWith(BA):0===A.indexOf(BA)}var CA,EA=\\\"libjpegturbowasm_decode.wasm\\\";function iA(){try{if(S)return new Uint8Array(S);if(y)return y(EA);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(A){gA(A)}}function oA(A,I){z.unshift({func:A,arg:I})}QA(EA)||(CA=EA,EA=C.locateFile?C.locateFile(CA,c):c+CA),O.push({func:function(){qI()}});var DA={},wA={};function aA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function FA(A){return this.fromWireType(q[A>>2])}var GA={},sA={},yA={},hA=48,tA=57;function cA(A){if(void 0===A)return\\\"_unknown\\\";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return I>=hA&&I<=tA?\\\"_\\\"+A:A}function NA(A,I){return A=cA(A),new Function(\\\"body\\\",\\\"return function \\\"+A+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(I)}function RA(A,I){var g=NA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+\\\"\\\\n\\\"+g.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},g}var SA=void 0;function UA(A){throw new SA(A)}function nA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&UA(\\\"Mismatched type converter count\\\");for(var Q=0;Q<A.length;++Q)JA(A[Q],B[Q])}A.forEach((function(A){yA[A]=I}));var Q=new Array(I.length),C=[],E=0;I.forEach((function(A,I){sA.hasOwnProperty(A)?Q[I]=sA[A]:(C.push(A),GA.hasOwnProperty(A)||(GA[A]=[]),GA[A].push((function(){Q[I]=sA[A],++E===C.length&&B(Q)})))})),0===C.length&&B(Q)}function rA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+A)}}var kA=void 0;function YA(A){for(var I=\\\"\\\",g=A;L[g];)I+=kA[L[g++]];return I}var eA=void 0;function HA(A){throw new eA(A)}function JA(A,I,g){if(g=g||{},!(\\\"argPackAdvance\\\"in I))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var B=I.name;if(A||HA('type \\\"'+B+'\\\" must have a positive integer typeid pointer'),sA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;HA(\\\"Cannot register type '\\\"+B+\\\"' twice\\\")}if(sA[A]=I,delete yA[A],GA.hasOwnProperty(A)){var Q=GA[A];delete GA[A],Q.forEach((function(A){A()}))}}function KA(A){if(!(this instanceof mA))return!1;if(!(A instanceof mA))return!1;for(var I=this.$$.ptrType.registeredClass,g=this.$$.ptr,B=A.$$.ptrType.registeredClass,Q=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)Q=B.upcast(Q),B=B.baseClass;return I===B&&g===Q}function MA(A){HA(A.$$.ptrType.registeredClass.name+\\\" instance already deleted\\\")}var LA=!1;function dA(A){}function lA(A){A.count.value-=1,0===A.count.value&&function(A){A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)}(A)}function fA(A){return\\\"undefined\\\"==typeof FinalizationGroup?(fA=function(A){return A},A):(LA=new FinalizationGroup((function(A){for(var I=A.next();!I.done;I=A.next()){var g=I.value;g.ptr?lA(g):console.warn(\\\"object already deleted: \\\"+g.ptr)}})),fA=function(A){return LA.register(A,A.$$,A.$$),A},dA=function(A){LA.unregister(A.$$)},fA(A))}function qA(){if(this.$$.ptr||MA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=fA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I}function bA(){this.$$.ptr||MA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&HA(\\\"Object already scheduled for deletion\\\"),dA(this),lA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function pA(){return!this.$$.ptr}var uA=void 0,ZA=[];function WA(){for(;ZA.length;){var A=ZA.pop();A.$$.deleteScheduled=!1,A.delete()}}function XA(){return this.$$.ptr||MA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&HA(\\\"Object already scheduled for deletion\\\"),ZA.push(this),1===ZA.length&&uA&&uA(WA),this.$$.deleteScheduled=!0,this}function mA(){}var xA={};function VA(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||HA(\\\"Function '\\\"+g+\\\"' called with an invalid number of arguments (\\\"+arguments.length+\\\") - expects one of (\\\"+A[I].overloadTable+\\\")!\\\"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function TA(A,I,g,B,Q,C,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=Q,this.getActualType=C,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}function vA(A,I,g){for(;I!==g;)I.upcast||HA(\\\"Expected null or instance of \\\"+g.name+\\\", got an instance of \\\"+I.name),A=I.upcast(A),I=I.baseClass;return A}function jA(A,I){if(null===I)return this.isReference&&HA(\\\"null is not a valid \\\"+this.name),0;I.$$||HA('Cannot pass \\\"'+SI(I)+'\\\" as a '+this.name),I.$$.ptr||HA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return vA(I.$$.ptr,g,this.registeredClass)}function OA(A,I){var g;if(null===I)return this.isReference&&HA(\\\"null is not a valid \\\"+this.name),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I.$$||HA('Cannot pass \\\"'+SI(I)+'\\\" as a '+this.name),I.$$.ptr||HA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),!this.isConst&&I.$$.ptrType.isConst&&HA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);var B=I.$$.ptrType.registeredClass;if(g=vA(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&HA(\\\"Passing raw pointer to smart pointer is illegal\\\"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:HA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var Q=I.clone();g=this.rawShare(g,RI((function(){Q.delete()}))),null!==A&&A.push(this.rawDestructor,g)}break;default:HA(\\\"Unsupporting sharing policy\\\")}return g}function PA(A,I){if(null===I)return this.isReference&&HA(\\\"null is not a valid \\\"+this.name),0;I.$$||HA('Cannot pass \\\"'+SI(I)+'\\\" as a '+this.name),I.$$.ptr||HA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),I.$$.ptrType.isConst&&HA(\\\"Cannot convert argument of type \\\"+I.$$.ptrType.name+\\\" to parameter type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return vA(I.$$.ptr,g,this.registeredClass)}function zA(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A}function _A(A){this.rawDestructor&&this.rawDestructor(A)}function $A(A){null!==A&&A.delete()}function AI(A,I,g){if(I===g)return A;if(void 0===g.baseClass)return null;var B=AI(A,I,g.baseClass);return null===B?null:g.downcast(B)}function II(){return Object.keys(QI).length}function gI(){var A=[];for(var I in QI)QI.hasOwnProperty(I)&&A.push(QI[I]);return A}function BI(A){uA=A,ZA.length&&uA&&uA(WA)}var QI={};function CI(A,I){return I=function(A,I){for(void 0===I&&HA(\\\"ptr should not be undefined\\\");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I}(A,I),QI[I]}function EI(A,I){return I.ptrType&&I.ptr||UA(\\\"makeClassHandle requires ptr and ptrType\\\"),!!I.smartPtrType!=!!I.smartPtr&&UA(\\\"Both smartPtrType and smartPtr must be specified\\\"),I.count={value:1},fA(Object.create(A,{$$:{value:I}}))}function iI(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=CI(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function Q(){return this.isSmartPointer?EI(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):EI(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var C,E=this.registeredClass.getActualType(I),i=xA[E];if(!i)return Q.call(this);C=this.isConst?i.constPointerType:i.pointerType;var o=AI(I,this.registeredClass,C.registeredClass);return null===o?Q.call(this):this.isSmartPointer?EI(C.registeredClass.instancePrototype,{ptrType:C,ptr:o,smartPtrType:this,smartPtr:A}):EI(C.registeredClass.instancePrototype,{ptrType:C,ptr:o})}function oI(A,I,g,B,Q,C,E,i,o,D,w){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=Q,this.pointeeType=C,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=w,Q||void 0!==I.baseClass?this.toWireType=OA:B?(this.toWireType=jA,this.destructorFunction=null):(this.toWireType=PA,this.destructorFunction=null)}function DI(A,I){var g;if(A=YA(A),void 0!==C[\\\"FUNCTION_TABLE_\\\"+A])g=C[\\\"FUNCTION_TABLE_\\\"+A][I];else if(\\\"undefined\\\"!=typeof FUNCTION_TABLE)g=FUNCTION_TABLE[I];else{var B=C[\\\"dynCall_\\\"+A];void 0===B&&void 0===(B=C[\\\"dynCall_\\\"+A.replace(/f/g,\\\"d\\\")])&&HA(\\\"No dynCall invoker for signature: \\\"+A),g=function(g){for(var B=[],Q=1;Q<A.length;++Q)B.push(\\\"a\\\"+Q);var C=\\\"return function dynCall_\\\"+A+\\\"_\\\"+I+\\\"(\\\"+B.join(\\\", \\\")+\\\") {\\\\n\\\";return C+=\\\"    return dynCall(rawFunction\\\"+(B.length?\\\", \\\":\\\"\\\")+B.join(\\\", \\\")+\\\");\\\\n\\\",C+=\\\"};\\\\n\\\",new Function(\\\"dynCall\\\",\\\"rawFunction\\\",C)(g,I)}(B)}return\\\"function\\\"!=typeof g&&HA(\\\"unknown function pointer with signature \\\"+A+\\\": \\\"+I),g}var wI=void 0;function aI(A){var I=XI(A),g=YA(I);return pI(I),g}function FI(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||sA[I]||(yA[I]?yA[I].forEach(A):(g.push(I),B[I]=!0))})),new wI(A+\\\": \\\"+g.map(aI).join([\\\", \\\"]))}function GI(A,I){for(var g=[],B=0;B<A;B++)g.push(f[(I>>2)+B]);return g}function sI(A,I,g,B,Q){var C=I.length;C<2&&HA(\\\"argTypes array size mismatch! Must at least get return value and 'this' types!\\\");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var D=\\\"void\\\"!==I[0].name,w=\\\"\\\",a=\\\"\\\";for(o=0;o<C-2;++o)w+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o,a+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o+\\\"Wired\\\";var F=\\\"return function \\\"+cA(A)+\\\"(\\\"+w+\\\") {\\\\nif (arguments.length !== \\\"+(C-2)+\\\") {\\\\nthrowBindingError('function \\\"+A+\\\" called with ' + arguments.length + ' arguments, expected \\\"+(C-2)+\\\" args!');\\\\n}\\\\n\\\";i&&(F+=\\\"var destructors = [];\\\\n\\\");var G=i?\\\"destructors\\\":\\\"null\\\",s=[\\\"throwBindingError\\\",\\\"invoker\\\",\\\"fn\\\",\\\"runDestructors\\\",\\\"retType\\\",\\\"classParam\\\"],y=[HA,B,Q,aA,I[0],I[1]];for(E&&(F+=\\\"var thisWired = classParam.toWireType(\\\"+G+\\\", this);\\\\n\\\"),o=0;o<C-2;++o)F+=\\\"var arg\\\"+o+\\\"Wired = argType\\\"+o+\\\".toWireType(\\\"+G+\\\", arg\\\"+o+\\\"); // \\\"+I[o+2].name+\\\"\\\\n\\\",s.push(\\\"argType\\\"+o),y.push(I[o+2]);if(E&&(a=\\\"thisWired\\\"+(a.length>0?\\\", \\\":\\\"\\\")+a),F+=(D?\\\"var rv = \\\":\\\"\\\")+\\\"invoker(fn\\\"+(a.length>0?\\\", \\\":\\\"\\\")+a+\\\");\\\\n\\\",i)F+=\\\"runDestructors(destructors);\\\\n\\\";else for(o=E?1:2;o<I.length;++o){var h=1===o?\\\"thisWired\\\":\\\"arg\\\"+(o-2)+\\\"Wired\\\";null!==I[o].destructorFunction&&(F+=h+\\\"_dtor(\\\"+h+\\\"); // \\\"+I[o].name+\\\"\\\\n\\\",s.push(h+\\\"_dtor\\\"),y.push(I[o].destructorFunction))}return D&&(F+=\\\"var ret = retType.fromWireType(rv);\\\\nreturn ret;\\\\n\\\"),F+=\\\"}\\\\n\\\",s.push(F),function(A,I){if(!(A instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof A+\\\" which is not a function\\\");var g=NA(A.name||\\\"unknownFunctionName\\\",(function(){}));g.prototype=A.prototype;var B=new g,Q=A.apply(B,I);return Q instanceof Object?Q:B}(Function,s).apply(null,y)}var yI=[],hI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function tI(A){A>4&&0==--hI[A].refcount&&(hI[A]=void 0,yI.push(A))}function cI(){for(var A=0,I=5;I<hI.length;++I)void 0!==hI[I]&&++A;return A}function NI(){for(var A=5;A<hI.length;++A)if(void 0!==hI[A])return hI[A];return null}function RI(A){switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=yI.length?yI.pop():hI.length;return hI[I]={refcount:1,value:A},I}}function SI(A){if(null===A)return\\\"null\\\";var I=typeof A;return\\\"object\\\"===I||\\\"array\\\"===I||\\\"function\\\"===I?A.toString():\\\"\\\"+A}function UI(A,I){switch(I){case 2:return function(A){return this.fromWireType(b[A>>2])};case 3:return function(A){return this.fromWireType(p[A>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+A)}}function nI(A,I,g){switch(I){case 0:return g?function(A){return M[A]}:function(A){return L[A]};case 1:return g?function(A){return d[A>>1]}:function(A){return l[A>>1]};case 2:return g?function(A){return f[A>>2]}:function(A){return q[A>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+A)}}var rI={};function kI(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}function YI(A,I){var g=sA[A];return void 0===g&&HA(I+\\\" has unknown type \\\"+aI(A)),g}var eI={};function HI(){return M.length}var JI=0,KI={};function MI(){if(!MI.strings){var A={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:w};for(var I in KI)A[I]=KI[I];var g=[];for(var I in A)g.push(I+\\\"=\\\"+A[I]);MI.strings=g}return MI.strings}var LI={buffers:[null,[],[]],printChar:function(A,I){var g=LI.buffers[A];0===I||10===I?((1===A?N:R)(Z(g,0)),g.length=0):g.push(I)},varargs:0,get:function(A){return LI.varargs+=4,f[LI.varargs-4>>2]},getStr:function(){return W(LI.get())},get64:function(){var A=LI.get();return LI.get(),A},getZero:function(){LI.get()}};SA=C.InternalError=RA(Error,\\\"InternalError\\\"),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);kA=A}(),eA=C.BindingError=RA(Error,\\\"BindingError\\\"),mA.prototype.isAliasOf=KA,mA.prototype.clone=qA,mA.prototype.delete=bA,mA.prototype.isDeleted=pA,mA.prototype.deleteLater=XA,oI.prototype.getPointee=zA,oI.prototype.destructor=_A,oI.prototype.argPackAdvance=8,oI.prototype.readValueFromPointer=FA,oI.prototype.deleteObject=$A,oI.prototype.fromWireType=iI,C.getInheritedInstanceCount=II,C.getLiveInheritedInstances=gI,C.flushPendingDeletes=WA,C.setDelayFunction=BI,wI=C.UnboundTypeError=RA(Error,\\\"UnboundTypeError\\\"),C.count_emval_handles=cI,C.get_first_emval=NI;var dI={__cxa_allocate_exception:function(A){return bI(A)},__cxa_thread_atexit:function(){return oA.apply(null,arguments)},__cxa_throw:function(A,I,g){throw DA[A]={ptr:A,adjusted:[A],type:I,destructor:g,refcount:0,caught:!1,rethrown:!1},\\\"uncaught_exception\\\"in WI?WI.uncaught_exceptions++:WI.uncaught_exceptions=1,A},_embind_finalize_value_object:function(A){var I=wA[A];delete wA[A];var g=I.rawConstructor,B=I.rawDestructor,Q=I.fields;nA([A],Q.map((function(A){return A.getterReturnType})).concat(Q.map((function(A){return A.setterArgumentType}))),(function(A){var C={};return Q.forEach((function(I,g){var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+Q.length],w=I.setter,a=I.setterContext;C[B]={read:function(A){return E.fromWireType(i(o,A))},write:function(A,I){var g=[];w(a,A,D.toWireType(g,I)),aA(g)}}})),[{name:I.name,fromWireType:function(A){var I={};for(var g in C)I[g]=C[g].read(A);return B(A),I},toWireType:function(A,I){for(var Q in C)if(!(Q in I))throw new TypeError(\\\"Missing field\\\");var E=g();for(Q in C)C[Q].write(E,I[Q]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:FA,destructorFunction:B}]}))},_embind_register_bool:function(A,I,g,B,Q){var C=rA(g);JA(A,{name:I=YA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:Q},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=M;else if(2===g)B=d;else{if(4!==g)throw new TypeError(\\\"Unknown boolean type size: \\\"+I);B=f}return this.fromWireType(B[A>>C])},destructorFunction:null})},_embind_register_class:function(A,I,g,B,Q,E,i,o,D,w,a,F,G){a=YA(a),E=DI(Q,E),o&&(o=DI(i,o)),w&&(w=DI(D,w)),G=DI(F,G);var s=cA(a);!function(A,I,g){C.hasOwnProperty(A)?((void 0===g||void 0!==C[A].overloadTable&&void 0!==C[A].overloadTable[g])&&HA(\\\"Cannot register public name '\\\"+A+\\\"' twice\\\"),VA(C,A,A),C.hasOwnProperty(g)&&HA(\\\"Cannot register multiple overloads of a function with the same number of arguments (\\\"+g+\\\")!\\\"),C[A].overloadTable[g]=I):(C[A]=I,void 0!==g&&(C[A].numArguments=g))}(s,(function(){FI(\\\"Cannot construct \\\"+a+\\\" due to unbound types\\\",[B])})),nA([A,I,g],B?[B]:[],(function(I){var g,Q;I=I[0],Q=B?(g=I.registeredClass).instancePrototype:mA.prototype;var i=NA(s,(function(){if(Object.getPrototypeOf(this)!==D)throw new eA(\\\"Use 'new' to construct \\\"+a);if(void 0===F.constructor_body)throw new eA(a+\\\" has no accessible constructor\\\");var A=F.constructor_body[arguments.length];if(void 0===A)throw new eA(\\\"Tried to invoke ctor of \\\"+a+\\\" with invalid number of parameters (\\\"+arguments.length+\\\") - expected (\\\"+Object.keys(F.constructor_body).toString()+\\\") parameters instead!\\\");return A.apply(this,arguments)})),D=Object.create(Q,{constructor:{value:i}});i.prototype=D;var F=new TA(a,i,D,G,g,E,o,w),y=new oI(a,F,!0,!1,!1),h=new oI(a+\\\"*\\\",F,!1,!1,!1),t=new oI(a+\\\" const*\\\",F,!1,!0,!1);return xA[A]={pointerType:h,constPointerType:t},function(A,I,g){C.hasOwnProperty(A)||UA(\\\"Replacing nonexistant public symbol\\\"),void 0!==C[A].overloadTable&&void 0!==g?C[A].overloadTable[g]=I:(C[A]=I,C[A].argCount=g)}(s,i),[y,h,t]}))},_embind_register_class_constructor:function(A,I,g,B,Q,C){J(I>0);var E=GI(I,g);Q=DI(B,Q);var i=[C],o=[];nA([],[A],(function(A){var g=\\\"constructor \\\"+(A=A[0]).name;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new eA(\\\"Cannot register multiple constructors with identical number of parameters (\\\"+(I-1)+\\\") for class '\\\"+A.name+\\\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\\\");return A.registeredClass.constructor_body[I-1]=function(){FI(\\\"Cannot construct \\\"+A.name+\\\" due to unbound types\\\",E)},nA([],E,(function(B){return A.registeredClass.constructor_body[I-1]=function(){arguments.length!==I-1&&HA(g+\\\" called with \\\"+arguments.length+\\\" arguments, expected \\\"+(I-1)),o.length=0,i.length=I;for(var A=1;A<I;++A)i[A]=B[A].toWireType(o,arguments[A-1]);var C=Q.apply(null,i);return aA(o),B[0].fromWireType(C)},[]})),[]}))},_embind_register_class_function:function(A,I,g,B,Q,C,E,i){var o=GI(g,B);I=YA(I),C=DI(Q,C),nA([],[A],(function(A){var B=(A=A[0]).name+\\\".\\\"+I;function Q(){FI(\\\"Cannot call \\\"+B+\\\" due to unbound types\\\",o)}i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,w=D[I];return void 0===w||void 0===w.overloadTable&&w.className!==A.name&&w.argCount===g-2?(Q.argCount=g-2,Q.className=A.name,D[I]=Q):(VA(D,I,B),D[I].overloadTable[g-2]=Q),nA([],o,(function(Q){var i=sI(B,Q,A,C,E);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},_embind_register_emval:function(A,I){JA(A,{name:I=YA(I),fromWireType:function(A){var I=hI[A].value;return tI(A),I},toWireType:function(A,I){return RI(I)},argPackAdvance:8,readValueFromPointer:FA,destructorFunction:null})},_embind_register_float:function(A,I,g){var B=rA(g);JA(A,{name:I=YA(I),fromWireType:function(A){return A},toWireType:function(A,I){if(\\\"number\\\"!=typeof I&&\\\"boolean\\\"!=typeof I)throw new TypeError('Cannot convert \\\"'+SI(I)+'\\\" to '+this.name);return I},argPackAdvance:8,readValueFromPointer:UI(I,B),destructorFunction:null})},_embind_register_integer:function(A,I,g,B,Q){I=YA(I),-1===Q&&(Q=4294967295);var C=rA(g),E=function(A){return A};if(0===B){var i=32-8*g;E=function(A){return A<<i>>>i}}var o=-1!=I.indexOf(\\\"unsigned\\\");JA(A,{name:I,fromWireType:E,toWireType:function(A,g){if(\\\"number\\\"!=typeof g&&\\\"boolean\\\"!=typeof g)throw new TypeError('Cannot convert \\\"'+SI(g)+'\\\" to '+this.name);if(g<B||g>Q)throw new TypeError('Passing a number \\\"'+SI(g)+'\\\" from JS side to C/C++ side to an argument of type \\\"'+I+'\\\", which is outside the valid range ['+B+\\\", \\\"+Q+\\\"]!\\\");return o?g>>>0:0|g},argPackAdvance:8,readValueFromPointer:nI(I,C,0!==B),destructorFunction:null})},_embind_register_memory_view:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function Q(A){var I=q,g=I[A>>=2],Q=I[A+1];return new B(I.buffer,Q,g)}JA(A,{name:g=YA(g),fromWireType:Q,argPackAdvance:8,readValueFromPointer:Q},{ignoreDuplicateRegistrations:!0})},_embind_register_std_string:function(A,I){var g=\\\"std::string\\\"===(I=YA(I));JA(A,{name:I,fromWireType:function(A){var I,B=q[A>>2];if(g){var Q=L[A+4+B],C=0;0!=Q&&(C=Q,L[A+4+B]=0);for(var E=A+4,i=0;i<=B;++i){var o=A+4+i;if(0==L[o]){var D=W(E);void 0===I?I=D:(I+=String.fromCharCode(0),I+=D),E=o+1}}0!=C&&(L[A+4+B]=C)}else{var w=new Array(B);for(i=0;i<B;++i)w[i]=String.fromCharCode(L[A+4+i]);I=w.join(\\\"\\\")}return pI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var Q=\\\"string\\\"==typeof I;Q||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||HA(\\\"Cannot pass non-string to std::string\\\"),B=g&&Q?function(){return function(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&(B=65536+((1023&B)<<10)|1023&A.charCodeAt(++g)),B<=127?++I:I+=B<=2047?2:B<=65535?3:4}return I}(I)}:function(){return I.length};var C=B(),E=bI(4+C+1);if(q[E>>2]=C,g&&Q)X(I,E+4,C+1);else if(Q)for(var i=0;i<C;++i){var o=I.charCodeAt(i);o>255&&(pI(E),HA(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),L[E+4+i]=o}else for(i=0;i<C;++i)L[E+4+i]=I[i];return null!==A&&A.push(pI,E),E},argPackAdvance:8,readValueFromPointer:FA,destructorFunction:function(A){pI(A)}})},_embind_register_std_wstring:function(A,I,g){var B,Q;g=YA(g),2===I?(B=function(){return l},Q=1):4===I&&(B=function(){return q},Q=2),JA(A,{name:g,fromWireType:function(A){for(var I=B(),g=q[A>>2],C=new Array(g),E=A+4>>Q,i=0;i<g;++i)C[i]=String.fromCharCode(I[E+i]);return pI(A),C.join(\\\"\\\")},toWireType:function(A,g){var C=g.length,E=bI(4+C*I),i=B();q[E>>2]=C;for(var o=E+4>>Q,D=0;D<C;++D)i[o+D]=g.charCodeAt(D);return null!==A&&A.push(pI,E),E},argPackAdvance:8,readValueFromPointer:FA,destructorFunction:function(A){pI(A)}})},_embind_register_value_object:function(A,I,g,B,Q,C){wA[A]={name:YA(I),rawConstructor:DI(g,B),rawDestructor:DI(Q,C),fields:[]}},_embind_register_value_object_field:function(A,I,g,B,Q,C,E,i,o,D){wA[A].fields.push({fieldName:YA(I),getterReturnType:g,getter:DI(B,Q),getterContext:C,setterArgumentType:E,setter:DI(i,o),setterContext:D})},_embind_register_void:function(A,I){JA(A,{isVoid:!0,name:I=YA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},_emval_decref:tI,_emval_get_global:function(A){return 0===A?RI(kI()):(A=void 0===(g=rI[I=A])?YA(I):g,RI(kI()[A]));var I,g},_emval_incref:function(A){A>4&&(hI[A].refcount+=1)},_emval_new:function(A,I,g,B){A=function(A){return A||HA(\\\"Cannot use deleted val. handle = \\\"+A),hI[A].value}(A);var Q=eI[I];return Q||(Q=function(A){for(var I=\\\"\\\",g=0;g<A;++g)I+=(0!==g?\\\", \\\":\\\"\\\")+\\\"arg\\\"+g;var B=\\\"return function emval_allocator_\\\"+A+\\\"(constructor, argTypes, args) {\\\\n\\\";for(g=0;g<A;++g)B+=\\\"var argType\\\"+g+\\\" = requireRegisteredType(Module['HEAP32'][(argTypes >> 2) + \\\"+g+'], \\\"parameter '+g+'\\\");\\\\nvar arg'+g+\\\" = argType\\\"+g+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+g+\\\"['argPackAdvance'];\\\\n\\\";return B+=\\\"var obj = new constructor(\\\"+I+\\\");\\\\nreturn __emval_register(obj);\\\\n}\\\\n\\\",new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"__emval_register\\\",B)(YI,C,RI)}(I),eI[I]=Q),Q(A,g,B)},_emval_take_value:function(A,I){return RI((A=YI(A,\\\"_emval_take_value\\\")).readValueFromPointer(I))},abort:function(){gA()},emscripten_get_sbrk_ptr:function(){return 15728},emscripten_longjmp:function(A,I){!function(A,I){throw ZI(A,I||1),\\\"longjmp\\\"}(A,I)},emscripten_memcpy_big:function(A,I,g){L.set(L.subarray(I,I+g),A)},emscripten_resize_heap:function(A){var I=HI(),g=65536,B=2147418112;if(A>B)return!1;for(var Q=Math.max(I,16777216);Q<A;)Q=Q<=536870912?m(2*Q,g):Math.min(m((3*Q+2147483648)/4,g),B);return!!function(A){try{return n.grow(A-K.byteLength+65535>>16),x(n.buffer),1}catch(A){}}(Q)},environ_get:function(A,I){var g=MI(),B=0;return g.forEach((function(g,Q){var C=I+B;f[A+4*Q>>2]=C,function(A,I,g){for(var B=0;B<A.length;++B)M[I++>>0]=A.charCodeAt(B);g||(M[I>>0]=0)}(g,C),B+=g.length+1})),0},environ_sizes_get:function(A,I){var g=MI();f[A>>2]=g.length;var B=0;return g.forEach((function(A){B+=A.length+1})),f[I>>2]=B,0},exit:function(A){!function(A,I){I&&U&&0===A||(U||(H=!0,C.onExit&&C.onExit(A)),a(A,new zI(A)))}(A)},fd_close:function(A){try{return 0}catch(A){return\\\"undefined\\\"!=typeof FS&&A instanceof FS.ErrnoError||gA(A),A.errno}},fd_seek:function(A,I,g,B,Q){try{return 0}catch(A){return\\\"undefined\\\"!=typeof FS&&A instanceof FS.ErrnoError||gA(A),A.errno}},fd_write:function(A,I,g,B){try{for(var Q=0,C=0;C<g;C++){for(var E=f[I+8*C>>2],i=f[I+(8*C+4)>>2],o=0;o<i;o++)LI.printChar(A,L[E+o]);Q+=i}return f[B>>2]=Q,0}catch(A){return\\\"undefined\\\"!=typeof FS&&A instanceof FS.ErrnoError||gA(A),A.errno}},getTempRet0:function(){return 0|Y()},invoke_ii:function(A,I){var g=jI();try{return VI(A,I)}catch(A){if(PI(g),A!==A+0&&\\\"longjmp\\\"!==A)throw A;ZI(1,0)}},invoke_iii:function(A,I,g){var B=jI();try{return TI(A,I,g)}catch(A){if(PI(B),A!==A+0&&\\\"longjmp\\\"!==A)throw A;ZI(1,0)}},invoke_iiii:function(A,I,g,B){var Q=jI();try{return vI(A,I,g,B)}catch(A){if(PI(Q),A!==A+0&&\\\"longjmp\\\"!==A)throw A;ZI(1,0)}},invoke_vi:function(A,I){var g=jI();try{mI(A,I)}catch(A){if(PI(g),A!==A+0&&\\\"longjmp\\\"!==A)throw A;ZI(1,0)}},invoke_viii:function(A,I,g,B){var Q=jI();try{xI(A,I,g,B)}catch(A){if(PI(Q),A!==A+0&&\\\"longjmp\\\"!==A)throw A;ZI(1,0)}},memory:n,saveSetjmp:function A(I,g,B,Q){g|=0,B|=0,Q|=0;var C=0;for(JI=JI+1|0,f[(I|=0)>>2]=JI;(0|C)<(0|Q);){if(0==(0|f[B+(C<<3)>>2]))return f[B+(C<<3)>>2]=JI,f[B+(4+(C<<3))>>2]=g,f[B+(8+(C<<3))>>2]=0,k(0|Q),0|B;C=C+1|0}return B=0|A(0|I,0|g,0|(B=0|uI(0|B,8*(1+(Q=2*Q|0)|0)|0)),0|Q),k(0|Q),0|B},setTempRet0:function(A){k(0|A)},table:e,testSetjmp:function(A,I,g){A|=0,I|=0,g|=0;for(var B=0,Q=0;(0|B)<(0|g)&&0!=(0|(Q=0|f[I+(B<<3)>>2]));){if((0|Q)==(0|A))return 0|f[I+(4+(B<<3))>>2];B=B+1|0}return 0}},lI=function(){var A={env:dI,wasi_snapshot_preview1:dI};function I(A,I){var g=A.exports;C.asm=g,function(A){if($--,C.monitorRunDependencies&&C.monitorRunDependencies($),0==$&&(null!==AA&&(clearInterval(AA),AA=null),IA)){var I=IA;IA=null,I()}}()}function g(A){I(A.instance)}function B(I){return(S||!F&&!G||\\\"function\\\"!=typeof fetch?new Promise((function(A,I){A(iA())})):fetch(EA,{credentials:\\\"same-origin\\\"}).then((function(A){if(!A.ok)throw\\\"failed to load wasm binary file at '\\\"+EA+\\\"'\\\";return A.arrayBuffer()})).catch((function(){return iA()}))).then((function(I){return WebAssembly.instantiate(I,A)})).then(I,(function(A){R(\\\"failed to asynchronously prepare wasm: \\\"+A),gA(A)}))}if($++,C.monitorRunDependencies&&C.monitorRunDependencies($),C.instantiateWasm)try{return C.instantiateWasm(A,I)}catch(A){return R(\\\"Module.instantiateWasm callback failed with error: \\\"+A),!1}return function(){if(S||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||QA(EA)||\\\"function\\\"!=typeof fetch)return B(g);fetch(EA,{credentials:\\\"same-origin\\\"}).then((function(I){return WebAssembly.instantiateStreaming(I,A).then(g,(function(A){R(\\\"wasm streaming compile failed: \\\"+A),R(\\\"falling back to ArrayBuffer instantiation\\\"),B(g)}))}))}(),{}}();C.asm=lI;var fI,qI=C.___wasm_call_ctors=function(){return C.asm.__wasm_call_ctors.apply(null,arguments)},bI=C._malloc=function(){return C.asm.malloc.apply(null,arguments)},pI=C._free=function(){return C.asm.free.apply(null,arguments)},uI=C._realloc=function(){return C.asm.realloc.apply(null,arguments)},ZI=C._setThrew=function(){return C.asm.setThrew.apply(null,arguments)},WI=C.__ZSt18uncaught_exceptionv=function(){return C.asm._ZSt18uncaught_exceptionv.apply(null,arguments)},XI=C.___getTypeName=function(){return C.asm.__getTypeName.apply(null,arguments)},mI=(C.___embind_register_native_and_builtin_types=function(){return C.asm.__embind_register_native_and_builtin_types.apply(null,arguments)},C.dynCall_vi=function(){return C.asm.dynCall_vi.apply(null,arguments)}),xI=C.dynCall_viii=function(){return C.asm.dynCall_viii.apply(null,arguments)},VI=C.dynCall_ii=function(){return C.asm.dynCall_ii.apply(null,arguments)},TI=C.dynCall_iii=function(){return C.asm.dynCall_iii.apply(null,arguments)},vI=C.dynCall_iiii=function(){return C.asm.dynCall_iiii.apply(null,arguments)},jI=C.stackSave=function(){return C.asm.stackSave.apply(null,arguments)},OI=C.stackAlloc=function(){return C.asm.stackAlloc.apply(null,arguments)},PI=C.stackRestore=function(){return C.asm.stackRestore.apply(null,arguments)};function zI(A){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+A+\\\")\\\",this.status=A}function _I(A){function I(){fI||(fI=!0,H||(v(O),v(P),C.onRuntimeInitialized&&C.onRuntimeInitialized(),function(){if(C.postRun)for(\\\"function\\\"==typeof C.postRun&&(C.postRun=[C.postRun]);C.postRun.length;)A=C.postRun.shift(),_.unshift(A);var A;v(_)}()))}A=A||D,$>0||(function(){if(C.preRun)for(\\\"function\\\"==typeof C.preRun&&(C.preRun=[C.preRun]);C.preRun.length;)A=C.preRun.shift(),j.unshift(A);var A;v(j)}(),$>0||(C.setStatus?(C.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){C.setStatus(\\\"\\\")}),1),I()}),1)):I()))}if(C.__growWasmMemory=function(){return C.asm.__growWasmMemory.apply(null,arguments)},C.dynCall_i=function(){return C.asm.dynCall_i.apply(null,arguments)},C.dynCall_vii=function(){return C.asm.dynCall_vii.apply(null,arguments)},C.dynCall_iiiiii=function(){return C.asm.dynCall_iiiiii.apply(null,arguments)},C.dynCall_iiiiiii=function(){return C.asm.dynCall_iiiiiii.apply(null,arguments)},C.dynCall_iiiii=function(){return C.asm.dynCall_iiiii.apply(null,arguments)},C.dynCall_viiii=function(){return C.asm.dynCall_viiii.apply(null,arguments)},C.dynCall_viiiiiii=function(){return C.asm.dynCall_viiiiiii.apply(null,arguments)},C.dynCall_viiiii=function(){return C.asm.dynCall_viiiii.apply(null,arguments)},C.dynCall_jiji=function(){return C.asm.dynCall_jiji.apply(null,arguments)},C.dynCall_viiiiii=function(){return C.asm.dynCall_viiiiii.apply(null,arguments)},C.asm=lI,C.ccall=function(A,I,g,B,Q){var E={string:function(A){var I=0;if(null!=A&&0!==A){var g=1+(A.length<<2);X(A,I=OI(g),g)}return I},array:function(A){var I=OI(A.length);return function(A,I){M.set(A,I)}(A,I),I}},i=function(A){var I=C[\\\"_\\\"+A];return J(I,\\\"Cannot call unknown function \\\"+A+\\\", make sure it is exported\\\"),I}(A),o=[],D=0;if(B)for(var w=0;w<B.length;w++){var a=E[g[w]];a?(0===D&&(D=jI()),o[w]=a(B[w])):o[w]=B[w]}var F=i.apply(null,o);return F=function(A){return\\\"string\\\"===I?W(A):\\\"boolean\\\"===I?Boolean(A):A}(F),0!==D&&PI(D),F},C.then=function(A){if(fI)A(C);else{var I=C.onRuntimeInitialized;C.onRuntimeInitialized=function(){I&&I(),A(C)}}return C},IA=function A(){fI||_I(),fI||(IA=A)},C.run=_I,C.preInit)for(\\\"function\\\"==typeof C.preInit&&(C.preInit=[C.preInit]);C.preInit.length>0;)C.preInit.pop()();return U=!0,_I(),A});A.exports=C},4044:(A,I,g)=>{var B,Q=\\\"/\\\",C=(B=(B=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(A){var I,C=void 0!==(A=A||{})?A:{},E={};for(I in C)C.hasOwnProperty(I)&&(E[I]=C[I]);var i,o,D=[],w=\\\"./this.program\\\",a=!1,F=!1;a=\\\"object\\\"==typeof window,F=\\\"function\\\"==typeof importScripts,i=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node&&!a&&!F,o=!a&&!i&&!F;var G,s,y,h,t=\\\"\\\";i?(t=Q+\\\"/\\\",G=function(A,I){return y||(y=g(9652)),h||(h=g(6087)),A=h.normalize(A),y.readFileSync(A,I?null:\\\"utf8\\\")},s=function(A){var I=G(A,!0);return I.buffer||(I=new Uint8Array(I)),k(I.buffer),I},process.argv.length>1&&(w=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),D=process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(A){if(!(A instanceof pI))throw A})),process.on(\\\"unhandledRejection\\\",$),C.inspect=function(){return\\\"[Emscripten Module object]\\\"}):o?(\\\"undefined\\\"!=typeof read&&(G=function(A){return read(A)}),s=function(A){var I;return\\\"function\\\"==typeof readbuffer?new Uint8Array(readbuffer(A)):(k(\\\"object\\\"==typeof(I=read(A,\\\"binary\\\"))),I)},\\\"undefined\\\"!=typeof scriptArgs?D=scriptArgs:void 0!==arguments&&(D=arguments),\\\"undefined\\\"!=typeof print&&(\\\"undefined\\\"==typeof console&&(console={}),console.log=print,console.warn=console.error=\\\"undefined\\\"!=typeof printErr?printErr:print)):(a||F)&&(F?t=self.location.href:document.currentScript&&(t=document.currentScript.src),B&&(t=B),t=0!==t.indexOf(\\\"blob:\\\")?t.substr(0,t.lastIndexOf(\\\"/\\\")+1):\\\"\\\",G=function(A){var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.send(null),I.responseText},F&&(s=function(A){var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.responseType=\\\"arraybuffer\\\",I.send(null),new Uint8Array(I.response)}));var c=C.print||console.log.bind(console),N=C.printErr||console.warn.bind(console);for(I in E)E.hasOwnProperty(I)&&(C[I]=E[I]);E=null,C.arguments&&(D=C.arguments),C.thisProgram&&(w=C.thisProgram),C.quit&&C.quit;var R,S,U=function(A){};C.wasmBinary&&(R=C.wasmBinary),C.noExitRuntime&&C.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&N(\\\"no native wasm support detected\\\");var n=new WebAssembly.Table({initial:178,maximum:178,element:\\\"anyfunc\\\"}),r=!1;function k(A,I){A||$(\\\"Assertion failed: \\\"+I)}var Y=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function e(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.subarray&&Y)return Y.decode(A.subarray(I,Q));for(var C=\\\"\\\";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else{var D=E-65536;C+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else C+=String.fromCharCode((31&E)<<6|i)}else C+=String.fromCharCode(E)}return C}function H(A,I){return A?e(L,A,I):\\\"\\\"}function J(A,I,g){return function(A,I,g,B){if(!(B>0))return 0;for(var Q=g,C=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=C)break;I[g++]=i}else if(i<=2047){if(g+1>=C)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=C)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=C)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-Q}(A,L,I,g)}\\\"undefined\\\"!=typeof TextDecoder&&new TextDecoder(\\\"utf-16le\\\");var K,M,L,d,l,f,q,b,p,u=16384;function Z(A,I){return A%I>0&&(A+=I-A%I),A}function W(A){K=A,C.HEAP8=M=new Int8Array(A),C.HEAP16=d=new Int16Array(A),C.HEAP32=f=new Int32Array(A),C.HEAPU8=L=new Uint8Array(A),C.HEAPU16=l=new Uint16Array(A),C.HEAPU32=q=new Uint32Array(A),C.HEAPF32=b=new Float32Array(A),C.HEAPF64=p=new Float64Array(A)}var X=24320,m=C.TOTAL_MEMORY||1073741824;function x(A){for(;A.length>0;){var I=A.shift();if(\\\"function\\\"!=typeof I){var g=I.func;\\\"number\\\"==typeof g?void 0===I.arg?C.dynCall_v(g):C.dynCall_vi(g,I.arg):g(void 0===I.arg?null:I.arg)}else I()}}(S=C.wasmMemory?C.wasmMemory:new WebAssembly.Memory({initial:m/65536}))&&(K=S.buffer),m=K.byteLength,W(K),f[X>>2]=5267360;var V=[],T=[],v=[],j=[],O=[];Math.abs,Math.ceil,Math.floor,Math.min;var P=0,z=null,_=null;function $(A){throw C.onAbort&&C.onAbort(A),c(A+=\\\"\\\"),N(A),r=!0,A=\\\"abort(\\\"+A+\\\"). Build with -s ASSERTIONS=1 for more info.\\\",new WebAssembly.RuntimeError(A)}C.preloadedImages={},C.preloadedAudios={};var AA=\\\"data:application/octet-stream;base64,\\\";function IA(A){return String.prototype.startsWith?A.startsWith(AA):0===A.indexOf(AA)}var gA,BA=\\\"openjpegwasm_decode.wasm\\\";function QA(){try{if(R)return new Uint8Array(R);if(s)return s(BA);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(A){$(A)}}function CA(A,I){j.unshift({func:A,arg:I})}IA(BA)||(gA=BA,BA=C.locateFile?C.locateFile(gA,t):t+gA),T.push({func:function(){MI()}});var EA={};function iA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function oA(A){return this.fromWireType(q[A>>2])}var DA={},wA={},aA={},FA=48,GA=57;function sA(A){if(void 0===A)return\\\"_unknown\\\";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return I>=FA&&I<=GA?\\\"_\\\"+A:A}function yA(A,I){return A=sA(A),new Function(\\\"body\\\",\\\"return function \\\"+A+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(I)}function hA(A,I){var g=yA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+\\\"\\\\n\\\"+g.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},g}var tA=void 0;function cA(A){throw new tA(A)}function NA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&cA(\\\"Mismatched type converter count\\\");for(var Q=0;Q<A.length;++Q)kA(A[Q],B[Q])}A.forEach((function(A){aA[A]=I}));var Q=new Array(I.length),C=[],E=0;I.forEach((function(A,I){wA.hasOwnProperty(A)?Q[I]=wA[A]:(C.push(A),DA.hasOwnProperty(A)||(DA[A]=[]),DA[A].push((function(){Q[I]=wA[A],++E===C.length&&B(Q)})))})),0===C.length&&B(Q)}function RA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+A)}}var SA=void 0;function UA(A){for(var I=\\\"\\\",g=A;L[g];)I+=SA[L[g++]];return I}var nA=void 0;function rA(A){throw new nA(A)}function kA(A,I,g){if(g=g||{},!(\\\"argPackAdvance\\\"in I))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var B=I.name;if(A||rA('type \\\"'+B+'\\\" must have a positive integer typeid pointer'),wA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;rA(\\\"Cannot register type '\\\"+B+\\\"' twice\\\")}if(wA[A]=I,delete aA[A],DA.hasOwnProperty(A)){var Q=DA[A];delete DA[A],Q.forEach((function(A){A()}))}}function YA(A){if(!(this instanceof uA))return!1;if(!(A instanceof uA))return!1;for(var I=this.$$.ptrType.registeredClass,g=this.$$.ptr,B=A.$$.ptrType.registeredClass,Q=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)Q=B.upcast(Q),B=B.baseClass;return I===B&&g===Q}function eA(A){rA(A.$$.ptrType.registeredClass.name+\\\" instance already deleted\\\")}var HA=!1;function JA(A){}function KA(A){A.count.value-=1,0===A.count.value&&function(A){A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)}(A)}function MA(A){return\\\"undefined\\\"==typeof FinalizationGroup?(MA=function(A){return A},A):(HA=new FinalizationGroup((function(A){for(var I=A.next();!I.done;I=A.next()){var g=I.value;g.ptr?KA(g):console.warn(\\\"object already deleted: \\\"+g.ptr)}})),MA=function(A){return HA.register(A,A.$$,A.$$),A},JA=function(A){HA.unregister(A.$$)},MA(A))}function LA(){if(this.$$.ptr||eA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=MA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I}function dA(){this.$$.ptr||eA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&rA(\\\"Object already scheduled for deletion\\\"),JA(this),KA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function lA(){return!this.$$.ptr}var fA=void 0,qA=[];function bA(){for(;qA.length;){var A=qA.pop();A.$$.deleteScheduled=!1,A.delete()}}function pA(){return this.$$.ptr||eA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&rA(\\\"Object already scheduled for deletion\\\"),qA.push(this),1===qA.length&&fA&&fA(bA),this.$$.deleteScheduled=!0,this}function uA(){}var ZA={};function WA(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||rA(\\\"Function '\\\"+g+\\\"' called with an invalid number of arguments (\\\"+arguments.length+\\\") - expects one of (\\\"+A[I].overloadTable+\\\")!\\\"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function XA(A,I,g,B,Q,C,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=Q,this.getActualType=C,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}function mA(A,I,g){for(;I!==g;)I.upcast||rA(\\\"Expected null or instance of \\\"+g.name+\\\", got an instance of \\\"+I.name),A=I.upcast(A),I=I.baseClass;return A}function xA(A,I){if(null===I)return this.isReference&&rA(\\\"null is not a valid \\\"+this.name),0;I.$$||rA('Cannot pass \\\"'+tI(I)+'\\\" as a '+this.name),I.$$.ptr||rA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return mA(I.$$.ptr,g,this.registeredClass)}function VA(A,I){var g;if(null===I)return this.isReference&&rA(\\\"null is not a valid \\\"+this.name),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I.$$||rA('Cannot pass \\\"'+tI(I)+'\\\" as a '+this.name),I.$$.ptr||rA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),!this.isConst&&I.$$.ptrType.isConst&&rA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);var B=I.$$.ptrType.registeredClass;if(g=mA(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&rA(\\\"Passing raw pointer to smart pointer is illegal\\\"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:rA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var Q=I.clone();g=this.rawShare(g,hI((function(){Q.delete()}))),null!==A&&A.push(this.rawDestructor,g)}break;default:rA(\\\"Unsupporting sharing policy\\\")}return g}function TA(A,I){if(null===I)return this.isReference&&rA(\\\"null is not a valid \\\"+this.name),0;I.$$||rA('Cannot pass \\\"'+tI(I)+'\\\" as a '+this.name),I.$$.ptr||rA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),I.$$.ptrType.isConst&&rA(\\\"Cannot convert argument of type \\\"+I.$$.ptrType.name+\\\" to parameter type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return mA(I.$$.ptr,g,this.registeredClass)}function vA(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A}function jA(A){this.rawDestructor&&this.rawDestructor(A)}function OA(A){null!==A&&A.delete()}function PA(A,I,g){if(I===g)return A;if(void 0===g.baseClass)return null;var B=PA(A,I,g.baseClass);return null===B?null:g.downcast(B)}function zA(){return Object.keys(AI).length}function _A(){var A=[];for(var I in AI)AI.hasOwnProperty(I)&&A.push(AI[I]);return A}function $A(A){fA=A,qA.length&&fA&&fA(bA)}var AI={};function II(A,I){return I=function(A,I){for(void 0===I&&rA(\\\"ptr should not be undefined\\\");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I}(A,I),AI[I]}function gI(A,I){return I.ptrType&&I.ptr||cA(\\\"makeClassHandle requires ptr and ptrType\\\"),!!I.smartPtrType!=!!I.smartPtr&&cA(\\\"Both smartPtrType and smartPtr must be specified\\\"),I.count={value:1},MA(Object.create(A,{$$:{value:I}}))}function BI(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=II(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function Q(){return this.isSmartPointer?gI(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):gI(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var C,E=this.registeredClass.getActualType(I),i=ZA[E];if(!i)return Q.call(this);C=this.isConst?i.constPointerType:i.pointerType;var o=PA(I,this.registeredClass,C.registeredClass);return null===o?Q.call(this):this.isSmartPointer?gI(C.registeredClass.instancePrototype,{ptrType:C,ptr:o,smartPtrType:this,smartPtr:A}):gI(C.registeredClass.instancePrototype,{ptrType:C,ptr:o})}function QI(A,I,g,B,Q,C,E,i,o,D,w){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=Q,this.pointeeType=C,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=w,Q||void 0!==I.baseClass?this.toWireType=VA:B?(this.toWireType=xA,this.destructorFunction=null):(this.toWireType=TA,this.destructorFunction=null)}function CI(A,I){var g;if(A=UA(A),void 0!==C[\\\"FUNCTION_TABLE_\\\"+A])g=C[\\\"FUNCTION_TABLE_\\\"+A][I];else if(\\\"undefined\\\"!=typeof FUNCTION_TABLE)g=FUNCTION_TABLE[I];else{var B=C[\\\"dynCall_\\\"+A];void 0===B&&void 0===(B=C[\\\"dynCall_\\\"+A.replace(/f/g,\\\"d\\\")])&&rA(\\\"No dynCall invoker for signature: \\\"+A),g=function(g){for(var B=[],Q=1;Q<A.length;++Q)B.push(\\\"a\\\"+Q);var C=\\\"return function dynCall_\\\"+A+\\\"_\\\"+I+\\\"(\\\"+B.join(\\\", \\\")+\\\") {\\\\n\\\";return C+=\\\"    return dynCall(rawFunction\\\"+(B.length?\\\", \\\":\\\"\\\")+B.join(\\\", \\\")+\\\");\\\\n\\\",C+=\\\"};\\\\n\\\",new Function(\\\"dynCall\\\",\\\"rawFunction\\\",C)(g,I)}(B)}return\\\"function\\\"!=typeof g&&rA(\\\"unknown function pointer with signature \\\"+A+\\\": \\\"+I),g}var EI=void 0;function iI(A){var I=lI(A),g=UA(I);return dI(I),g}function oI(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||wA[I]||(aA[I]?aA[I].forEach(A):(g.push(I),B[I]=!0))})),new EI(A+\\\": \\\"+g.map(iI).join([\\\", \\\"]))}function DI(A,I){for(var g=[],B=0;B<A;B++)g.push(f[(I>>2)+B]);return g}function wI(A,I,g,B,Q){var C=I.length;C<2&&rA(\\\"argTypes array size mismatch! Must at least get return value and 'this' types!\\\");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var D=\\\"void\\\"!==I[0].name,w=\\\"\\\",a=\\\"\\\";for(o=0;o<C-2;++o)w+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o,a+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o+\\\"Wired\\\";var F=\\\"return function \\\"+sA(A)+\\\"(\\\"+w+\\\") {\\\\nif (arguments.length !== \\\"+(C-2)+\\\") {\\\\nthrowBindingError('function \\\"+A+\\\" called with ' + arguments.length + ' arguments, expected \\\"+(C-2)+\\\" args!');\\\\n}\\\\n\\\";i&&(F+=\\\"var destructors = [];\\\\n\\\");var G=i?\\\"destructors\\\":\\\"null\\\",s=[\\\"throwBindingError\\\",\\\"invoker\\\",\\\"fn\\\",\\\"runDestructors\\\",\\\"retType\\\",\\\"classParam\\\"],y=[rA,B,Q,iA,I[0],I[1]];for(E&&(F+=\\\"var thisWired = classParam.toWireType(\\\"+G+\\\", this);\\\\n\\\"),o=0;o<C-2;++o)F+=\\\"var arg\\\"+o+\\\"Wired = argType\\\"+o+\\\".toWireType(\\\"+G+\\\", arg\\\"+o+\\\"); // \\\"+I[o+2].name+\\\"\\\\n\\\",s.push(\\\"argType\\\"+o),y.push(I[o+2]);if(E&&(a=\\\"thisWired\\\"+(a.length>0?\\\", \\\":\\\"\\\")+a),F+=(D?\\\"var rv = \\\":\\\"\\\")+\\\"invoker(fn\\\"+(a.length>0?\\\", \\\":\\\"\\\")+a+\\\");\\\\n\\\",i)F+=\\\"runDestructors(destructors);\\\\n\\\";else for(o=E?1:2;o<I.length;++o){var h=1===o?\\\"thisWired\\\":\\\"arg\\\"+(o-2)+\\\"Wired\\\";null!==I[o].destructorFunction&&(F+=h+\\\"_dtor(\\\"+h+\\\"); // \\\"+I[o].name+\\\"\\\\n\\\",s.push(h+\\\"_dtor\\\"),y.push(I[o].destructorFunction))}return D&&(F+=\\\"var ret = retType.fromWireType(rv);\\\\nreturn ret;\\\\n\\\"),F+=\\\"}\\\\n\\\",s.push(F),function(A,I){if(!(A instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof A+\\\" which is not a function\\\");var g=yA(A.name||\\\"unknownFunctionName\\\",(function(){}));g.prototype=A.prototype;var B=new g,Q=A.apply(B,I);return Q instanceof Object?Q:B}(Function,s).apply(null,y)}var aI=[],FI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function GI(A){A>4&&0==--FI[A].refcount&&(FI[A]=void 0,aI.push(A))}function sI(){for(var A=0,I=5;I<FI.length;++I)void 0!==FI[I]&&++A;return A}function yI(){for(var A=5;A<FI.length;++A)if(void 0!==FI[A])return FI[A];return null}function hI(A){switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=aI.length?aI.pop():FI.length;return FI[I]={refcount:1,value:A},I}}function tI(A){if(null===A)return\\\"null\\\";var I=typeof A;return\\\"object\\\"===I||\\\"array\\\"===I||\\\"function\\\"===I?A.toString():\\\"\\\"+A}function cI(A,I){switch(I){case 2:return function(A){return this.fromWireType(b[A>>2])};case 3:return function(A){return this.fromWireType(p[A>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+A)}}function NI(A,I,g){switch(I){case 0:return g?function(A){return M[A]}:function(A){return L[A]};case 1:return g?function(A){return d[A>>1]}:function(A){return l[A>>1]};case 2:return g?function(A){return f[A>>2]}:function(A){return q[A>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+A)}}var RI={};function SI(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}function UI(A,I){var g=wA[A];return void 0===g&&rA(I+\\\" has unknown type \\\"+iI(A)),g}var nI={};function rI(){return M.length}var kI={};function YI(){if(!YI.strings){var A={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:w};for(var I in kI)A[I]=kI[I];var g=[];for(var I in A)g.push(I+\\\"=\\\"+A[I]);YI.strings=g}return YI.strings}var eI={buffers:[null,[],[]],printChar:function(A,I){var g=eI.buffers[A];0===I||10===I?((1===A?c:N)(e(g,0)),g.length=0):g.push(I)},varargs:0,get:function(A){return eI.varargs+=4,f[eI.varargs-4>>2]},getStr:function(){return H(eI.get())},get64:function(){var A=eI.get();return eI.get(),A},getZero:function(){eI.get()}};tA=C.InternalError=hA(Error,\\\"InternalError\\\"),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);SA=A}(),nA=C.BindingError=hA(Error,\\\"BindingError\\\"),uA.prototype.isAliasOf=YA,uA.prototype.clone=LA,uA.prototype.delete=dA,uA.prototype.isDeleted=lA,uA.prototype.deleteLater=pA,QI.prototype.getPointee=vA,QI.prototype.destructor=jA,QI.prototype.argPackAdvance=8,QI.prototype.readValueFromPointer=oA,QI.prototype.deleteObject=OA,QI.prototype.fromWireType=BI,C.getInheritedInstanceCount=zA,C.getLiveInheritedInstances=_A,C.flushPendingDeletes=bA,C.setDelayFunction=$A,EI=C.UnboundTypeError=hA(Error,\\\"UnboundTypeError\\\"),C.count_emval_handles=sI,C.get_first_emval=yI;var HI={__cxa_thread_atexit:function(){return CA.apply(null,arguments)},_embind_finalize_value_object:function(A){var I=EA[A];delete EA[A];var g=I.rawConstructor,B=I.rawDestructor,Q=I.fields;NA([A],Q.map((function(A){return A.getterReturnType})).concat(Q.map((function(A){return A.setterArgumentType}))),(function(A){var C={};return Q.forEach((function(I,g){var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+Q.length],w=I.setter,a=I.setterContext;C[B]={read:function(A){return E.fromWireType(i(o,A))},write:function(A,I){var g=[];w(a,A,D.toWireType(g,I)),iA(g)}}})),[{name:I.name,fromWireType:function(A){var I={};for(var g in C)I[g]=C[g].read(A);return B(A),I},toWireType:function(A,I){for(var Q in C)if(!(Q in I))throw new TypeError(\\\"Missing field\\\");var E=g();for(Q in C)C[Q].write(E,I[Q]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:oA,destructorFunction:B}]}))},_embind_register_bool:function(A,I,g,B,Q){var C=RA(g);kA(A,{name:I=UA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:Q},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=M;else if(2===g)B=d;else{if(4!==g)throw new TypeError(\\\"Unknown boolean type size: \\\"+I);B=f}return this.fromWireType(B[A>>C])},destructorFunction:null})},_embind_register_class:function(A,I,g,B,Q,E,i,o,D,w,a,F,G){a=UA(a),E=CI(Q,E),o&&(o=CI(i,o)),w&&(w=CI(D,w)),G=CI(F,G);var s=sA(a);!function(A,I,g){C.hasOwnProperty(A)?((void 0===g||void 0!==C[A].overloadTable&&void 0!==C[A].overloadTable[g])&&rA(\\\"Cannot register public name '\\\"+A+\\\"' twice\\\"),WA(C,A,A),C.hasOwnProperty(g)&&rA(\\\"Cannot register multiple overloads of a function with the same number of arguments (\\\"+g+\\\")!\\\"),C[A].overloadTable[g]=I):(C[A]=I,void 0!==g&&(C[A].numArguments=g))}(s,(function(){oI(\\\"Cannot construct \\\"+a+\\\" due to unbound types\\\",[B])})),NA([A,I,g],B?[B]:[],(function(I){var g,Q;I=I[0],Q=B?(g=I.registeredClass).instancePrototype:uA.prototype;var i=yA(s,(function(){if(Object.getPrototypeOf(this)!==D)throw new nA(\\\"Use 'new' to construct \\\"+a);if(void 0===F.constructor_body)throw new nA(a+\\\" has no accessible constructor\\\");var A=F.constructor_body[arguments.length];if(void 0===A)throw new nA(\\\"Tried to invoke ctor of \\\"+a+\\\" with invalid number of parameters (\\\"+arguments.length+\\\") - expected (\\\"+Object.keys(F.constructor_body).toString()+\\\") parameters instead!\\\");return A.apply(this,arguments)})),D=Object.create(Q,{constructor:{value:i}});i.prototype=D;var F=new XA(a,i,D,G,g,E,o,w),y=new QI(a,F,!0,!1,!1),h=new QI(a+\\\"*\\\",F,!1,!1,!1),t=new QI(a+\\\" const*\\\",F,!1,!0,!1);return ZA[A]={pointerType:h,constPointerType:t},function(A,I,g){C.hasOwnProperty(A)||cA(\\\"Replacing nonexistant public symbol\\\"),void 0!==C[A].overloadTable&&void 0!==g?C[A].overloadTable[g]=I:(C[A]=I,C[A].argCount=g)}(s,i),[y,h,t]}))},_embind_register_class_constructor:function(A,I,g,B,Q,C){k(I>0);var E=DI(I,g);Q=CI(B,Q);var i=[C],o=[];NA([],[A],(function(A){var g=\\\"constructor \\\"+(A=A[0]).name;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new nA(\\\"Cannot register multiple constructors with identical number of parameters (\\\"+(I-1)+\\\") for class '\\\"+A.name+\\\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\\\");return A.registeredClass.constructor_body[I-1]=function(){oI(\\\"Cannot construct \\\"+A.name+\\\" due to unbound types\\\",E)},NA([],E,(function(B){return A.registeredClass.constructor_body[I-1]=function(){arguments.length!==I-1&&rA(g+\\\" called with \\\"+arguments.length+\\\" arguments, expected \\\"+(I-1)),o.length=0,i.length=I;for(var A=1;A<I;++A)i[A]=B[A].toWireType(o,arguments[A-1]);var C=Q.apply(null,i);return iA(o),B[0].fromWireType(C)},[]})),[]}))},_embind_register_class_function:function(A,I,g,B,Q,C,E,i){var o=DI(g,B);I=UA(I),C=CI(Q,C),NA([],[A],(function(A){var B=(A=A[0]).name+\\\".\\\"+I;function Q(){oI(\\\"Cannot call \\\"+B+\\\" due to unbound types\\\",o)}i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,w=D[I];return void 0===w||void 0===w.overloadTable&&w.className!==A.name&&w.argCount===g-2?(Q.argCount=g-2,Q.className=A.name,D[I]=Q):(WA(D,I,B),D[I].overloadTable[g-2]=Q),NA([],o,(function(Q){var i=wI(B,Q,A,C,E);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},_embind_register_emval:function(A,I){kA(A,{name:I=UA(I),fromWireType:function(A){var I=FI[A].value;return GI(A),I},toWireType:function(A,I){return hI(I)},argPackAdvance:8,readValueFromPointer:oA,destructorFunction:null})},_embind_register_float:function(A,I,g){var B=RA(g);kA(A,{name:I=UA(I),fromWireType:function(A){return A},toWireType:function(A,I){if(\\\"number\\\"!=typeof I&&\\\"boolean\\\"!=typeof I)throw new TypeError('Cannot convert \\\"'+tI(I)+'\\\" to '+this.name);return I},argPackAdvance:8,readValueFromPointer:cI(I,B),destructorFunction:null})},_embind_register_integer:function(A,I,g,B,Q){I=UA(I),-1===Q&&(Q=4294967295);var C=RA(g),E=function(A){return A};if(0===B){var i=32-8*g;E=function(A){return A<<i>>>i}}var o=-1!=I.indexOf(\\\"unsigned\\\");kA(A,{name:I,fromWireType:E,toWireType:function(A,g){if(\\\"number\\\"!=typeof g&&\\\"boolean\\\"!=typeof g)throw new TypeError('Cannot convert \\\"'+tI(g)+'\\\" to '+this.name);if(g<B||g>Q)throw new TypeError('Passing a number \\\"'+tI(g)+'\\\" from JS side to C/C++ side to an argument of type \\\"'+I+'\\\", which is outside the valid range ['+B+\\\", \\\"+Q+\\\"]!\\\");return o?g>>>0:0|g},argPackAdvance:8,readValueFromPointer:NI(I,C,0!==B),destructorFunction:null})},_embind_register_memory_view:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function Q(A){var I=q,g=I[A>>=2],Q=I[A+1];return new B(I.buffer,Q,g)}kA(A,{name:g=UA(g),fromWireType:Q,argPackAdvance:8,readValueFromPointer:Q},{ignoreDuplicateRegistrations:!0})},_embind_register_std_string:function(A,I){var g=\\\"std::string\\\"===(I=UA(I));kA(A,{name:I,fromWireType:function(A){var I,B=q[A>>2];if(g){var Q=L[A+4+B],C=0;0!=Q&&(C=Q,L[A+4+B]=0);for(var E=A+4,i=0;i<=B;++i){var o=A+4+i;if(0==L[o]){var D=H(E);void 0===I?I=D:(I+=String.fromCharCode(0),I+=D),E=o+1}}0!=C&&(L[A+4+B]=C)}else{var w=new Array(B);for(i=0;i<B;++i)w[i]=String.fromCharCode(L[A+4+i]);I=w.join(\\\"\\\")}return dI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var Q=\\\"string\\\"==typeof I;Q||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||rA(\\\"Cannot pass non-string to std::string\\\"),B=g&&Q?function(){return function(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&(B=65536+((1023&B)<<10)|1023&A.charCodeAt(++g)),B<=127?++I:I+=B<=2047?2:B<=65535?3:4}return I}(I)}:function(){return I.length};var C=B(),E=LI(4+C+1);if(q[E>>2]=C,g&&Q)J(I,E+4,C+1);else if(Q)for(var i=0;i<C;++i){var o=I.charCodeAt(i);o>255&&(dI(E),rA(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),L[E+4+i]=o}else for(i=0;i<C;++i)L[E+4+i]=I[i];return null!==A&&A.push(dI,E),E},argPackAdvance:8,readValueFromPointer:oA,destructorFunction:function(A){dI(A)}})},_embind_register_std_wstring:function(A,I,g){var B,Q;g=UA(g),2===I?(B=function(){return l},Q=1):4===I&&(B=function(){return q},Q=2),kA(A,{name:g,fromWireType:function(A){for(var I=B(),g=q[A>>2],C=new Array(g),E=A+4>>Q,i=0;i<g;++i)C[i]=String.fromCharCode(I[E+i]);return dI(A),C.join(\\\"\\\")},toWireType:function(A,g){var C=g.length,E=LI(4+C*I),i=B();q[E>>2]=C;for(var o=E+4>>Q,D=0;D<C;++D)i[o+D]=g.charCodeAt(D);return null!==A&&A.push(dI,E),E},argPackAdvance:8,readValueFromPointer:oA,destructorFunction:function(A){dI(A)}})},_embind_register_value_object:function(A,I,g,B,Q,C){EA[A]={name:UA(I),rawConstructor:CI(g,B),rawDestructor:CI(Q,C),fields:[]}},_embind_register_value_object_field:function(A,I,g,B,Q,C,E,i,o,D){EA[A].fields.push({fieldName:UA(I),getterReturnType:g,getter:CI(B,Q),getterContext:C,setterArgumentType:E,setter:CI(i,o),setterContext:D})},_embind_register_void:function(A,I){kA(A,{isVoid:!0,name:I=UA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},_emval_decref:GI,_emval_get_global:function(A){return 0===A?hI(SI()):(A=void 0===(g=RI[I=A])?UA(I):g,hI(SI()[A]));var I,g},_emval_incref:function(A){A>4&&(FI[A].refcount+=1)},_emval_new:function(A,I,g,B){A=function(A){return A||rA(\\\"Cannot use deleted val. handle = \\\"+A),FI[A].value}(A);var Q=nI[I];return Q||(Q=function(A){for(var I=\\\"\\\",g=0;g<A;++g)I+=(0!==g?\\\", \\\":\\\"\\\")+\\\"arg\\\"+g;var B=\\\"return function emval_allocator_\\\"+A+\\\"(constructor, argTypes, args) {\\\\n\\\";for(g=0;g<A;++g)B+=\\\"var argType\\\"+g+\\\" = requireRegisteredType(Module['HEAP32'][(argTypes >> 2) + \\\"+g+'], \\\"parameter '+g+'\\\");\\\\nvar arg'+g+\\\" = argType\\\"+g+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+g+\\\"['argPackAdvance'];\\\\n\\\";return B+=\\\"var obj = new constructor(\\\"+I+\\\");\\\\nreturn __emval_register(obj);\\\\n}\\\\n\\\",new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"__emval_register\\\",B)(UI,C,hI)}(I),nI[I]=Q),Q(A,g,B)},_emval_take_value:function(A,I){return hI((A=UI(A,\\\"_emval_take_value\\\")).readValueFromPointer(I))},abort:function(){$()},emscripten_get_sbrk_ptr:function(){return 24320},emscripten_memcpy_big:function(A,I,g){L.set(L.subarray(I,I+g),A)},emscripten_resize_heap:function(A){var I=rI(),g=65536,B=2147418112;if(A>B)return!1;for(var Q=Math.max(I,16777216);Q<A;)Q=Q<=536870912?Z(2*Q,g):Math.min(Z((3*Q+2147483648)/4,g),B);return!!function(A){try{return S.grow(A-K.byteLength+65535>>16),W(S.buffer),1}catch(A){}}(Q)},environ_get:function(A,I){var g=YI(),B=0;return g.forEach((function(g,Q){var C=I+B;f[A+4*Q>>2]=C,function(A,I,g){for(var B=0;B<A.length;++B)M[I++>>0]=A.charCodeAt(B);g||(M[I>>0]=0)}(g,C),B+=g.length+1})),0},environ_sizes_get:function(A,I){var g=YI();f[A>>2]=g.length;var B=0;return g.forEach((function(A){B+=A.length+1})),f[I>>2]=B,0},fd_close:function(A){try{return 0}catch(A){return\\\"undefined\\\"!=typeof FS&&A instanceof FS.ErrnoError||$(A),A.errno}},fd_seek:function(A,I,g,B,Q){try{return 0}catch(A){return\\\"undefined\\\"!=typeof FS&&A instanceof FS.ErrnoError||$(A),A.errno}},fd_write:function(A,I,g,B){try{for(var Q=0,C=0;C<g;C++){for(var E=f[I+8*C>>2],i=f[I+(8*C+4)>>2],o=0;o<i;o++)eI.printChar(A,L[E+o]);Q+=i}return f[B>>2]=Q,0}catch(A){return\\\"undefined\\\"!=typeof FS&&A instanceof FS.ErrnoError||$(A),A.errno}},memory:S,pthread_attr_init:function(A){return 0},pthread_attr_setdetachstate:function(){},pthread_cond_destroy:function(){return 0},pthread_cond_init:function(){return 0},pthread_create:function(){return 6},pthread_join:function(){},setTempRet0:function(A){U(0|A)},sysconf:function(A){switch(A){case 30:return u;case 85:return 2147418112/u;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return\\\"object\\\"==typeof navigator&&navigator.hardwareConcurrency||1}var I;return I=28,C.___errno_location&&(f[C.___errno_location()>>2]=I),-1},table:n},JI=function(){var A={env:HI,wasi_snapshot_preview1:HI};function I(A,I){var g=A.exports;C.asm=g,function(A){if(P--,C.monitorRunDependencies&&C.monitorRunDependencies(P),0==P&&(null!==z&&(clearInterval(z),z=null),_)){var I=_;_=null,I()}}()}function g(A){I(A.instance)}function B(I){return(R||!a&&!F||\\\"function\\\"!=typeof fetch?new Promise((function(A,I){A(QA())})):fetch(BA,{credentials:\\\"same-origin\\\"}).then((function(A){if(!A.ok)throw\\\"failed to load wasm binary file at '\\\"+BA+\\\"'\\\";return A.arrayBuffer()})).catch((function(){return QA()}))).then((function(I){return WebAssembly.instantiate(I,A)})).then(I,(function(A){N(\\\"failed to asynchronously prepare wasm: \\\"+A),$(A)}))}if(P++,C.monitorRunDependencies&&C.monitorRunDependencies(P),C.instantiateWasm)try{return C.instantiateWasm(A,I)}catch(A){return N(\\\"Module.instantiateWasm callback failed with error: \\\"+A),!1}return function(){if(R||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||IA(BA)||\\\"function\\\"!=typeof fetch)return B(g);fetch(BA,{credentials:\\\"same-origin\\\"}).then((function(I){return WebAssembly.instantiateStreaming(I,A).then(g,(function(A){N(\\\"wasm streaming compile failed: \\\"+A),N(\\\"falling back to ArrayBuffer instantiation\\\"),B(g)}))}))}(),{}}();C.asm=JI;var KI,MI=C.___wasm_call_ctors=function(){return C.asm.__wasm_call_ctors.apply(null,arguments)},LI=C._malloc=function(){return C.asm.malloc.apply(null,arguments)},dI=C._free=function(){return C.asm.free.apply(null,arguments)},lI=(C._setThrew=function(){return C.asm.setThrew.apply(null,arguments)},C.__ZSt18uncaught_exceptionv=function(){return C.asm._ZSt18uncaught_exceptionv.apply(null,arguments)},C.___getTypeName=function(){return C.asm.__getTypeName.apply(null,arguments)}),fI=(C.___embind_register_native_and_builtin_types=function(){return C.asm.__embind_register_native_and_builtin_types.apply(null,arguments)},C.stackSave=function(){return C.asm.stackSave.apply(null,arguments)}),qI=C.stackAlloc=function(){return C.asm.stackAlloc.apply(null,arguments)},bI=C.stackRestore=function(){return C.asm.stackRestore.apply(null,arguments)};function pI(A){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+A+\\\")\\\",this.status=A}function uI(A){function I(){KI||(KI=!0,r||(x(T),x(v),C.onRuntimeInitialized&&C.onRuntimeInitialized(),function(){if(C.postRun)for(\\\"function\\\"==typeof C.postRun&&(C.postRun=[C.postRun]);C.postRun.length;)A=C.postRun.shift(),O.unshift(A);var A;x(O)}()))}A=A||D,P>0||(function(){if(C.preRun)for(\\\"function\\\"==typeof C.preRun&&(C.preRun=[C.preRun]);C.preRun.length;)A=C.preRun.shift(),V.unshift(A);var A;x(V)}(),P>0||(C.setStatus?(C.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){C.setStatus(\\\"\\\")}),1),I()}),1)):I()))}if(C.__growWasmMemory=function(){return C.asm.__growWasmMemory.apply(null,arguments)},C.dynCall_i=function(){return C.asm.dynCall_i.apply(null,arguments)},C.dynCall_vi=function(){return C.asm.dynCall_vi.apply(null,arguments)},C.dynCall_iii=function(){return C.asm.dynCall_iii.apply(null,arguments)},C.dynCall_viii=function(){return C.asm.dynCall_viii.apply(null,arguments)},C.dynCall_ii=function(){return C.asm.dynCall_ii.apply(null,arguments)},C.dynCall_iiii=function(){return C.asm.dynCall_iiii.apply(null,arguments)},C.dynCall_vii=function(){return C.asm.dynCall_vii.apply(null,arguments)},C.dynCall_viiii=function(){return C.asm.dynCall_viiii.apply(null,arguments)},C.dynCall_iji=function(){return C.asm.dynCall_iji.apply(null,arguments)},C.dynCall_jji=function(){return C.asm.dynCall_jji.apply(null,arguments)},C.dynCall_iiji=function(){return C.asm.dynCall_iiji.apply(null,arguments)},C.dynCall_jiji=function(){return C.asm.dynCall_jiji.apply(null,arguments)},C.dynCall_iiiii=function(){return C.asm.dynCall_iiiii.apply(null,arguments)},C.dynCall_iiiiii=function(){return C.asm.dynCall_iiiiii.apply(null,arguments)},C.dynCall_iiiiiiii=function(){return C.asm.dynCall_iiiiiiii.apply(null,arguments)},C.dynCall_iiiiiii=function(){return C.asm.dynCall_iiiiiii.apply(null,arguments)},C.dynCall_iiiiiiiiiiii=function(){return C.asm.dynCall_iiiiiiiiiiii.apply(null,arguments)},C.dynCall_iidiiii=function(){return C.asm.dynCall_iidiiii.apply(null,arguments)},C.dynCall_viiiiii=function(){return C.asm.dynCall_viiiiii.apply(null,arguments)},C.dynCall_viiiii=function(){return C.asm.dynCall_viiiii.apply(null,arguments)},C.asm=JI,C.ccall=function(A,I,g,B,Q){var E={string:function(A){var I=0;if(null!=A&&0!==A){var g=1+(A.length<<2);J(A,I=qI(g),g)}return I},array:function(A){var I=qI(A.length);return function(A,I){M.set(A,I)}(A,I),I}},i=function(A){var I=C[\\\"_\\\"+A];return k(I,\\\"Cannot call unknown function \\\"+A+\\\", make sure it is exported\\\"),I}(A),o=[],D=0;if(B)for(var w=0;w<B.length;w++){var a=E[g[w]];a?(0===D&&(D=fI()),o[w]=a(B[w])):o[w]=B[w]}var F=i.apply(null,o);return F=function(A){return\\\"string\\\"===I?H(A):\\\"boolean\\\"===I?Boolean(A):A}(F),0!==D&&bI(D),F},C.then=function(A){if(KI)A(C);else{var I=C.onRuntimeInitialized;C.onRuntimeInitialized=function(){I&&I(),A(C)}}return C},_=function A(){KI||uI(),KI||(_=A)},C.run=uI,C.preInit)for(\\\"function\\\"==typeof C.preInit&&(C.preInit=[C.preInit]);C.preInit.length>0;)C.preInit.pop()();return uI(),A});A.exports=C},6396:(A,I,g)=>{var B,Q=\\\"/\\\",C=(B=(B=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(A){A=void 0!==(A=A||{})?A:{};var I,C={};for(I in A)A.hasOwnProperty(I)&&(C[I]=A[I]);var E,i,o=[],D=!1,w=!1,a=!1;D=\\\"object\\\"==typeof window,w=\\\"function\\\"==typeof importScripts,E=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,a=E&&!D&&!w,i=!D&&!a&&!w;var F,G,s,y,h=\\\"\\\";a?(h=Q+\\\"/\\\",F=function(A,I){var B=KI(A);return B?I?B:B.toString():(s||(s=g(4555)),y||(y=g(1005)),A=y.normalize(A),s.readFileSync(A,I?null:\\\"utf8\\\"))},G=function(A){var I=F(A,!0);return I.buffer||(I=new Uint8Array(I)),Y(I.buffer),I},process.argv.length>1&&process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\"),o=process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(A){if(!(A instanceof Cg))throw A})),process.on(\\\"unhandledRejection\\\",AA),A.inspect=function(){return\\\"[Emscripten Module object]\\\"}):i?(\\\"undefined\\\"!=typeof read&&(F=function(A){var I=KI(A);return I?HI(I):read(A)}),G=function(A){var I;return(I=KI(A))?I:\\\"function\\\"==typeof readbuffer?new Uint8Array(readbuffer(A)):(Y(\\\"object\\\"==typeof(I=read(A,\\\"binary\\\"))),I)},\\\"undefined\\\"!=typeof scriptArgs?o=scriptArgs:void 0!==arguments&&(o=arguments),\\\"undefined\\\"!=typeof print&&(\\\"undefined\\\"==typeof console&&(console={}),console.log=print,console.warn=console.error=\\\"undefined\\\"!=typeof printErr?printErr:print)):(D||w)&&(w?h=self.location.href:document.currentScript&&(h=document.currentScript.src),B&&(h=B),h=0!==h.indexOf(\\\"blob:\\\")?h.substr(0,h.lastIndexOf(\\\"/\\\")+1):\\\"\\\",F=function(A){try{var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.send(null),I.responseText}catch(I){var g=KI(A);if(g)return HI(g);throw I}},w&&(G=function(A){try{var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.responseType=\\\"arraybuffer\\\",I.send(null),new Uint8Array(I.response)}catch(I){var g=KI(A);if(g)return g;throw I}}));var t=A.print||console.log.bind(console),c=A.printErr||console.warn.bind(console);for(I in C)C.hasOwnProperty(I)&&(A[I]=C[I]);C=null,A.arguments&&(o=A.arguments),A.thisProgram&&A.thisProgram,A.quit&&A.quit;var N,R,S=0,U=function(A){S=A},n=function(){return S};A.wasmBinary&&(N=A.wasmBinary),A.noExitRuntime&&A.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&c(\\\"no native wasm support detected\\\");var r=new WebAssembly.Table({initial:197,maximum:197,element:\\\"anyfunc\\\"}),k=!1;function Y(A,I){A||AA(\\\"Assertion failed: \\\"+I)}var e,H,J,K,M,L,d,l,f,q=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function b(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.subarray&&q)return q.decode(A.subarray(I,Q));for(var C=\\\"\\\";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else{var D=E-65536;C+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else C+=String.fromCharCode((31&E)<<6|i)}else C+=String.fromCharCode(E)}return C}function p(A,I){return A?b(J,A,I):\\\"\\\"}function u(A,I,g){return function(A,I,g,B){if(!(B>0))return 0;for(var Q=g,C=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=C)break;I[g++]=i}else if(i<=2047){if(g+1>=C)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=C)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=C)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-Q}(A,J,I,g)}function Z(A,I){return A%I>0&&(A+=I-A%I),A}function W(I){e=I,A.HEAP8=H=new Int8Array(I),A.HEAP16=K=new Int16Array(I),A.HEAP32=L=new Int32Array(I),A.HEAPU8=J=new Uint8Array(I),A.HEAPU16=M=new Uint16Array(I),A.HEAPU32=d=new Uint32Array(I),A.HEAPF32=l=new Float32Array(I),A.HEAPF64=f=new Float64Array(I)}\\\"undefined\\\"!=typeof TextDecoder&&new TextDecoder(\\\"utf-16le\\\");var X=72672,m=A.TOTAL_MEMORY||1073741824;function x(I){for(;I.length>0;){var g=I.shift();if(\\\"function\\\"!=typeof g){var B=g.func;\\\"number\\\"==typeof B?void 0===g.arg?A.dynCall_v(B):A.dynCall_vi(B,g.arg):B(void 0===g.arg?null:g.arg)}else g()}}(R=A.wasmMemory?A.wasmMemory:new WebAssembly.Memory({initial:m/65536}))&&(e=R.buffer),m=e.byteLength,W(e),L[X>>2]=5315712;var V=[],T=[],v=[],j=[];Math.abs;var O=Math.ceil,P=Math.floor,z=(Math.min,0),_=null,$=null;function AA(I){throw A.onAbort&&A.onAbort(I),t(I+=\\\"\\\"),c(I),k=!0,I=\\\"abort(\\\"+I+\\\"). Build with -s ASSERTIONS=1 for more info.\\\",new WebAssembly.RuntimeError(I)}A.preloadedImages={},A.preloadedAudios={};var IA=\\\"data:application/octet-stream;base64,\\\";function gA(A){return String.prototype.startsWith?A.startsWith(IA):0===A.indexOf(IA)}var BA,QA=\\\"data:application/octet-stream;base64,\\\";function CA(){try{if(N)return new Uint8Array(N);var A=KI(QA);if(A)return A;if(G)return G(QA);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(A){AA(A)}}gA(QA)||(BA=QA,QA=A.locateFile?A.locateFile(BA,h):h+BA),T.push({func:function(){lI()}});var EA={},iA=[];function oA(A){if(!A||EA[A])return A;for(var I in EA)for(var g=+I,B=EA[g].adjusted,Q=B.length,C=0;C<Q;C++)if(B[C]===A)return g;return A}var DA=0;function wA(A){try{return fI(A)}catch(A){}}var aA={};function FA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function GA(A){return this.fromWireType(d[A>>2])}var sA={},yA={},hA={},tA=48,cA=57;function NA(A){if(void 0===A)return\\\"_unknown\\\";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return I>=tA&&I<=cA?\\\"_\\\"+A:A}function RA(A,I){return A=NA(A),new Function(\\\"body\\\",\\\"return function \\\"+A+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(I)}function SA(A,I){var g=RA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+\\\"\\\\n\\\"+g.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},g}var UA=void 0;function nA(A){throw new UA(A)}function rA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&nA(\\\"Mismatched type converter count\\\");for(var Q=0;Q<A.length;++Q)KA(A[Q],B[Q])}A.forEach((function(A){hA[A]=I}));var Q=new Array(I.length),C=[],E=0;I.forEach((function(A,I){yA.hasOwnProperty(A)?Q[I]=yA[A]:(C.push(A),sA.hasOwnProperty(A)||(sA[A]=[]),sA[A].push((function(){Q[I]=yA[A],++E===C.length&&B(Q)})))})),0===C.length&&B(Q)}function kA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+A)}}var YA=void 0;function eA(A){for(var I=\\\"\\\",g=A;J[g];)I+=YA[J[g++]];return I}var HA=void 0;function JA(A){throw new HA(A)}function KA(A,I,g){if(g=g||{},!(\\\"argPackAdvance\\\"in I))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var B=I.name;if(A||JA('type \\\"'+B+'\\\" must have a positive integer typeid pointer'),yA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;JA(\\\"Cannot register type '\\\"+B+\\\"' twice\\\")}if(yA[A]=I,delete hA[A],sA.hasOwnProperty(A)){var Q=sA[A];delete sA[A],Q.forEach((function(A){A()}))}}function MA(A){if(!(this instanceof xA))return!1;if(!(A instanceof xA))return!1;for(var I=this.$$.ptrType.registeredClass,g=this.$$.ptr,B=A.$$.ptrType.registeredClass,Q=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)Q=B.upcast(Q),B=B.baseClass;return I===B&&g===Q}function LA(A){JA(A.$$.ptrType.registeredClass.name+\\\" instance already deleted\\\")}var dA=!1;function lA(A){}function fA(A){A.count.value-=1,0===A.count.value&&function(A){A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)}(A)}function qA(A){return\\\"undefined\\\"==typeof FinalizationGroup?(qA=function(A){return A},A):(dA=new FinalizationGroup((function(A){for(var I=A.next();!I.done;I=A.next()){var g=I.value;g.ptr?fA(g):console.warn(\\\"object already deleted: \\\"+g.ptr)}})),qA=function(A){return dA.register(A,A.$$,A.$$),A},lA=function(A){dA.unregister(A.$$)},qA(A))}function bA(){if(this.$$.ptr||LA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=qA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I}function pA(){this.$$.ptr||LA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&JA(\\\"Object already scheduled for deletion\\\"),lA(this),fA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function uA(){return!this.$$.ptr}var ZA=void 0,WA=[];function XA(){for(;WA.length;){var A=WA.pop();A.$$.deleteScheduled=!1,A.delete()}}function mA(){return this.$$.ptr||LA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&JA(\\\"Object already scheduled for deletion\\\"),WA.push(this),1===WA.length&&ZA&&ZA(XA),this.$$.deleteScheduled=!0,this}function xA(){}var VA={};function TA(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||JA(\\\"Function '\\\"+g+\\\"' called with an invalid number of arguments (\\\"+arguments.length+\\\") - expects one of (\\\"+A[I].overloadTable+\\\")!\\\"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function vA(A,I,g,B,Q,C,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=Q,this.getActualType=C,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}function jA(A,I,g){for(;I!==g;)I.upcast||JA(\\\"Expected null or instance of \\\"+g.name+\\\", got an instance of \\\"+I.name),A=I.upcast(A),I=I.baseClass;return A}function OA(A,I){if(null===I)return this.isReference&&JA(\\\"null is not a valid \\\"+this.name),0;I.$$||JA('Cannot pass \\\"'+UI(I)+'\\\" as a '+this.name),I.$$.ptr||JA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return jA(I.$$.ptr,g,this.registeredClass)}function PA(A,I){var g;if(null===I)return this.isReference&&JA(\\\"null is not a valid \\\"+this.name),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I.$$||JA('Cannot pass \\\"'+UI(I)+'\\\" as a '+this.name),I.$$.ptr||JA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),!this.isConst&&I.$$.ptrType.isConst&&JA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);var B=I.$$.ptrType.registeredClass;if(g=jA(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&JA(\\\"Passing raw pointer to smart pointer is illegal\\\"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:JA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var Q=I.clone();g=this.rawShare(g,SI((function(){Q.delete()}))),null!==A&&A.push(this.rawDestructor,g)}break;default:JA(\\\"Unsupporting sharing policy\\\")}return g}function zA(A,I){if(null===I)return this.isReference&&JA(\\\"null is not a valid \\\"+this.name),0;I.$$||JA('Cannot pass \\\"'+UI(I)+'\\\" as a '+this.name),I.$$.ptr||JA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),I.$$.ptrType.isConst&&JA(\\\"Cannot convert argument of type \\\"+I.$$.ptrType.name+\\\" to parameter type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return jA(I.$$.ptr,g,this.registeredClass)}function _A(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A}function $A(A){this.rawDestructor&&this.rawDestructor(A)}function AI(A){null!==A&&A.delete()}function II(A,I,g){if(I===g)return A;if(void 0===g.baseClass)return null;var B=II(A,I,g.baseClass);return null===B?null:g.downcast(B)}function gI(){return Object.keys(CI).length}function BI(){var A=[];for(var I in CI)CI.hasOwnProperty(I)&&A.push(CI[I]);return A}function QI(A){ZA=A,WA.length&&ZA&&ZA(XA)}var CI={};function EI(A,I){return I=function(A,I){for(void 0===I&&JA(\\\"ptr should not be undefined\\\");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I}(A,I),CI[I]}function iI(A,I){return I.ptrType&&I.ptr||nA(\\\"makeClassHandle requires ptr and ptrType\\\"),!!I.smartPtrType!=!!I.smartPtr&&nA(\\\"Both smartPtrType and smartPtr must be specified\\\"),I.count={value:1},qA(Object.create(A,{$$:{value:I}}))}function oI(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=EI(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function Q(){return this.isSmartPointer?iI(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):iI(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var C,E=this.registeredClass.getActualType(I),i=VA[E];if(!i)return Q.call(this);C=this.isConst?i.constPointerType:i.pointerType;var o=II(I,this.registeredClass,C.registeredClass);return null===o?Q.call(this):this.isSmartPointer?iI(C.registeredClass.instancePrototype,{ptrType:C,ptr:o,smartPtrType:this,smartPtr:A}):iI(C.registeredClass.instancePrototype,{ptrType:C,ptr:o})}function DI(A,I,g,B,Q,C,E,i,o,D,w){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=Q,this.pointeeType=C,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=w,Q||void 0!==I.baseClass?this.toWireType=PA:B?(this.toWireType=OA,this.destructorFunction=null):(this.toWireType=zA,this.destructorFunction=null)}function wI(I,g){var B;if(I=eA(I),void 0!==A[\\\"FUNCTION_TABLE_\\\"+I])B=A[\\\"FUNCTION_TABLE_\\\"+I][g];else if(\\\"undefined\\\"!=typeof FUNCTION_TABLE)B=FUNCTION_TABLE[g];else{var Q=A[\\\"dynCall_\\\"+I];void 0===Q&&void 0===(Q=A[\\\"dynCall_\\\"+I.replace(/f/g,\\\"d\\\")])&&JA(\\\"No dynCall invoker for signature: \\\"+I),B=function(A){for(var B=[],Q=1;Q<I.length;++Q)B.push(\\\"a\\\"+Q);var C=\\\"return function dynCall_\\\"+I+\\\"_\\\"+g+\\\"(\\\"+B.join(\\\", \\\")+\\\") {\\\\n\\\";return C+=\\\"    return dynCall(rawFunction\\\"+(B.length?\\\", \\\":\\\"\\\")+B.join(\\\", \\\")+\\\");\\\\n\\\",C+=\\\"};\\\\n\\\",new Function(\\\"dynCall\\\",\\\"rawFunction\\\",C)(A,g)}(Q)}return\\\"function\\\"!=typeof B&&JA(\\\"unknown function pointer with signature \\\"+I+\\\": \\\"+g),B}var aI=void 0;function FI(A){var I=WI(A),g=eA(I);return fI(I),g}function GI(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||yA[I]||(hA[I]?hA[I].forEach(A):(g.push(I),B[I]=!0))})),new aI(A+\\\": \\\"+g.map(FI).join([\\\", \\\"]))}function sI(A,I){for(var g=[],B=0;B<A;B++)g.push(L[(I>>2)+B]);return g}function yI(A,I,g,B,Q){var C=I.length;C<2&&JA(\\\"argTypes array size mismatch! Must at least get return value and 'this' types!\\\");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var D=\\\"void\\\"!==I[0].name,w=\\\"\\\",a=\\\"\\\";for(o=0;o<C-2;++o)w+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o,a+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o+\\\"Wired\\\";var F=\\\"return function \\\"+NA(A)+\\\"(\\\"+w+\\\") {\\\\nif (arguments.length !== \\\"+(C-2)+\\\") {\\\\nthrowBindingError('function \\\"+A+\\\" called with ' + arguments.length + ' arguments, expected \\\"+(C-2)+\\\" args!');\\\\n}\\\\n\\\";i&&(F+=\\\"var destructors = [];\\\\n\\\");var G=i?\\\"destructors\\\":\\\"null\\\",s=[\\\"throwBindingError\\\",\\\"invoker\\\",\\\"fn\\\",\\\"runDestructors\\\",\\\"retType\\\",\\\"classParam\\\"],y=[JA,B,Q,FA,I[0],I[1]];for(E&&(F+=\\\"var thisWired = classParam.toWireType(\\\"+G+\\\", this);\\\\n\\\"),o=0;o<C-2;++o)F+=\\\"var arg\\\"+o+\\\"Wired = argType\\\"+o+\\\".toWireType(\\\"+G+\\\", arg\\\"+o+\\\"); // \\\"+I[o+2].name+\\\"\\\\n\\\",s.push(\\\"argType\\\"+o),y.push(I[o+2]);if(E&&(a=\\\"thisWired\\\"+(a.length>0?\\\", \\\":\\\"\\\")+a),F+=(D?\\\"var rv = \\\":\\\"\\\")+\\\"invoker(fn\\\"+(a.length>0?\\\", \\\":\\\"\\\")+a+\\\");\\\\n\\\",i)F+=\\\"runDestructors(destructors);\\\\n\\\";else for(o=E?1:2;o<I.length;++o){var h=1===o?\\\"thisWired\\\":\\\"arg\\\"+(o-2)+\\\"Wired\\\";null!==I[o].destructorFunction&&(F+=h+\\\"_dtor(\\\"+h+\\\"); // \\\"+I[o].name+\\\"\\\\n\\\",s.push(h+\\\"_dtor\\\"),y.push(I[o].destructorFunction))}return D&&(F+=\\\"var ret = retType.fromWireType(rv);\\\\nreturn ret;\\\\n\\\"),F+=\\\"}\\\\n\\\",s.push(F),function(A,I){if(!(A instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof A+\\\" which is not a function\\\");var g=RA(A.name||\\\"unknownFunctionName\\\",(function(){}));g.prototype=A.prototype;var B=new g,Q=A.apply(B,I);return Q instanceof Object?Q:B}(Function,s).apply(null,y)}var hI=[],tI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function cI(A){A>4&&0==--tI[A].refcount&&(tI[A]=void 0,hI.push(A))}function NI(){for(var A=0,I=5;I<tI.length;++I)void 0!==tI[I]&&++A;return A}function RI(){for(var A=5;A<tI.length;++A)if(void 0!==tI[A])return tI[A];return null}function SI(A){switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=hI.length?hI.pop():tI.length;return tI[I]={refcount:1,value:A},I}}function UI(A){if(null===A)return\\\"null\\\";var I=typeof A;return\\\"object\\\"===I||\\\"array\\\"===I||\\\"function\\\"===I?A.toString():\\\"\\\"+A}function nI(A,I){switch(I){case 2:return function(A){return this.fromWireType(l[A>>2])};case 3:return function(A){return this.fromWireType(f[A>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+A)}}function rI(A,I,g){switch(I){case 0:return g?function(A){return H[A]}:function(A){return J[A]};case 1:return g?function(A){return K[A>>1]}:function(A){return M[A>>1]};case 2:return g?function(A){return L[A>>2]}:function(A){return d[A>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+A)}}function kI(){return H.length}var YI={buffers:[null,[],[]],printChar:function(A,I){var g=YI.buffers[A];0===I||10===I?((1===A?t:c)(b(g,0)),g.length=0):g.push(I)},varargs:0,get:function(A){return YI.varargs+=4,L[YI.varargs-4>>2]},getStr:function(){return p(YI.get())},get64:function(){var A=YI.get();return YI.get(),A},getZero:function(){YI.get()}};UA=A.InternalError=SA(Error,\\\"InternalError\\\"),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);YA=A}(),HA=A.BindingError=SA(Error,\\\"BindingError\\\"),xA.prototype.isAliasOf=MA,xA.prototype.clone=bA,xA.prototype.delete=pA,xA.prototype.isDeleted=uA,xA.prototype.deleteLater=mA,DI.prototype.getPointee=_A,DI.prototype.destructor=$A,DI.prototype.argPackAdvance=8,DI.prototype.readValueFromPointer=GA,DI.prototype.deleteObject=AI,DI.prototype.fromWireType=oI,A.getInheritedInstanceCount=gI,A.getLiveInheritedInstances=BI,A.flushPendingDeletes=XA,A.setDelayFunction=QI,aI=A.UnboundTypeError=SA(Error,\\\"UnboundTypeError\\\"),A.count_emval_handles=NI,A.get_first_emval=RI;var eI=!1;function HI(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(eI&&Y(!1,\\\"Character code \\\"+B+\\\" (\\\"+String.fromCharCode(B)+\\\")  at offset \\\"+g+\\\" not in 0x00-0xFF.\\\"),B&=255),I.push(String.fromCharCode(B))}return I.join(\\\"\\\")}var JI=\\\"function\\\"==typeof atob?atob:function(A){var I,g,B,Q,C,E,i=\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\\",o=\\\"\\\",D=0;A=A.replace(/[^A-Za-z0-9\\\\+\\\\/\\\\=]/g,\\\"\\\");do{I=i.indexOf(A.charAt(D++))<<2|(Q=i.indexOf(A.charAt(D++)))>>4,g=(15&Q)<<4|(C=i.indexOf(A.charAt(D++)))>>2,B=(3&C)<<6|(E=i.indexOf(A.charAt(D++))),o+=String.fromCharCode(I),64!==C&&(o+=String.fromCharCode(g)),64!==E&&(o+=String.fromCharCode(B))}while(D<A.length);return o};function KI(A){if(gA(A))return function(A){if(\\\"boolean\\\"==typeof a&&a){var I;try{I=Buffer.from(A,\\\"base64\\\")}catch(g){I=new Buffer(A,\\\"base64\\\")}return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=JI(A),B=new Uint8Array(g.length),Q=0;Q<g.length;++Q)B[Q]=g.charCodeAt(Q);return B}catch(A){throw new Error(\\\"Converting base64 string to bytes failed.\\\")}}(A.slice(IA.length))}var MI={__cxa_allocate_exception:function(A){return qI(A)},__cxa_begin_catch:function(A){var I=EA[A];return I&&!I.caught&&(I.caught=!0,pI.uncaught_exceptions--),I&&(I.rethrown=!1),iA.push(A),function(A){A&&EA[A].refcount++}(oA(A)),A},__cxa_end_catch:function(){bI(0);var I=iA.pop();I&&(function(I){if(I){var g=EA[I];g.refcount--,0!==g.refcount||g.rethrown||(g.destructor&&A.dynCall_ii(g.destructor,I),delete EA[I],wA(I))}}(oA(I)),DA=0)},__cxa_find_matching_catch_2:function(){var A=DA;if(!A)return 0|(U(0),0);var I=EA[A],g=I.type;if(!g)return 0|(U(0),A);var B=Array.prototype.slice.call(arguments);ZI(g),L[0]=A,A=0;for(var Q=0;Q<B.length;Q++)if(B[Q]&&uI(B[Q],g,A))return A=L[A>>2],I.adjusted.push(A),0|(U(B[Q]),A);return A=L[A>>2],0|(U(g),A)},__cxa_find_matching_catch_3:function(){var A=DA;if(!A)return 0|(U(0),0);var I=EA[A],g=I.type;if(!g)return 0|(U(0),A);var B=Array.prototype.slice.call(arguments);ZI(g),L[0]=A,A=0;for(var Q=0;Q<B.length;Q++)if(B[Q]&&uI(B[Q],g,A))return A=L[A>>2],I.adjusted.push(A),0|(U(B[Q]),A);return A=L[A>>2],0|(U(g),A)},__cxa_free_exception:wA,__cxa_throw:function(A,I,g){throw EA[A]={ptr:A,adjusted:[A],type:I,destructor:g,refcount:0,caught:!1,rethrown:!1},DA=A,\\\"uncaught_exception\\\"in pI?pI.uncaught_exceptions++:pI.uncaught_exceptions=1,A},__resumeException:function(A){throw DA||(DA=A),A},_embind_finalize_value_object:function(A){var I=aA[A];delete aA[A];var g=I.rawConstructor,B=I.rawDestructor,Q=I.fields;rA([A],Q.map((function(A){return A.getterReturnType})).concat(Q.map((function(A){return A.setterArgumentType}))),(function(A){var C={};return Q.forEach((function(I,g){var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+Q.length],w=I.setter,a=I.setterContext;C[B]={read:function(A){return E.fromWireType(i(o,A))},write:function(A,I){var g=[];w(a,A,D.toWireType(g,I)),FA(g)}}})),[{name:I.name,fromWireType:function(A){var I={};for(var g in C)I[g]=C[g].read(A);return B(A),I},toWireType:function(A,I){for(var Q in C)if(!(Q in I))throw new TypeError(\\\"Missing field\\\");var E=g();for(Q in C)C[Q].write(E,I[Q]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:GA,destructorFunction:B}]}))},_embind_register_bool:function(A,I,g,B,Q){var C=kA(g);KA(A,{name:I=eA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:Q},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=H;else if(2===g)B=K;else{if(4!==g)throw new TypeError(\\\"Unknown boolean type size: \\\"+I);B=L}return this.fromWireType(B[A>>C])},destructorFunction:null})},_embind_register_class:function(I,g,B,Q,C,E,i,o,D,w,a,F,G){a=eA(a),E=wI(C,E),o&&(o=wI(i,o)),w&&(w=wI(D,w)),G=wI(F,G);var s=NA(a);!function(I,g,B){A.hasOwnProperty(I)?((void 0===B||void 0!==A[I].overloadTable&&void 0!==A[I].overloadTable[B])&&JA(\\\"Cannot register public name '\\\"+I+\\\"' twice\\\"),TA(A,I,I),A.hasOwnProperty(B)&&JA(\\\"Cannot register multiple overloads of a function with the same number of arguments (\\\"+B+\\\")!\\\"),A[I].overloadTable[B]=g):(A[I]=g,void 0!==B&&(A[I].numArguments=B))}(s,(function(){GI(\\\"Cannot construct \\\"+a+\\\" due to unbound types\\\",[Q])})),rA([I,g,B],Q?[Q]:[],(function(g){var B,C;g=g[0],C=Q?(B=g.registeredClass).instancePrototype:xA.prototype;var i=RA(s,(function(){if(Object.getPrototypeOf(this)!==D)throw new HA(\\\"Use 'new' to construct \\\"+a);if(void 0===F.constructor_body)throw new HA(a+\\\" has no accessible constructor\\\");var A=F.constructor_body[arguments.length];if(void 0===A)throw new HA(\\\"Tried to invoke ctor of \\\"+a+\\\" with invalid number of parameters (\\\"+arguments.length+\\\") - expected (\\\"+Object.keys(F.constructor_body).toString()+\\\") parameters instead!\\\");return A.apply(this,arguments)})),D=Object.create(C,{constructor:{value:i}});i.prototype=D;var F=new vA(a,i,D,G,B,E,o,w),y=new DI(a,F,!0,!1,!1),h=new DI(a+\\\"*\\\",F,!1,!1,!1),t=new DI(a+\\\" const*\\\",F,!1,!0,!1);return VA[I]={pointerType:h,constPointerType:t},function(I,g,B){A.hasOwnProperty(I)||nA(\\\"Replacing nonexistant public symbol\\\"),void 0!==A[I].overloadTable&&void 0!==B?A[I].overloadTable[B]=g:(A[I]=g,A[I].argCount=B)}(s,i),[y,h,t]}))},_embind_register_class_constructor:function(A,I,g,B,Q,C){Y(I>0);var E=sI(I,g);Q=wI(B,Q);var i=[C],o=[];rA([],[A],(function(A){var g=\\\"constructor \\\"+(A=A[0]).name;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new HA(\\\"Cannot register multiple constructors with identical number of parameters (\\\"+(I-1)+\\\") for class '\\\"+A.name+\\\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\\\");return A.registeredClass.constructor_body[I-1]=function(){GI(\\\"Cannot construct \\\"+A.name+\\\" due to unbound types\\\",E)},rA([],E,(function(B){return A.registeredClass.constructor_body[I-1]=function(){arguments.length!==I-1&&JA(g+\\\" called with \\\"+arguments.length+\\\" arguments, expected \\\"+(I-1)),o.length=0,i.length=I;for(var A=1;A<I;++A)i[A]=B[A].toWireType(o,arguments[A-1]);var C=Q.apply(null,i);return FA(o),B[0].fromWireType(C)},[]})),[]}))},_embind_register_class_function:function(A,I,g,B,Q,C,E,i){var o=sI(g,B);I=eA(I),C=wI(Q,C),rA([],[A],(function(A){var B=(A=A[0]).name+\\\".\\\"+I;function Q(){GI(\\\"Cannot call \\\"+B+\\\" due to unbound types\\\",o)}i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,w=D[I];return void 0===w||void 0===w.overloadTable&&w.className!==A.name&&w.argCount===g-2?(Q.argCount=g-2,Q.className=A.name,D[I]=Q):(TA(D,I,B),D[I].overloadTable[g-2]=Q),rA([],o,(function(Q){var i=yI(B,Q,A,C,E);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},_embind_register_emval:function(A,I){KA(A,{name:I=eA(I),fromWireType:function(A){var I=tI[A].value;return cI(A),I},toWireType:function(A,I){return SI(I)},argPackAdvance:8,readValueFromPointer:GA,destructorFunction:null})},_embind_register_float:function(A,I,g){var B=kA(g);KA(A,{name:I=eA(I),fromWireType:function(A){return A},toWireType:function(A,I){if(\\\"number\\\"!=typeof I&&\\\"boolean\\\"!=typeof I)throw new TypeError('Cannot convert \\\"'+UI(I)+'\\\" to '+this.name);return I},argPackAdvance:8,readValueFromPointer:nI(I,B),destructorFunction:null})},_embind_register_integer:function(A,I,g,B,Q){I=eA(I),-1===Q&&(Q=4294967295);var C=kA(g),E=function(A){return A};if(0===B){var i=32-8*g;E=function(A){return A<<i>>>i}}var o=-1!=I.indexOf(\\\"unsigned\\\");KA(A,{name:I,fromWireType:E,toWireType:function(A,g){if(\\\"number\\\"!=typeof g&&\\\"boolean\\\"!=typeof g)throw new TypeError('Cannot convert \\\"'+UI(g)+'\\\" to '+this.name);if(g<B||g>Q)throw new TypeError('Passing a number \\\"'+UI(g)+'\\\" from JS side to C/C++ side to an argument of type \\\"'+I+'\\\", which is outside the valid range ['+B+\\\", \\\"+Q+\\\"]!\\\");return o?g>>>0:0|g},argPackAdvance:8,readValueFromPointer:rI(I,C,0!==B),destructorFunction:null})},_embind_register_memory_view:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function Q(A){var I=d,g=I[A>>=2],Q=I[A+1];return new B(I.buffer,Q,g)}KA(A,{name:g=eA(g),fromWireType:Q,argPackAdvance:8,readValueFromPointer:Q},{ignoreDuplicateRegistrations:!0})},_embind_register_std_string:function(A,I){var g=\\\"std::string\\\"===(I=eA(I));KA(A,{name:I,fromWireType:function(A){var I,B=d[A>>2];if(g){var Q=J[A+4+B],C=0;0!=Q&&(C=Q,J[A+4+B]=0);for(var E=A+4,i=0;i<=B;++i){var o=A+4+i;if(0==J[o]){var D=p(E);void 0===I?I=D:(I+=String.fromCharCode(0),I+=D),E=o+1}}0!=C&&(J[A+4+B]=C)}else{var w=new Array(B);for(i=0;i<B;++i)w[i]=String.fromCharCode(J[A+4+i]);I=w.join(\\\"\\\")}return fI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var Q=\\\"string\\\"==typeof I;Q||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||JA(\\\"Cannot pass non-string to std::string\\\"),B=g&&Q?function(){return function(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&(B=65536+((1023&B)<<10)|1023&A.charCodeAt(++g)),B<=127?++I:I+=B<=2047?2:B<=65535?3:4}return I}(I)}:function(){return I.length};var C=B(),E=qI(4+C+1);if(d[E>>2]=C,g&&Q)u(I,E+4,C+1);else if(Q)for(var i=0;i<C;++i){var o=I.charCodeAt(i);o>255&&(fI(E),JA(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),J[E+4+i]=o}else for(i=0;i<C;++i)J[E+4+i]=I[i];return null!==A&&A.push(fI,E),E},argPackAdvance:8,readValueFromPointer:GA,destructorFunction:function(A){fI(A)}})},_embind_register_std_wstring:function(A,I,g){var B,Q;g=eA(g),2===I?(B=function(){return M},Q=1):4===I&&(B=function(){return d},Q=2),KA(A,{name:g,fromWireType:function(A){for(var I=B(),g=d[A>>2],C=new Array(g),E=A+4>>Q,i=0;i<g;++i)C[i]=String.fromCharCode(I[E+i]);return fI(A),C.join(\\\"\\\")},toWireType:function(A,g){var C=g.length,E=qI(4+C*I),i=B();d[E>>2]=C;for(var o=E+4>>Q,D=0;D<C;++D)i[o+D]=g.charCodeAt(D);return null!==A&&A.push(fI,E),E},argPackAdvance:8,readValueFromPointer:GA,destructorFunction:function(A){fI(A)}})},_embind_register_value_object:function(A,I,g,B,Q,C){aA[A]={name:eA(I),rawConstructor:wI(g,B),rawDestructor:wI(Q,C),fields:[]}},_embind_register_value_object_field:function(A,I,g,B,Q,C,E,i,o,D){aA[A].fields.push({fieldName:eA(I),getterReturnType:g,getter:wI(B,Q),getterContext:C,setterArgumentType:E,setter:wI(i,o),setterContext:D})},_embind_register_void:function(A,I){KA(A,{isVoid:!0,name:I=eA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},_emval_decref:cI,_emval_incref:function(A){A>4&&(tI[A].refcount+=1)},_emval_take_value:function(A,I){var g,B,Q;return B=\\\"_emval_take_value\\\",void 0===(Q=yA[g=A])&&JA(B+\\\" has unknown type \\\"+FI(g)),SI((A=Q).readValueFromPointer(I))},abort:function(){AA()},emscripten_get_sbrk_ptr:function(){return 72672},emscripten_memcpy_big:function(A,I,g){J.set(J.subarray(I,I+g),A)},emscripten_resize_heap:function(A){var I=kI(),g=65536,B=2147418112;if(A>B)return!1;for(var Q=Math.max(I,16777216);Q<A;)Q=Q<=536870912?Z(2*Q,g):Math.min(Z((3*Q+2147483648)/4,g),B);return!!function(A){try{return R.grow(A-e.byteLength+65535>>16),W(R.buffer),1}catch(A){}}(Q)},fd_close:function(A){try{return 0}catch(A){return\\\"undefined\\\"!=typeof FS&&A instanceof FS.ErrnoError||AA(A),A.errno}},fd_seek:function(A,I,g,B,Q){try{return 0}catch(A){return\\\"undefined\\\"!=typeof FS&&A instanceof FS.ErrnoError||AA(A),A.errno}},fd_write:function(A,I,g,B){try{for(var Q=0,C=0;C<g;C++){for(var E=L[I+8*C>>2],i=L[I+(8*C+4)>>2],o=0;o<i;o++)YI.printChar(A,J[E+o]);Q+=i}return L[B>>2]=Q,0}catch(A){return\\\"undefined\\\"!=typeof FS&&A instanceof FS.ErrnoError||AA(A),A.errno}},getTempRet0:function(){return 0|n()},invoke_i:function(A){var I=gg();try{return _I(A)}catch(A){if(Qg(I),A!==A+0&&\\\"longjmp\\\"!==A)throw A;bI(1,0)}},invoke_ii:function(A,I){var g=gg();try{return $I(A,I)}catch(A){if(Qg(g),A!==A+0&&\\\"longjmp\\\"!==A)throw A;bI(1,0)}},invoke_iii:function(A,I,g){var B=gg();try{return Ag(A,I,g)}catch(A){if(Qg(B),A!==A+0&&\\\"longjmp\\\"!==A)throw A;bI(1,0)}},invoke_iiii:function(A,I,g,B){var Q=gg();try{return Ig(A,I,g,B)}catch(A){if(Qg(Q),A!==A+0&&\\\"longjmp\\\"!==A)throw A;bI(1,0)}},invoke_v:function(A){var I=gg();try{XI(A)}catch(A){if(Qg(I),A!==A+0&&\\\"longjmp\\\"!==A)throw A;bI(1,0)}},invoke_vi:function(A,I){var g=gg();try{mI(A,I)}catch(A){if(Qg(g),A!==A+0&&\\\"longjmp\\\"!==A)throw A;bI(1,0)}},invoke_vif:function(A,I,g){var B=gg();try{zI(A,I,g)}catch(A){if(Qg(B),A!==A+0&&\\\"longjmp\\\"!==A)throw A;bI(1,0)}},invoke_vii:function(A,I,g){var B=gg();try{xI(A,I,g)}catch(A){if(Qg(B),A!==A+0&&\\\"longjmp\\\"!==A)throw A;bI(1,0)}},invoke_viii:function(A,I,g,B){var Q=gg();try{VI(A,I,g,B)}catch(A){if(Qg(Q),A!==A+0&&\\\"longjmp\\\"!==A)throw A;bI(1,0)}},invoke_viiii:function(A,I,g,B,Q){var C=gg();try{TI(A,I,g,B,Q)}catch(A){if(Qg(C),A!==A+0&&\\\"longjmp\\\"!==A)throw A;bI(1,0)}},invoke_viiiii:function(A,I,g,B,Q,C){var E=gg();try{vI(A,I,g,B,Q,C)}catch(A){if(Qg(E),A!==A+0&&\\\"longjmp\\\"!==A)throw A;bI(1,0)}},invoke_viiiiii:function(A,I,g,B,Q,C,E){var i=gg();try{jI(A,I,g,B,Q,C,E)}catch(A){if(Qg(i),A!==A+0&&\\\"longjmp\\\"!==A)throw A;bI(1,0)}},invoke_viiiiiii:function(A,I,g,B,Q,C,E,i){var o=gg();try{OI(A,I,g,B,Q,C,E,i)}catch(A){if(Qg(o),A!==A+0&&\\\"longjmp\\\"!==A)throw A;bI(1,0)}},invoke_viiiiiiiiii:function(A,I,g,B,Q,C,E,i,o,D,w){var a=gg();try{PI(A,I,g,B,Q,C,E,i,o,D,w)}catch(A){if(Qg(a),A!==A+0&&\\\"longjmp\\\"!==A)throw A;bI(1,0)}},llvm_eh_typeid_for:function(A){return A},memory:R,roundf:function(A){return(A=+A)>=0?+P(A+.5):+O(A-.5)},setTempRet0:function(A){U(0|A)},table:r},LI=function(){var I={env:MI,wasi_snapshot_preview1:MI};function g(I,g){var B=I.exports;A.asm=B,function(I){if(z--,A.monitorRunDependencies&&A.monitorRunDependencies(z),0==z&&(null!==_&&(clearInterval(_),_=null),$)){var g=$;$=null,g()}}()}function B(A){g(A.instance)}function Q(A){return(N||!D&&!w||\\\"function\\\"!=typeof fetch?new Promise((function(A,I){A(CA())})):fetch(QA,{credentials:\\\"same-origin\\\"}).then((function(A){if(!A.ok)throw\\\"failed to load wasm binary file at '\\\"+QA+\\\"'\\\";return A.arrayBuffer()})).catch((function(){return CA()}))).then((function(A){return WebAssembly.instantiate(A,I)})).then(A,(function(A){c(\\\"failed to asynchronously prepare wasm: \\\"+A),AA(A)}))}if(z++,A.monitorRunDependencies&&A.monitorRunDependencies(z),A.instantiateWasm)try{return A.instantiateWasm(I,g)}catch(A){return c(\\\"Module.instantiateWasm callback failed with error: \\\"+A),!1}return function(){if(N||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||gA(QA)||\\\"function\\\"!=typeof fetch)return Q(B);fetch(QA,{credentials:\\\"same-origin\\\"}).then((function(A){return WebAssembly.instantiateStreaming(A,I).then(B,(function(A){c(\\\"wasm streaming compile failed: \\\"+A),c(\\\"falling back to ArrayBuffer instantiation\\\"),Q(B)}))}))}(),{}}();A.asm=LI;var dI,lI=A.___wasm_call_ctors=function(){return A.asm.__wasm_call_ctors.apply(null,arguments)},fI=A._free=function(){return A.asm.free.apply(null,arguments)},qI=A._malloc=function(){return A.asm.malloc.apply(null,arguments)},bI=A._setThrew=function(){return A.asm.setThrew.apply(null,arguments)},pI=A.__ZSt18uncaught_exceptionv=function(){return A.asm._ZSt18uncaught_exceptionv.apply(null,arguments)},uI=A.___cxa_can_catch=function(){return A.asm.__cxa_can_catch.apply(null,arguments)},ZI=A.___cxa_is_pointer_type=function(){return A.asm.__cxa_is_pointer_type.apply(null,arguments)},WI=A.___getTypeName=function(){return A.asm.__getTypeName.apply(null,arguments)},XI=(A.___embind_register_native_and_builtin_types=function(){return A.asm.__embind_register_native_and_builtin_types.apply(null,arguments)},A.dynCall_v=function(){return A.asm.dynCall_v.apply(null,arguments)}),mI=A.dynCall_vi=function(){return A.asm.dynCall_vi.apply(null,arguments)},xI=A.dynCall_vii=function(){return A.asm.dynCall_vii.apply(null,arguments)},VI=A.dynCall_viii=function(){return A.asm.dynCall_viii.apply(null,arguments)},TI=A.dynCall_viiii=function(){return A.asm.dynCall_viiii.apply(null,arguments)},vI=A.dynCall_viiiii=function(){return A.asm.dynCall_viiiii.apply(null,arguments)},jI=A.dynCall_viiiiii=function(){return A.asm.dynCall_viiiiii.apply(null,arguments)},OI=A.dynCall_viiiiiii=function(){return A.asm.dynCall_viiiiiii.apply(null,arguments)},PI=A.dynCall_viiiiiiiiii=function(){return A.asm.dynCall_viiiiiiiiii.apply(null,arguments)},zI=A.dynCall_vif=function(){return A.asm.dynCall_vif.apply(null,arguments)},_I=A.dynCall_i=function(){return A.asm.dynCall_i.apply(null,arguments)},$I=A.dynCall_ii=function(){return A.asm.dynCall_ii.apply(null,arguments)},Ag=A.dynCall_iii=function(){return A.asm.dynCall_iii.apply(null,arguments)},Ig=A.dynCall_iiii=function(){return A.asm.dynCall_iiii.apply(null,arguments)},gg=A.stackSave=function(){return A.asm.stackSave.apply(null,arguments)},Bg=A.stackAlloc=function(){return A.asm.stackAlloc.apply(null,arguments)},Qg=A.stackRestore=function(){return A.asm.stackRestore.apply(null,arguments)};function Cg(A){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+A+\\\")\\\",this.status=A}function Eg(I){function g(){dI||(dI=!0,k||(x(T),x(v),A.onRuntimeInitialized&&A.onRuntimeInitialized(),function(){if(A.postRun)for(\\\"function\\\"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)I=A.postRun.shift(),j.unshift(I);var I;x(j)}()))}I=I||o,z>0||(function(){if(A.preRun)for(\\\"function\\\"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)I=A.preRun.shift(),V.unshift(I);var I;x(V)}(),z>0||(A.setStatus?(A.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){A.setStatus(\\\"\\\")}),1),g()}),1)):g()))}if(A.__growWasmMemory=function(){return A.asm.__growWasmMemory.apply(null,arguments)},A.dynCall_viif=function(){return A.asm.dynCall_viif.apply(null,arguments)},A.dynCall_viiif=function(){return A.asm.dynCall_viiif.apply(null,arguments)},A.dynCall_ji=function(){return A.asm.dynCall_ji.apply(null,arguments)},A.dynCall_iiji=function(){return A.asm.dynCall_iiji.apply(null,arguments)},A.dynCall_viifi=function(){return A.asm.dynCall_viifi.apply(null,arguments)},A.dynCall_iidiiii=function(){return A.asm.dynCall_iidiiii.apply(null,arguments)},A.dynCall_jiji=function(){return A.asm.dynCall_jiji.apply(null,arguments)},A.asm=LI,A.ccall=function(I,g,B,Q,C){var E={string:function(A){var I=0;if(null!=A&&0!==A){var g=1+(A.length<<2);u(A,I=Bg(g),g)}return I},array:function(A){var I=Bg(A.length);return function(A,I){H.set(A,I)}(A,I),I}},i=function(I){var g=A[\\\"_\\\"+I];return Y(g,\\\"Cannot call unknown function \\\"+I+\\\", make sure it is exported\\\"),g}(I),o=[],D=0;if(Q)for(var w=0;w<Q.length;w++){var a=E[B[w]];a?(0===D&&(D=gg()),o[w]=a(Q[w])):o[w]=Q[w]}var F=i.apply(null,o);return F=function(A){return\\\"string\\\"===g?p(A):\\\"boolean\\\"===g?Boolean(A):A}(F),0!==D&&Qg(D),F},A.then=function(I){if(dI)I(A);else{var g=A.onRuntimeInitialized;A.onRuntimeInitialized=function(){g&&g(),I(A)}}return A},$=function A(){dI||Eg(),dI||($=A)},A.run=Eg,A.preInit)for(\\\"function\\\"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return Eg(),A});A.exports=C},6453:(A,I,g)=>{var B=g(8531);A.exports=B},3817:(A,I,g)=>{var B=g(3355);g(9085),A.exports=B},2396:(A,I,g)=>{var B=g(6888);A.exports=B},1745:(A,I,g)=>{var B=g(5013);A.exports=B},6854:(A,I,g)=>{g(6764);var B=g(9081).Object,Q=A.exports=function(A,I,g){return B.defineProperty(A,I,g)};B.defineProperty.sham&&(Q.sham=!0)},1442:(A,I,g)=>{g(3075),g(2575),g(8318),g(5762),g(2181),g(8848),g(3719),g(2362),g(346),g(888),g(909),g(1992),g(8512),g(6165),g(6044),g(4676),g(263),g(3596),g(1227),g(6268);var B=g(9081);A.exports=B.Symbol},1190:(A,I,g)=>{g(2228),g(2575),g(8109),g(2362);var B=g(3379);A.exports=B.f(\\\"iterator\\\")},5261:(A,I,g)=>{g(2041),g(6044);var B=g(3379);A.exports=B.f(\\\"toPrimitive\\\")},5723:(A,I,g)=>{A.exports=g(747)},156:(A,I,g)=>{A.exports=g(4632)},7754:(A,I,g)=>{A.exports=g(4339)},4133:(A,I,g)=>{A.exports=g(6252)},747:(A,I,g)=>{var B=g(6453);A.exports=B},4632:(A,I,g)=>{var B=g(3817);g(8812),g(7384),g(9928),g(2994),g(4719),g(9431),g(4803),A.exports=B},4339:(A,I,g)=>{var B=g(2396);A.exports=B},6252:(A,I,g)=>{var B=g(1745);A.exports=B},5222:(A,I,g)=>{var B=g(8307),Q=g(7265),C=TypeError;A.exports=function(A){if(B(A))return A;throw C(Q(A)+\\\" is not a function\\\")}},9154:(A,I,g)=>{var B=g(8307),Q=String,C=TypeError;A.exports=function(A){if(\\\"object\\\"==typeof A||B(A))return A;throw C(\\\"Can't set \\\"+Q(A)+\\\" as a prototype\\\")}},7710:A=>{A.exports=function(){}},1912:(A,I,g)=>{var B=g(3359),Q=String,C=TypeError;A.exports=function(A){if(B(A))return A;throw C(Q(A)+\\\" is not an object\\\")}},7075:(A,I,g)=>{var B=g(3861),Q=g(3055),C=g(9876),E=function(A){return function(I,g,E){var i,o=B(I),D=C(o),w=Q(E,D);if(A&&g!=g){for(;D>w;)if((i=o[w++])!=i)return!0}else for(;D>w;w++)if((A||w in o)&&o[w]===g)return A||w||0;return!A&&-1}};A.exports={includes:E(!0),indexOf:E(!1)}},4206:(A,I,g)=>{var B=g(7673),Q=g(3880),C=g(1251),E=g(2058),i=g(9876),o=g(8136),D=Q([].push),w=function(A){var I=1==A,g=2==A,Q=3==A,w=4==A,a=6==A,F=7==A,G=5==A||a;return function(s,y,h,t){for(var c,N,R=E(s),S=C(R),U=B(y,h),n=i(S),r=0,k=t||o,Y=I?k(s,n):g||F?k(s,0):void 0;n>r;r++)if((G||r in S)&&(N=U(c=S[r],r,R),A))if(I)Y[r]=N;else if(N)switch(A){case 3:return!0;case 5:return c;case 6:return r;case 2:D(Y,c)}else switch(A){case 4:return!1;case 7:D(Y,c)}return a?-1:Q||w?w:Y}};A.exports={forEach:w(0),map:w(1),filter:w(2),some:w(3),every:w(4),find:w(5),findIndex:w(6),filterReject:w(7)}},2143:(A,I,g)=>{var B=g(6530),Q=g(5712),C=g(8233),E=Q(\\\"species\\\");A.exports=function(A){return C>=51||!B((function(){var I=[];return(I.constructor={})[E]=function(){return{foo:1}},1!==I[A](Boolean).foo}))}},6901:(A,I,g)=>{var B=g(3055),Q=g(9876),C=g(409),E=Array,i=Math.max;A.exports=function(A,I,g){for(var o=Q(A),D=B(I,o),w=B(void 0===g?o:g,o),a=E(i(w-D,0)),F=0;D<w;D++,F++)C(a,F,A[D]);return a.length=F,a}},4735:(A,I,g)=>{var B=g(3880);A.exports=B([].slice)},3400:(A,I,g)=>{var B=g(1054),Q=g(1775),C=g(3359),E=g(5712)(\\\"species\\\"),i=Array;A.exports=function(A){var I;return B(A)&&(I=A.constructor,(Q(I)&&(I===i||B(I.prototype))||C(I)&&null===(I=I[E]))&&(I=void 0)),void 0===I?i:I}},8136:(A,I,g)=>{var B=g(3400);A.exports=function(A,I){return new(B(A))(0===I?0:I)}},1570:(A,I,g)=>{var B=g(3880),Q=B({}.toString),C=B(\\\"\\\".slice);A.exports=function(A){return C(Q(A),8,-1)}},7499:(A,I,g)=>{var B=g(8889),Q=g(8307),C=g(1570),E=g(5712)(\\\"toStringTag\\\"),i=Object,o=\\\"Arguments\\\"==C(function(){return arguments}());A.exports=B?C:function(A){var I,g,B;return void 0===A?\\\"Undefined\\\":null===A?\\\"Null\\\":\\\"string\\\"==typeof(g=function(A,I){try{return A[I]}catch(A){}}(I=i(A),E))?g:o?C(I):\\\"Object\\\"==(B=C(I))&&Q(I.callee)?\\\"Arguments\\\":B}},872:(A,I,g)=>{var B=g(6530);A.exports=!B((function(){function A(){}return A.prototype.constructor=null,Object.getPrototypeOf(new A)!==A.prototype}))},5334:A=>{A.exports=function(A,I){return{value:A,done:I}}},8518:(A,I,g)=>{var B=g(7001),Q=g(7550),C=g(5595);A.exports=B?function(A,I,g){return Q.f(A,I,C(1,g))}:function(A,I,g){return A[I]=g,A}},5595:A=>{A.exports=function(A,I){return{enumerable:!(1&A),configurable:!(2&A),writable:!(4&A),value:I}}},409:(A,I,g)=>{\\\"use strict\\\";var B=g(5623),Q=g(7550),C=g(5595);A.exports=function(A,I,g){var E=B(I);E in A?Q.f(A,E,C(0,g)):A[E]=g}},491:(A,I,g)=>{var B=g(8518);A.exports=function(A,I,g,Q){return Q&&Q.enumerable?A[I]=g:B(A,I,g),A}},6868:(A,I,g)=>{var B=g(2868),Q=Object.defineProperty;A.exports=function(A,I){try{Q(B,A,{value:I,configurable:!0,writable:!0})}catch(g){B[A]=I}return I}},7001:(A,I,g)=>{var B=g(6530);A.exports=!B((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},2:A=>{var I=\\\"object\\\"==typeof document&&document.all,g=void 0===I&&void 0!==I;A.exports={all:I,IS_HTMLDDA:g}},231:(A,I,g)=>{var B=g(2868),Q=g(3359),C=B.document,E=Q(C)&&Q(C.createElement);A.exports=function(A){return E?C.createElement(A):{}}},3956:A=>{var I=TypeError;A.exports=function(A){if(A>9007199254740991)throw I(\\\"Maximum allowed index exceeded\\\");return A}},315:A=>{A.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},6900:A=>{A.exports=\\\"undefined\\\"!=typeof navigator&&String(navigator.userAgent)||\\\"\\\"},8233:(A,I,g)=>{var B,Q,C=g(2868),E=g(6900),i=C.process,o=C.Deno,D=i&&i.versions||o&&o.version,w=D&&D.v8;w&&(Q=(B=w.split(\\\".\\\"))[0]>0&&B[0]<4?1:+(B[0]+B[1])),!Q&&E&&(!(B=E.match(/Edge\\\\/(\\\\d+)/))||B[1]>=74)&&(B=E.match(/Chrome\\\\/(\\\\d+)/))&&(Q=+B[1]),A.exports=Q},2712:A=>{A.exports=[\\\"constructor\\\",\\\"hasOwnProperty\\\",\\\"isPrototypeOf\\\",\\\"propertyIsEnumerable\\\",\\\"toLocaleString\\\",\\\"toString\\\",\\\"valueOf\\\"]},390:(A,I,g)=>{\\\"use strict\\\";var B=g(2868),Q=g(6266),C=g(2866),E=g(8307),i=g(5904).f,o=g(1011),D=g(9081),w=g(7673),a=g(8518),F=g(5584),G=function(A){var I=function(g,B,C){if(this instanceof I){switch(arguments.length){case 0:return new A;case 1:return new A(g);case 2:return new A(g,B)}return new A(g,B,C)}return Q(A,this,arguments)};return I.prototype=A.prototype,I};A.exports=function(A,I){var g,Q,s,y,h,t,c,N,R,S=A.target,U=A.global,n=A.stat,r=A.proto,k=U?B:n?B[S]:(B[S]||{}).prototype,Y=U?D:D[S]||a(D,S,{})[S],e=Y.prototype;for(y in I)Q=!(g=o(U?y:S+(n?\\\".\\\":\\\"#\\\")+y,A.forced))&&k&&F(k,y),t=Y[y],Q&&(c=A.dontCallGetSet?(R=i(k,y))&&R.value:k[y]),h=Q&&c?c:I[y],Q&&typeof t==typeof h||(N=A.bind&&Q?w(h,B):A.wrap&&Q?G(h):r&&E(h)?C(h):h,(A.sham||h&&h.sham||t&&t.sham)&&a(N,\\\"sham\\\",!0),a(Y,y,N),r&&(F(D,s=S+\\\"Prototype\\\")||a(D,s,{}),a(D[s],y,h),A.real&&e&&(g||!e[y])&&a(e,y,h)))}},6530:A=>{A.exports=function(A){try{return!!A()}catch(A){return!0}}},6266:(A,I,g)=>{var B=g(9086),Q=Function.prototype,C=Q.apply,E=Q.call;A.exports=\\\"object\\\"==typeof Reflect&&Reflect.apply||(B?E.bind(C):function(){return E.apply(C,arguments)})},7673:(A,I,g)=>{var B=g(2866),Q=g(5222),C=g(9086),E=B(B.bind);A.exports=function(A,I){return Q(A),void 0===I?A:C?E(A,I):function(){return A.apply(I,arguments)}}},9086:(A,I,g)=>{var B=g(6530);A.exports=!B((function(){var A=function(){}.bind();return\\\"function\\\"!=typeof A||A.hasOwnProperty(\\\"prototype\\\")}))},3146:(A,I,g)=>{var B=g(9086),Q=Function.prototype.call;A.exports=B?Q.bind(Q):function(){return Q.apply(Q,arguments)}},7730:(A,I,g)=>{var B=g(7001),Q=g(5584),C=Function.prototype,E=B&&Object.getOwnPropertyDescriptor,i=Q(C,\\\"name\\\"),o=i&&\\\"something\\\"===function(){}.name,D=i&&(!B||B&&E(C,\\\"name\\\").configurable);A.exports={EXISTS:i,PROPER:o,CONFIGURABLE:D}},2866:(A,I,g)=>{var B=g(1570),Q=g(3880);A.exports=function(A){if(\\\"Function\\\"===B(A))return Q(A)}},3880:(A,I,g)=>{var B=g(9086),Q=Function.prototype,C=Q.call,E=B&&Q.bind.bind(C,C);A.exports=B?E:function(A){return function(){return C.apply(A,arguments)}}},8104:(A,I,g)=>{var B=g(9081),Q=g(2868),C=g(8307),E=function(A){return C(A)?A:void 0};A.exports=function(A,I){return arguments.length<2?E(B[A])||E(Q[A]):B[A]&&B[A][I]||Q[A]&&Q[A][I]}},2809:(A,I,g)=>{var B=g(5222),Q=g(1606);A.exports=function(A,I){var g=A[I];return Q(g)?void 0:B(g)}},2868:(A,I,g)=>{var B=function(A){return A&&A.Math==Math&&A};A.exports=B(\\\"object\\\"==typeof globalThis&&globalThis)||B(\\\"object\\\"==typeof window&&window)||B(\\\"object\\\"==typeof self&&self)||B(\\\"object\\\"==typeof g.g&&g.g)||function(){return this}()||Function(\\\"return this\\\")()},5584:(A,I,g)=>{var B=g(3880),Q=g(2058),C=B({}.hasOwnProperty);A.exports=Object.hasOwn||function(A,I){return C(Q(A),I)}},7048:A=>{A.exports={}},5644:(A,I,g)=>{var B=g(8104);A.exports=B(\\\"document\\\",\\\"documentElement\\\")},640:(A,I,g)=>{var B=g(7001),Q=g(6530),C=g(231);A.exports=!B&&!Q((function(){return 7!=Object.defineProperty(C(\\\"div\\\"),\\\"a\\\",{get:function(){return 7}}).a}))},1251:(A,I,g)=>{var B=g(3880),Q=g(6530),C=g(1570),E=Object,i=B(\\\"\\\".split);A.exports=Q((function(){return!E(\\\"z\\\").propertyIsEnumerable(0)}))?function(A){return\\\"String\\\"==C(A)?i(A,\\\"\\\"):E(A)}:E},1494:(A,I,g)=>{var B=g(3880),Q=g(8307),C=g(2656),E=B(Function.toString);Q(C.inspectSource)||(C.inspectSource=function(A){return E(A)}),A.exports=C.inspectSource},5875:(A,I,g)=>{var B,Q,C,E=g(3013),i=g(2868),o=g(3359),D=g(8518),w=g(5584),a=g(2656),F=g(5039),G=g(7048),s=\\\"Object already initialized\\\",y=i.TypeError,h=i.WeakMap;if(E||a.state){var t=a.state||(a.state=new h);t.get=t.get,t.has=t.has,t.set=t.set,B=function(A,I){if(t.has(A))throw y(s);return I.facade=A,t.set(A,I),I},Q=function(A){return t.get(A)||{}},C=function(A){return t.has(A)}}else{var c=F(\\\"state\\\");G[c]=!0,B=function(A,I){if(w(A,c))throw y(s);return I.facade=A,D(A,c,I),I},Q=function(A){return w(A,c)?A[c]:{}},C=function(A){return w(A,c)}}A.exports={set:B,get:Q,has:C,enforce:function(A){return C(A)?Q(A):B(A,{})},getterFor:function(A){return function(I){var g;if(!o(I)||(g=Q(I)).type!==A)throw y(\\\"Incompatible receiver, \\\"+A+\\\" required\\\");return g}}}},1054:(A,I,g)=>{var B=g(1570);A.exports=Array.isArray||function(A){return\\\"Array\\\"==B(A)}},8307:(A,I,g)=>{var B=g(2),Q=B.all;A.exports=B.IS_HTMLDDA?function(A){return\\\"function\\\"==typeof A||A===Q}:function(A){return\\\"function\\\"==typeof A}},1775:(A,I,g)=>{var B=g(3880),Q=g(6530),C=g(8307),E=g(7499),i=g(8104),o=g(1494),D=function(){},w=[],a=i(\\\"Reflect\\\",\\\"construct\\\"),F=/^\\\\s*(?:class|function)\\\\b/,G=B(F.exec),s=!F.exec(D),y=function(A){if(!C(A))return!1;try{return a(D,w,A),!0}catch(A){return!1}},h=function(A){if(!C(A))return!1;switch(E(A)){case\\\"AsyncFunction\\\":case\\\"GeneratorFunction\\\":case\\\"AsyncGeneratorFunction\\\":return!1}try{return s||!!G(F,o(A))}catch(A){return!0}};h.sham=!0,A.exports=!a||Q((function(){var A;return y(y.call)||!y(Object)||!y((function(){A=!0}))||A}))?h:y},1011:(A,I,g)=>{var B=g(6530),Q=g(8307),C=/#|\\\\.prototype\\\\./,E=function(A,I){var g=o[i(A)];return g==w||g!=D&&(Q(I)?B(I):!!I)},i=E.normalize=function(A){return String(A).replace(C,\\\".\\\").toLowerCase()},o=E.data={},D=E.NATIVE=\\\"N\\\",w=E.POLYFILL=\\\"P\\\";A.exports=E},1606:A=>{A.exports=function(A){return null==A}},3359:(A,I,g)=>{var B=g(8307),Q=g(2),C=Q.all;A.exports=Q.IS_HTMLDDA?function(A){return\\\"object\\\"==typeof A?null!==A:B(A)||A===C}:function(A){return\\\"object\\\"==typeof A?null!==A:B(A)}},8367:A=>{A.exports=!0},1149:(A,I,g)=>{var B=g(8104),Q=g(8307),C=g(5792),E=g(6046),i=Object;A.exports=E?function(A){return\\\"symbol\\\"==typeof A}:function(A){var I=B(\\\"Symbol\\\");return Q(I)&&C(I.prototype,i(A))}},2340:(A,I,g)=>{\\\"use strict\\\";var B=g(7300).IteratorPrototype,Q=g(2491),C=g(5595),E=g(6738),i=g(9418),o=function(){return this};A.exports=function(A,I,g,D){var w=I+\\\" Iterator\\\";return A.prototype=Q(B,{next:C(+!D,g)}),E(A,w,!1,!0),i[w]=o,A}},5241:(A,I,g)=>{\\\"use strict\\\";var B=g(390),Q=g(3146),C=g(8367),E=g(7730),i=g(8307),o=g(2340),D=g(2629),w=g(5255),a=g(6738),F=g(8518),G=g(491),s=g(5712),y=g(9418),h=g(7300),t=E.PROPER,c=E.CONFIGURABLE,N=h.IteratorPrototype,R=h.BUGGY_SAFARI_ITERATORS,S=s(\\\"iterator\\\"),U=\\\"keys\\\",n=\\\"values\\\",r=\\\"entries\\\",k=function(){return this};A.exports=function(A,I,g,E,s,h,Y){o(g,I,E);var e,H,J,K=function(A){if(A===s&&f)return f;if(!R&&A in d)return d[A];switch(A){case U:case n:case r:return function(){return new g(this,A)}}return function(){return new g(this)}},M=I+\\\" Iterator\\\",L=!1,d=A.prototype,l=d[S]||d[\\\"@@iterator\\\"]||s&&d[s],f=!R&&l||K(s),q=\\\"Array\\\"==I&&d.entries||l;if(q&&(e=D(q.call(new A)))!==Object.prototype&&e.next&&(C||D(e)===N||(w?w(e,N):i(e[S])||G(e,S,k)),a(e,M,!0,!0),C&&(y[M]=k)),t&&s==n&&l&&l.name!==n&&(!C&&c?F(d,\\\"name\\\",n):(L=!0,f=function(){return Q(l,this)})),s)if(H={values:K(n),keys:h?f:K(U),entries:K(r)},Y)for(J in H)(R||L||!(J in d))&&G(d,J,H[J]);else B({target:I,proto:!0,forced:R||L},H);return C&&!Y||d[S]===f||G(d,S,f,{name:s}),y[I]=f,H}},7300:(A,I,g)=>{\\\"use strict\\\";var B,Q,C,E=g(6530),i=g(8307),o=g(3359),D=g(2491),w=g(2629),a=g(491),F=g(5712),G=g(8367),s=F(\\\"iterator\\\"),y=!1;[].keys&&(\\\"next\\\"in(C=[].keys())?(Q=w(w(C)))!==Object.prototype&&(B=Q):y=!0),!o(B)||E((function(){var A={};return B[s].call(A)!==A}))?B={}:G&&(B=D(B)),i(B[s])||a(B,s,(function(){return this})),A.exports={IteratorPrototype:B,BUGGY_SAFARI_ITERATORS:y}},9418:A=>{A.exports={}},9876:(A,I,g)=>{var B=g(3746);A.exports=function(A){return B(A.length)}},2047:A=>{var I=Math.ceil,g=Math.floor;A.exports=Math.trunc||function(A){var B=+A;return(B>0?g:I)(B)}},2491:(A,I,g)=>{var B,Q=g(1912),C=g(4686),E=g(2712),i=g(7048),o=g(5644),D=g(231),w=g(5039),a=\\\"prototype\\\",F=\\\"script\\\",G=w(\\\"IE_PROTO\\\"),s=function(){},y=function(A){return\\\"<\\\"+F+\\\">\\\"+A+\\\"</\\\"+F+\\\">\\\"},h=function(A){A.write(y(\\\"\\\")),A.close();var I=A.parentWindow.Object;return A=null,I},t=function(){try{B=new ActiveXObject(\\\"htmlfile\\\")}catch(A){}var A,I,g;t=\\\"undefined\\\"!=typeof document?document.domain&&B?h(B):(I=D(\\\"iframe\\\"),g=\\\"java\\\"+F+\\\":\\\",I.style.display=\\\"none\\\",o.appendChild(I),I.src=String(g),(A=I.contentWindow.document).open(),A.write(y(\\\"document.F=Object\\\")),A.close(),A.F):h(B);for(var Q=E.length;Q--;)delete t[a][E[Q]];return t()};i[G]=!0,A.exports=Object.create||function(A,I){var g;return null!==A?(s[a]=Q(A),g=new s,s[a]=null,g[G]=A):g=t(),void 0===I?g:C.f(g,I)}},4686:(A,I,g)=>{var B=g(7001),Q=g(7139),C=g(7550),E=g(1912),i=g(3861),o=g(461);I.f=B&&!Q?Object.defineProperties:function(A,I){E(A);for(var g,B=i(I),Q=o(I),D=Q.length,w=0;D>w;)C.f(A,g=Q[w++],B[g]);return A}},7550:(A,I,g)=>{var B=g(7001),Q=g(640),C=g(7139),E=g(1912),i=g(5623),o=TypeError,D=Object.defineProperty,w=Object.getOwnPropertyDescriptor,a=\\\"enumerable\\\",F=\\\"configurable\\\",G=\\\"writable\\\";I.f=B?C?function(A,I,g){if(E(A),I=i(I),E(g),\\\"function\\\"==typeof A&&\\\"prototype\\\"===I&&\\\"value\\\"in g&&G in g&&!g[G]){var B=w(A,I);B&&B[G]&&(A[I]=g.value,g={configurable:F in g?g[F]:B[F],enumerable:a in g?g[a]:B[a],writable:!1})}return D(A,I,g)}:D:function(A,I,g){if(E(A),I=i(I),E(g),Q)try{return D(A,I,g)}catch(A){}if(\\\"get\\\"in g||\\\"set\\\"in g)throw o(\\\"Accessors not supported\\\");return\\\"value\\\"in g&&(A[I]=g.value),A}},5904:(A,I,g)=>{var B=g(7001),Q=g(3146),C=g(1156),E=g(5595),i=g(3861),o=g(5623),D=g(5584),w=g(640),a=Object.getOwnPropertyDescriptor;I.f=B?a:function(A,I){if(A=i(A),I=o(I),w)try{return a(A,I)}catch(A){}if(D(A,I))return E(!Q(C.f,A,I),A[I])}},6159:(A,I,g)=>{var B=g(1570),Q=g(3861),C=g(9035).f,E=g(6901),i=\\\"object\\\"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];A.exports.f=function(A){return i&&\\\"Window\\\"==B(A)?function(A){try{return C(A)}catch(A){return E(i)}}(A):C(Q(A))}},9035:(A,I,g)=>{var B=g(1247),Q=g(2712).concat(\\\"length\\\",\\\"prototype\\\");I.f=Object.getOwnPropertyNames||function(A){return B(A,Q)}},3764:(A,I)=>{I.f=Object.getOwnPropertySymbols},2629:(A,I,g)=>{var B=g(5584),Q=g(8307),C=g(2058),E=g(5039),i=g(872),o=E(\\\"IE_PROTO\\\"),D=Object,w=D.prototype;A.exports=i?D.getPrototypeOf:function(A){var I=C(A);if(B(I,o))return I[o];var g=I.constructor;return Q(g)&&I instanceof g?g.prototype:I instanceof D?w:null}},5792:(A,I,g)=>{var B=g(3880);A.exports=B({}.isPrototypeOf)},1247:(A,I,g)=>{var B=g(3880),Q=g(5584),C=g(3861),E=g(7075).indexOf,i=g(7048),o=B([].push);A.exports=function(A,I){var g,B=C(A),D=0,w=[];for(g in B)!Q(i,g)&&Q(B,g)&&o(w,g);for(;I.length>D;)Q(B,g=I[D++])&&(~E(w,g)||o(w,g));return w}},461:(A,I,g)=>{var B=g(1247),Q=g(2712);A.exports=Object.keys||function(A){return B(A,Q)}},1156:(A,I)=>{\\\"use strict\\\";var g={}.propertyIsEnumerable,B=Object.getOwnPropertyDescriptor,Q=B&&!g.call({1:2},1);I.f=Q?function(A){var I=B(this,A);return!!I&&I.enumerable}:g},5255:(A,I,g)=>{var B=g(3880),Q=g(1912),C=g(9154);A.exports=Object.setPrototypeOf||(\\\"__proto__\\\"in{}?function(){var A,I=!1,g={};try{(A=B(Object.getOwnPropertyDescriptor(Object.prototype,\\\"__proto__\\\").set))(g,[]),I=g instanceof Array}catch(A){}return function(g,B){return Q(g),C(B),I?A(g,B):g.__proto__=B,g}}():void 0)},2204:(A,I,g)=>{\\\"use strict\\\";var B=g(8889),Q=g(7499);A.exports=B?{}.toString:function(){return\\\"[object \\\"+Q(this)+\\\"]\\\"}},9466:(A,I,g)=>{var B=g(3146),Q=g(8307),C=g(3359),E=TypeError;A.exports=function(A,I){var g,i;if(\\\"string\\\"===I&&Q(g=A.toString)&&!C(i=B(g,A)))return i;if(Q(g=A.valueOf)&&!C(i=B(g,A)))return i;if(\\\"string\\\"!==I&&Q(g=A.toString)&&!C(i=B(g,A)))return i;throw E(\\\"Can't convert object to primitive value\\\")}},9081:A=>{A.exports={}},3604:(A,I,g)=>{var B=g(1606),Q=TypeError;A.exports=function(A){if(B(A))throw Q(\\\"Can't call method on \\\"+A);return A}},6738:(A,I,g)=>{var B=g(8889),Q=g(7550).f,C=g(8518),E=g(5584),i=g(2204),o=g(5712)(\\\"toStringTag\\\");A.exports=function(A,I,g,D){if(A){var w=g?A:A.prototype;E(w,o)||Q(w,o,{configurable:!0,value:I}),D&&!B&&C(w,\\\"toString\\\",i)}}},5039:(A,I,g)=>{var B=g(6315),Q=g(9),C=B(\\\"keys\\\");A.exports=function(A){return C[A]||(C[A]=Q(A))}},2656:(A,I,g)=>{var B=g(2868),Q=g(6868),C=\\\"__core-js_shared__\\\",E=B[C]||Q(C,{});A.exports=E},6315:(A,I,g)=>{var B=g(8367),Q=g(2656);(A.exports=function(A,I){return Q[A]||(Q[A]=void 0!==I?I:{})})(\\\"versions\\\",[]).push({version:\\\"3.27.2\\\",mode:B?\\\"pure\\\":\\\"global\\\",copyright:\\\"© 2014-2023 Denis Pushkarev (zloirock.ru)\\\",license:\\\"https://github.com/zloirock/core-js/blob/v3.27.2/LICENSE\\\",source:\\\"https://github.com/zloirock/core-js\\\"})},1420:(A,I,g)=>{var B=g(3880),Q=g(5511),C=g(5264),E=g(3604),i=B(\\\"\\\".charAt),o=B(\\\"\\\".charCodeAt),D=B(\\\"\\\".slice),w=function(A){return function(I,g){var B,w,a=C(E(I)),F=Q(g),G=a.length;return F<0||F>=G?A?\\\"\\\":void 0:(B=o(a,F))<55296||B>56319||F+1===G||(w=o(a,F+1))<56320||w>57343?A?i(a,F):B:A?D(a,F,F+2):w-56320+(B-55296<<10)+65536}};A.exports={codeAt:w(!1),charAt:w(!0)}},9075:(A,I,g)=>{var B=g(8233),Q=g(6530);A.exports=!!Object.getOwnPropertySymbols&&!Q((function(){var A=Symbol();return!String(A)||!(Object(A)instanceof Symbol)||!Symbol.sham&&B&&B<41}))},5743:(A,I,g)=>{var B=g(3146),Q=g(8104),C=g(5712),E=g(491);A.exports=function(){var A=Q(\\\"Symbol\\\"),I=A&&A.prototype,g=I&&I.valueOf,i=C(\\\"toPrimitive\\\");I&&!I[i]&&E(I,i,(function(A){return B(g,this)}),{arity:1})}},1056:(A,I,g)=>{var B=g(9075);A.exports=B&&!!Symbol.for&&!!Symbol.keyFor},3055:(A,I,g)=>{var B=g(5511),Q=Math.max,C=Math.min;A.exports=function(A,I){var g=B(A);return g<0?Q(g+I,0):C(g,I)}},3861:(A,I,g)=>{var B=g(1251),Q=g(3604);A.exports=function(A){return B(Q(A))}},5511:(A,I,g)=>{var B=g(2047);A.exports=function(A){var I=+A;return I!=I||0===I?0:B(I)}},3746:(A,I,g)=>{var B=g(5511),Q=Math.min;A.exports=function(A){return A>0?Q(B(A),9007199254740991):0}},2058:(A,I,g)=>{var B=g(3604),Q=Object;A.exports=function(A){return Q(B(A))}},3957:(A,I,g)=>{var B=g(3146),Q=g(3359),C=g(1149),E=g(2809),i=g(9466),o=g(5712),D=TypeError,w=o(\\\"toPrimitive\\\");A.exports=function(A,I){if(!Q(A)||C(A))return A;var g,o=E(A,w);if(o){if(void 0===I&&(I=\\\"default\\\"),g=B(o,A,I),!Q(g)||C(g))return g;throw D(\\\"Can't convert object to primitive value\\\")}return void 0===I&&(I=\\\"number\\\"),i(A,I)}},5623:(A,I,g)=>{var B=g(3957),Q=g(1149);A.exports=function(A){var I=B(A,\\\"string\\\");return Q(I)?I:I+\\\"\\\"}},8889:(A,I,g)=>{var B={};B[g(5712)(\\\"toStringTag\\\")]=\\\"z\\\",A.exports=\\\"[object z]\\\"===String(B)},5264:(A,I,g)=>{var B=g(7499),Q=String;A.exports=function(A){if(\\\"Symbol\\\"===B(A))throw TypeError(\\\"Cannot convert a Symbol value to a string\\\");return Q(A)}},7265:A=>{var I=String;A.exports=function(A){try{return I(A)}catch(A){return\\\"Object\\\"}}},9:(A,I,g)=>{var B=g(3880),Q=0,C=Math.random(),E=B(1..toString);A.exports=function(A){return\\\"Symbol(\\\"+(void 0===A?\\\"\\\":A)+\\\")_\\\"+E(++Q+C,36)}},6046:(A,I,g)=>{var B=g(9075);A.exports=B&&!Symbol.sham&&\\\"symbol\\\"==typeof Symbol.iterator},7139:(A,I,g)=>{var B=g(7001),Q=g(6530);A.exports=B&&Q((function(){return 42!=Object.defineProperty((function(){}),\\\"prototype\\\",{value:42,writable:!1}).prototype}))},3013:(A,I,g)=>{var B=g(2868),Q=g(8307),C=B.WeakMap;A.exports=Q(C)&&/native code/.test(String(C))},1886:(A,I,g)=>{var B=g(9081),Q=g(5584),C=g(3379),E=g(7550).f;A.exports=function(A){var I=B.Symbol||(B.Symbol={});Q(I,A)||E(I,A,{value:C.f(A)})}},3379:(A,I,g)=>{var B=g(5712);I.f=B},5712:(A,I,g)=>{var B=g(2868),Q=g(6315),C=g(5584),E=g(9),i=g(9075),o=g(6046),D=B.Symbol,w=Q(\\\"wks\\\"),a=o?D.for||D:D&&D.withoutSetter||E;A.exports=function(A){return C(w,A)||(w[A]=i&&C(D,A)?D[A]:a(\\\"Symbol.\\\"+A)),w[A]}},3075:(A,I,g)=>{\\\"use strict\\\";var B=g(390),Q=g(6530),C=g(1054),E=g(3359),i=g(2058),o=g(9876),D=g(3956),w=g(409),a=g(8136),F=g(2143),G=g(5712),s=g(8233),y=G(\\\"isConcatSpreadable\\\"),h=s>=51||!Q((function(){var A=[];return A[y]=!1,A.concat()[0]!==A})),t=function(A){if(!E(A))return!1;var I=A[y];return void 0!==I?!!I:C(A)};B({target:\\\"Array\\\",proto:!0,arity:1,forced:!h||!F(\\\"concat\\\")},{concat:function(A){var I,g,B,Q,C,E=i(this),F=a(E,0),G=0;for(I=-1,B=arguments.length;I<B;I++)if(t(C=-1===I?E:arguments[I]))for(Q=o(C),D(G+Q),g=0;g<Q;g++,G++)g in C&&w(F,G,C[g]);else D(G+1),w(F,G++,C);return F.length=G,F}})},2228:(A,I,g)=>{\\\"use strict\\\";var B=g(3861),Q=g(7710),C=g(9418),E=g(5875),i=g(7550).f,o=g(5241),D=g(5334),w=g(8367),a=g(7001),F=\\\"Array Iterator\\\",G=E.set,s=E.getterFor(F);A.exports=o(Array,\\\"Array\\\",(function(A,I){G(this,{type:F,target:B(A),index:0,kind:I})}),(function(){var A=s(this),I=A.target,g=A.kind,B=A.index++;return!I||B>=I.length?(A.target=void 0,D(void 0,!0)):D(\\\"keys\\\"==g?B:\\\"values\\\"==g?I[B]:[B,I[B]],!1)}),\\\"values\\\");var y=C.Arguments=C.Array;if(Q(\\\"keys\\\"),Q(\\\"values\\\"),Q(\\\"entries\\\"),!w&&a&&\\\"values\\\"!==y.name)try{i(y,\\\"name\\\",{value:\\\"values\\\"})}catch(A){}},2041:()=>{},5966:(A,I,g)=>{var B=g(390),Q=g(8104),C=g(6266),E=g(3146),i=g(3880),o=g(6530),D=g(1054),w=g(8307),a=g(3359),F=g(1149),G=g(4735),s=g(9075),y=Q(\\\"JSON\\\",\\\"stringify\\\"),h=i(/./.exec),t=i(\\\"\\\".charAt),c=i(\\\"\\\".charCodeAt),N=i(\\\"\\\".replace),R=i(1..toString),S=/[\\\\uD800-\\\\uDFFF]/g,U=/^[\\\\uD800-\\\\uDBFF]$/,n=/^[\\\\uDC00-\\\\uDFFF]$/,r=!s||o((function(){var A=Q(\\\"Symbol\\\")();return\\\"[null]\\\"!=y([A])||\\\"{}\\\"!=y({a:A})||\\\"{}\\\"!=y(Object(A))})),k=o((function(){return'\\\"\\\\\\\\udf06\\\\\\\\ud834\\\"'!==y(\\\"\\\\udf06\\\\ud834\\\")||'\\\"\\\\\\\\udead\\\"'!==y(\\\"\\\\udead\\\")})),Y=function(A,I){var g=G(arguments),B=I;if((a(I)||void 0!==A)&&!F(A))return D(I)||(I=function(A,I){if(w(B)&&(I=E(B,this,A,I)),!F(I))return I}),g[1]=I,C(y,null,g)},e=function(A,I,g){var B=t(g,I-1),Q=t(g,I+1);return h(U,A)&&!h(n,Q)||h(n,A)&&!h(U,B)?\\\"\\\\\\\\u\\\"+R(c(A,0),16):A};y&&B({target:\\\"JSON\\\",stat:!0,arity:3,forced:r||k},{stringify:function(A,I,g){var B=G(arguments),Q=C(r?Y:y,null,B);return k&&\\\"string\\\"==typeof Q?N(Q,S,e):Q}})},3596:(A,I,g)=>{var B=g(2868);g(6738)(B.JSON,\\\"JSON\\\",!0)},1227:()=>{},6764:(A,I,g)=>{var B=g(390),Q=g(7001),C=g(7550).f;B({target:\\\"Object\\\",stat:!0,forced:Object.defineProperty!==C,sham:!Q},{defineProperty:C})},597:(A,I,g)=>{var B=g(390),Q=g(9075),C=g(6530),E=g(3764),i=g(2058);B({target:\\\"Object\\\",stat:!0,forced:!Q||C((function(){E.f(1)}))},{getOwnPropertySymbols:function(A){var I=E.f;return I?I(i(A)):[]}})},2575:()=>{},6268:()=>{},8109:(A,I,g)=>{\\\"use strict\\\";var B=g(1420).charAt,Q=g(5264),C=g(5875),E=g(5241),i=g(5334),o=\\\"String Iterator\\\",D=C.set,w=C.getterFor(o);E(String,\\\"String\\\",(function(A){D(this,{type:o,string:Q(A),index:0})}),(function(){var A,I=w(this),g=I.string,Q=I.index;return Q>=g.length?i(void 0,!0):(A=B(g,Q),I.index+=A.length,i(A,!1))}))},5762:(A,I,g)=>{g(1886)(\\\"asyncIterator\\\")},2661:(A,I,g)=>{\\\"use strict\\\";var B=g(390),Q=g(2868),C=g(3146),E=g(3880),i=g(8367),o=g(7001),D=g(9075),w=g(6530),a=g(5584),F=g(5792),G=g(1912),s=g(3861),y=g(5623),h=g(5264),t=g(5595),c=g(2491),N=g(461),R=g(9035),S=g(6159),U=g(3764),n=g(5904),r=g(7550),k=g(4686),Y=g(1156),e=g(491),H=g(6315),J=g(5039),K=g(7048),M=g(9),L=g(5712),d=g(3379),l=g(1886),f=g(5743),q=g(6738),b=g(5875),p=g(4206).forEach,u=J(\\\"hidden\\\"),Z=\\\"Symbol\\\",W=\\\"prototype\\\",X=b.set,m=b.getterFor(Z),x=Object[W],V=Q.Symbol,T=V&&V[W],v=Q.TypeError,j=Q.QObject,O=n.f,P=r.f,z=S.f,_=Y.f,$=E([].push),AA=H(\\\"symbols\\\"),IA=H(\\\"op-symbols\\\"),gA=H(\\\"wks\\\"),BA=!j||!j[W]||!j[W].findChild,QA=o&&w((function(){return 7!=c(P({},\\\"a\\\",{get:function(){return P(this,\\\"a\\\",{value:7}).a}})).a}))?function(A,I,g){var B=O(x,I);B&&delete x[I],P(A,I,g),B&&A!==x&&P(x,I,B)}:P,CA=function(A,I){var g=AA[A]=c(T);return X(g,{type:Z,tag:A,description:I}),o||(g.description=I),g},EA=function(A,I,g){A===x&&EA(IA,I,g),G(A);var B=y(I);return G(g),a(AA,B)?(g.enumerable?(a(A,u)&&A[u][B]&&(A[u][B]=!1),g=c(g,{enumerable:t(0,!1)})):(a(A,u)||P(A,u,t(1,{})),A[u][B]=!0),QA(A,B,g)):P(A,B,g)},iA=function(A,I){G(A);var g=s(I),B=N(g).concat(aA(g));return p(B,(function(I){o&&!C(oA,g,I)||EA(A,I,g[I])})),A},oA=function(A){var I=y(A),g=C(_,this,I);return!(this===x&&a(AA,I)&&!a(IA,I))&&(!(g||!a(this,I)||!a(AA,I)||a(this,u)&&this[u][I])||g)},DA=function(A,I){var g=s(A),B=y(I);if(g!==x||!a(AA,B)||a(IA,B)){var Q=O(g,B);return!Q||!a(AA,B)||a(g,u)&&g[u][B]||(Q.enumerable=!0),Q}},wA=function(A){var I=z(s(A)),g=[];return p(I,(function(A){a(AA,A)||a(K,A)||$(g,A)})),g},aA=function(A){var I=A===x,g=z(I?IA:s(A)),B=[];return p(g,(function(A){!a(AA,A)||I&&!a(x,A)||$(B,AA[A])})),B};D||(e(T=(V=function(){if(F(T,this))throw v(\\\"Symbol is not a constructor\\\");var A=arguments.length&&void 0!==arguments[0]?h(arguments[0]):void 0,I=M(A),g=function(A){this===x&&C(g,IA,A),a(this,u)&&a(this[u],I)&&(this[u][I]=!1),QA(this,I,t(1,A))};return o&&BA&&QA(x,I,{configurable:!0,set:g}),CA(I,A)})[W],\\\"toString\\\",(function(){return m(this).tag})),e(V,\\\"withoutSetter\\\",(function(A){return CA(M(A),A)})),Y.f=oA,r.f=EA,k.f=iA,n.f=DA,R.f=S.f=wA,U.f=aA,d.f=function(A){return CA(L(A),A)},o&&(P(T,\\\"description\\\",{configurable:!0,get:function(){return m(this).description}}),i||e(x,\\\"propertyIsEnumerable\\\",oA,{unsafe:!0}))),B({global:!0,constructor:!0,wrap:!0,forced:!D,sham:!D},{Symbol:V}),p(N(gA),(function(A){l(A)})),B({target:Z,stat:!0,forced:!D},{useSetter:function(){BA=!0},useSimple:function(){BA=!1}}),B({target:\\\"Object\\\",stat:!0,forced:!D,sham:!o},{create:function(A,I){return void 0===I?c(A):iA(c(A),I)},defineProperty:EA,defineProperties:iA,getOwnPropertyDescriptor:DA}),B({target:\\\"Object\\\",stat:!0,forced:!D},{getOwnPropertyNames:wA}),f(),q(V,Z),K[u]=!0},2181:()=>{},5091:(A,I,g)=>{var B=g(390),Q=g(8104),C=g(5584),E=g(5264),i=g(6315),o=g(1056),D=i(\\\"string-to-symbol-registry\\\"),w=i(\\\"symbol-to-string-registry\\\");B({target:\\\"Symbol\\\",stat:!0,forced:!o},{for:function(A){var I=E(A);if(C(D,I))return D[I];var g=Q(\\\"Symbol\\\")(I);return D[I]=g,w[g]=I,g}})},8848:(A,I,g)=>{g(1886)(\\\"hasInstance\\\")},3719:(A,I,g)=>{g(1886)(\\\"isConcatSpreadable\\\")},2362:(A,I,g)=>{g(1886)(\\\"iterator\\\")},8318:(A,I,g)=>{g(2661),g(5091),g(9037),g(5966),g(597)},9037:(A,I,g)=>{var B=g(390),Q=g(5584),C=g(1149),E=g(7265),i=g(6315),o=g(1056),D=i(\\\"symbol-to-string-registry\\\");B({target:\\\"Symbol\\\",stat:!0,forced:!o},{keyFor:function(A){if(!C(A))throw TypeError(E(A)+\\\" is not a symbol\\\");if(Q(D,A))return D[A]}})},888:(A,I,g)=>{g(1886)(\\\"matchAll\\\")},346:(A,I,g)=>{g(1886)(\\\"match\\\")},909:(A,I,g)=>{g(1886)(\\\"replace\\\")},1992:(A,I,g)=>{g(1886)(\\\"search\\\")},8512:(A,I,g)=>{g(1886)(\\\"species\\\")},6165:(A,I,g)=>{g(1886)(\\\"split\\\")},6044:(A,I,g)=>{var B=g(1886),Q=g(5743);B(\\\"toPrimitive\\\"),Q()},4676:(A,I,g)=>{var B=g(8104),Q=g(1886),C=g(6738);Q(\\\"toStringTag\\\"),C(B(\\\"Symbol\\\"),\\\"Symbol\\\")},263:(A,I,g)=>{g(1886)(\\\"unscopables\\\")},8812:(A,I,g)=>{g(1886)(\\\"asyncDispose\\\")},9085:(A,I,g)=>{g(1886)(\\\"dispose\\\")},7384:(A,I,g)=>{g(1886)(\\\"matcher\\\")},9928:(A,I,g)=>{g(1886)(\\\"metadataKey\\\")},4719:(A,I,g)=>{g(1886)(\\\"metadata\\\")},2994:(A,I,g)=>{g(1886)(\\\"observable\\\")},9431:(A,I,g)=>{g(1886)(\\\"patternMatch\\\")},4803:(A,I,g)=>{g(1886)(\\\"replaceAll\\\")},9702:(A,I,g)=>{g(2228);var B=g(315),Q=g(2868),C=g(7499),E=g(8518),i=g(9418),o=g(5712)(\\\"toStringTag\\\");for(var D in B){var w=Q[D],a=w&&w.prototype;a&&C(a)!==o&&E(a,o,D),i[D]=i.Array}},8531:(A,I,g)=>{var B=g(6854);A.exports=B},3355:(A,I,g)=>{var B=g(1442);g(9702),A.exports=B},6888:(A,I,g)=>{var B=g(1190);g(9702),A.exports=B},5013:(A,I,g)=>{var B=g(5261);A.exports=B},981:()=>{},1209:()=>{},1973:()=>{},378:()=>{},9652:()=>{},6087:()=>{},4555:()=>{},1005:()=>{},9131:(A,I,g)=>{A.exports=g(5723)},7150:(A,I,g)=>{A.exports=g(156)},2185:(A,I,g)=>{A.exports=g(7754)},4972:(A,I,g)=>{A.exports=g(4133)}},B={};function Q(A){var I=B[A];if(void 0!==I)return I.exports;var C=B[A]={exports:{}};return g[A].call(C.exports,C,C.exports,Q),C.exports}Q.m=g,Q.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return Q.d(I,{a:I}),I},I=Object.getPrototypeOf?A=>Object.getPrototypeOf(A):A=>A.__proto__,Q.t=function(g,B){if(1&B&&(g=this(g)),8&B)return g;if(\\\"object\\\"==typeof g&&g){if(4&B&&g.__esModule)return g;if(16&B&&\\\"function\\\"==typeof g.then)return g}var C=Object.create(null);Q.r(C);var E={};A=A||[null,I({}),I([]),I(I)];for(var i=2&B&&g;\\\"object\\\"==typeof i&&!~A.indexOf(i);i=I(i))Object.getOwnPropertyNames(i).forEach((A=>E[A]=()=>g[A]));return E.default=()=>g,Q.d(C,E),C},Q.d=(A,I)=>{for(var g in I)Q.o(I,g)&&!Q.o(A,g)&&Object.defineProperty(A,g,{enumerable:!0,get:I[g]})},Q.f={},Q.e=A=>Promise.all(Object.keys(Q.f).reduce(((I,g)=>(Q.f[g](A,I),I)),[])),Q.u=A=>A+\\\".bundle.min.worker.js\\\",Q.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(A){if(\\\"object\\\"==typeof window)return window}}(),Q.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I),Q.r=A=>{\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(A,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(A,\\\"__esModule\\\",{value:!0})},(()=>{var A;Q.g.importScripts&&(A=Q.g.location+\\\"\\\");var I=Q.g.document;if(!A&&I&&(I.currentScript&&(A=I.currentScript.src),!A)){var g=I.getElementsByTagName(\\\"script\\\");g.length&&(A=g[g.length-1].src)}if(!A)throw new Error(\\\"Automatic publicPath is not supported in this browser\\\");A=A.replace(/#.*$/,\\\"\\\").replace(/\\\\?.*$/,\\\"\\\").replace(/\\\\/[^\\\\/]+$/,\\\"/\\\"),Q.p=A})(),(()=>{var A={362:1};Q.f.i=(I,g)=>{A[I]||importScripts(Q.p+Q.u(I))};var I=self.webpackChunkcornerstoneWADOImageLoader=self.webpackChunkcornerstoneWADOImageLoader||[],g=I.push.bind(I);I.push=I=>{var[B,C,E]=I;for(var i in C)Q.o(C,i)&&(Q.m[i]=C[i]);for(E&&E(Q);B.length;)A[B.pop()]=1;g(I)}})(),(()=>{\\\"use strict\\\";const A={};let I,g=!1;function B(B){if(A[B.taskType])return console.log('attempt to register duplicate task handler \\\"',B.taskType,'\\\"'),!1;A[B.taskType]=B,g&&B.initialize(I.taskConfiguration)}self.onmessage=function(Q){if(Q.data.taskType)if(\\\"initialize\\\"!==Q.data.taskType){if(\\\"loadWebWorkerTask\\\"===Q.data.taskType)return C=Q.data,I=C.config,void self.importScripts(C.sourcePath);var C;if(A[Q.data.taskType])try{A[Q.data.taskType].handler(Q.data,(function(A,I){self.postMessage({taskType:Q.data.taskType,status:\\\"success\\\",result:A,workerIndex:Q.data.workerIndex},I)}))}catch(A){console.log(`task ${Q.data.taskType} failed - ${A.message}`),self.postMessage({taskType:Q.data.taskType,status:\\\"failed\\\",result:A.message,workerIndex:Q.data.workerIndex})}else console.log(\\\"no task handler for \\\",Q.data.taskType),console.log(A),self.postMessage({taskType:Q.data.taskType,status:\\\"failed - no task handler registered\\\",workerIndex:Q.data.workerIndex})}else!function(Q){if(!g){if(I=Q.config,self.registerTaskHandler=B,Q.config.webWorkerTaskPaths)for(let A=0;A<Q.config.webWorkerTaskPaths.length;A++)self.importScripts(Q.config.webWorkerTaskPaths[A]);Object.keys(A).forEach((function(g){A[g].initialize(I.taskConfiguration)})),self.postMessage({taskType:\\\"initialize\\\",status:\\\"success\\\",result:{},workerIndex:Q.workerIndex}),g=!0}}(Q.data);else console.log(Q.data)};var C=Q(9131),E=Q(7150),i=Q(2185);function o(A){return o=\\\"function\\\"==typeof E&&\\\"symbol\\\"==typeof i?function(A){return typeof A}:function(A){return A&&\\\"function\\\"==typeof E&&A.constructor===E&&A!==E.prototype?\\\"symbol\\\":typeof A},o(A)}var D=Q(4972);function w(A){var I=function(A,I){if(\\\"object\\\"!==o(A)||null===A)return A;var g=A[D];if(void 0!==g){var B=g.call(A,I||\\\"default\\\");if(\\\"object\\\"!==o(B))return B;throw new TypeError(\\\"@@toPrimitive must return a primitive value.\\\")}return(\\\"string\\\"===I?String:Number)(A)}(A,\\\"string\\\");return\\\"symbol\\\"===o(I)?I:String(I)}function a(A,I,g){return(I=w(I))in A?C(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}):A[I]=g,A}var F=Q(4044),G=Q.n(F);const s=\\\"data:application/wasm;base64,\\\";function y(A,I){var g=Object.keys(A);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(A);I&&(B=B.filter((function(I){return Object.getOwnPropertyDescriptor(A,I).enumerable}))),g.push.apply(g,B)}return g}function h(A){for(var I=1;I<arguments.length;I++){var g=null!=arguments[I]?arguments[I]:{};I%2?y(Object(g),!0).forEach((function(I){a(A,I,g[I])})):Object.getOwnPropertyDescriptors?Object.defineProperties(A,Object.getOwnPropertyDescriptors(g)):y(Object(g)).forEach((function(I){Object.defineProperty(A,I,Object.getOwnPropertyDescriptor(g,I))}))}return A}const t={codec:void 0,decoder:void 0,decodeConfig:{}};function c(A){if(t.decodeConfig=A,t.codec)return Promise.resolve();const I=G()({locateFile:A=>A.endsWith(\\\".wasm\\\")?s:A});return new Promise(((A,g)=>{I.then((I=>{t.codec=I,t.decoder=new I.J2KDecoder,A()}),g)}))}const N=async function(A,I){await c();const g=t.decoder,B=g.getEncodedBuffer(A.length);B.set(A),g.decodeSubResolution(0,0);const Q=g.getFrameInfo(),C=g.getDecodedBuffer();new Uint8Array(C.length).set(C);const E=`x: ${g.getImageOffset().x}, y: ${g.getImageOffset().y}`,i=g.getNumDecompositions(),o=g.getNumLayers(),D=[\\\"unknown\\\",\\\"LRCP\\\",\\\"RLCP\\\",\\\"RPCL\\\",\\\"PCRL\\\",\\\"CPRL\\\"][g.getProgressionOrder()+1],w=g.getIsReversible(),a=`${g.getBlockDimensions().width} x ${g.getBlockDimensions().height}`,F=`${g.getTileSize().width} x ${g.getTileSize().height}`,G=`${g.getTileOffset().x}, ${g.getTileOffset().y}`,s=g.getColorSpace(),y=`${C.length.toLocaleString()} bytes`,N=`${(C.length/B.length).toFixed(2)}:1`,R={columns:Q.width,rows:Q.height,bitsPerPixel:Q.bitsPerSample,signed:Q.isSigned,bytesPerPixel:I.bytesPerPixel,componentsPerPixel:Q.componentCount},S=function(A,I){if(A.bitsPerSample>8)return A.isSigned?new Int16Array(I.buffer,I.byteOffset,I.byteLength/2):new Uint16Array(I.buffer,I.byteOffset,I.byteLength/2);if(A.isSigned)return new Int8Array(I.buffer,I.byteOffset,I.byteLength);return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}(Q,C),U={imageOffset:E,numDecompositions:i,numLayers:o,progessionOrder:D,reversible:w,blockDimensions:a,tileSize:F,tileOffset:G,colorTransform:s,decodedSize:y,compressionRatio:N};return h(h(h({},I),{},{pixelData:S,imageInfo:R,encodeOptions:U},U),R)};var R=Q(8327),S=Q.n(R);const U=\\\"data:application/wasm;base64,\\\";function n(A,I){var g=Object.keys(A);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(A);I&&(B=B.filter((function(I){return Object.getOwnPropertyDescriptor(A,I).enumerable}))),g.push.apply(g,B)}return g}function r(A){for(var I=1;I<arguments.length;I++){var g=null!=arguments[I]?arguments[I]:{};I%2?n(Object(g),!0).forEach((function(I){a(A,I,g[I])})):Object.getOwnPropertyDescriptors?Object.defineProperties(A,Object.getOwnPropertyDescriptors(g)):n(Object(g)).forEach((function(I){Object.defineProperty(A,I,Object.getOwnPropertyDescriptor(g,I))}))}return A}const k={codec:void 0,decoder:void 0,decodeConfig:{}};function Y(A){if(k.decodeConfig=A,k.codec)return Promise.resolve();const I=S()({locateFile:A=>A.endsWith(\\\".wasm\\\")?U:A});return new Promise(((A,g)=>{I.then((I=>{k.codec=I,k.decoder=new I.JpegLSDecoder,A()}),g)}))}const e=async function(A,I){try{await Y();const g=k.decoder;g.getEncodedBuffer(A.length).set(A),g.decode();const B=g.getFrameInfo(),Q=g.getInterleaveMode(),C=g.getNearLossless(),E=g.getDecodedBuffer(),i={columns:B.width,rows:B.height,bitsPerPixel:B.bitsPerSample,signed:I.signed,bytesPerPixel:I.bytesPerPixel,componentsPerPixel:B.componentCount},o=function(A,I,g){if(A.bitsPerSample>8)return g?new Int16Array(I.buffer,I.byteOffset,I.byteLength/2):new Uint16Array(I.buffer,I.byteOffset,I.byteLength/2);if(g)return new Int8Array(I.buffer,I.byteOffset,I.byteLength);return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}(B,E,I.signed),D={nearLossless:C,interleaveMode:Q,frameInfo:B};return r(r(r({},I),{},{pixelData:o,imageInfo:i,encodeOptions:D},D),i)}catch(A){throw\\\"number\\\"==typeof(g=A)?k.codec.getExceptionMessage(g):g}var g};const H=function(A){let I,g=A[0],B=A[0];const Q=A.length;for(let C=1;C<Q;C++)I=A[C],g=Math.min(g,I),B=Math.max(B,I);return{min:g,max:B}};function J(A){return\\\"number\\\"==typeof A}const K=async function(A,I){let g=I.buffer,B=I.byteOffset;const Q=I.length;return 16===A.bitsAllocated?(B%2&&(g=g.slice(B),B=0),0===A.pixelRepresentation?A.pixelData=new Uint16Array(g,B,Q/2):A.pixelData=new Int16Array(g,B,Q/2)):8===A.bitsAllocated||1===A.bitsAllocated?A.pixelData=I:32===A.bitsAllocated&&(B%2&&(g=g.slice(B),B=0),A.pixelData=new Float32Array(g,B,Q/4)),A};const M=async function(A,I){if(16===A.bitsAllocated){let B=I.buffer,Q=I.byteOffset;const C=I.length;Q%2&&(B=B.slice(Q),Q=0),0===A.pixelRepresentation?A.pixelData=new Uint16Array(B,Q,C/2):A.pixelData=new Int16Array(B,Q,C/2);for(let I=0;I<A.pixelData.length;I++)A.pixelData[I]=(255&(g=A.pixelData[I]))<<8|g>>8&255}else 8===A.bitsAllocated&&(A.pixelData=I);var g;return A};const L=async function(A,I){if(8===A.bitsAllocated)return A.planarConfiguration?function(A,I){const g=I,B=A.rows*A.columns,Q=new ArrayBuffer(B*A.samplesPerPixel),C=new DataView(g.buffer,g.byteOffset),E=new Int8Array(g.buffer,g.byteOffset),i=new Int8Array(Q);let o=0;const D=C.getInt32(0,!0);for(let A=0;A<D;++A){o=A*B;let I=C.getInt32(4*(A+1),!0),Q=C.getInt32(4*(A+2),!0);0===Q&&(Q=g.length);const w=B*D;for(;I<Q;){const A=E[I++];if(A>=0&&A<=127)for(let g=0;g<A+1&&o<w;++g)i[o]=E[I++],o++;else if(A<=-1&&A>=-127){const g=E[I++];for(let I=0;I<1-A&&o<w;++I)i[o]=g,o++}}}return A.pixelData=new Uint8Array(Q),A}(A,I):function(A,I){const g=I,B=A.rows*A.columns,Q=new ArrayBuffer(B*A.samplesPerPixel),C=new DataView(g.buffer,g.byteOffset),E=new Int8Array(g.buffer,g.byteOffset),i=new Int8Array(Q);let o=0;const D=C.getInt32(0,!0);for(let I=0;I<D;++I){o=I;let Q=C.getInt32(4*(I+1),!0),w=C.getInt32(4*(I+2),!0);0===w&&(w=g.length);const a=B*D;for(;Q<w;){const I=E[Q++];if(I>=0&&I<=127)for(let g=0;g<I+1&&o<a;++g)i[o]=E[Q++],o+=A.samplesPerPixel;else if(I<=-1&&I>=-127){const g=E[Q++];for(let B=0;B<1-I&&o<a;++B)i[o]=g,o+=A.samplesPerPixel}}}return A.pixelData=new Uint8Array(Q),A}(A,I);if(16===A.bitsAllocated)return function(A,I){const g=I,B=A.rows*A.columns,Q=new ArrayBuffer(B*A.samplesPerPixel*2),C=new DataView(g.buffer,g.byteOffset),E=new Int8Array(g.buffer,g.byteOffset),i=new Int8Array(Q),o=C.getInt32(0,!0);for(let A=0;A<o;++A){let I=0;const Q=0===A?1:0;let o=C.getInt32(4*(A+1),!0),D=C.getInt32(4*(A+2),!0);for(0===D&&(D=g.length);o<D;){const A=E[o++];if(A>=0&&A<=127)for(let g=0;g<A+1&&I<B;++g)i[2*I+Q]=E[o++],I++;else if(A<=-1&&A>=-127){const g=E[o++];for(let C=0;C<1-A&&I<B;++C)i[2*I+Q]=g,I++}}}0===A.pixelRepresentation?A.pixelData=new Uint16Array(Q):A.pixelData=new Int16Array(Q);return A}(A,I);throw new Error(\\\"unsupported pixel format for RLE\\\")};var d=Q(9400),l=Q.n(d);const f=\\\"data:application/wasm;base64,\\\";function q(A,I){var g=Object.keys(A);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(A);I&&(B=B.filter((function(I){return Object.getOwnPropertyDescriptor(A,I).enumerable}))),g.push.apply(g,B)}return g}function b(A){for(var I=1;I<arguments.length;I++){var g=null!=arguments[I]?arguments[I]:{};I%2?q(Object(g),!0).forEach((function(I){a(A,I,g[I])})):Object.getOwnPropertyDescriptors?Object.defineProperties(A,Object.getOwnPropertyDescriptors(g)):q(Object(g)).forEach((function(I){Object.defineProperty(A,I,Object.getOwnPropertyDescriptor(g,I))}))}return A}const p={codec:void 0,decoder:void 0};const u=async function(A,I){await function(){if(p.codec)return Promise.resolve();const A=l()({locateFile:A=>A.endsWith(\\\".wasm\\\")?f:A});return new Promise(((I,g)=>{A.then((A=>{p.codec=A,p.decoder=new A.JPEGDecoder,I()}),g)}))}();const g=p.decoder;g.getEncodedBuffer(A.length).set(A),g.decode();const B=g.getFrameInfo(),Q=g.getDecodedBuffer(),C={columns:B.width,rows:B.height,bitsPerPixel:B.bitsPerSample,signed:I.signed,bytesPerPixel:I.bytesPerPixel,componentsPerPixel:B.componentCount},E=function(A,I){if(A.isSigned)return new Int8Array(I.buffer,I.byteOffset,I.byteLength);return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}(B,Q),i={frameInfo:B};return b(b(b({},I),{},{pixelData:E,imageInfo:C,encodeOptions:i},i),C)},Z={JpegImage:void 0,decodeConfig:{}};const W=async function(A,I){if(await function(A){return Z.decodeConfig=A,Z.JpegImage?Promise.resolve():new Promise(((A,I)=>{Q.e(888).then(Q.t.bind(Q,1888,23)).then((I=>{let{JpegImage:g}=I;Z.JpegImage=g,A()}),I)}))}(),void 0===Z.JpegImage)throw new Error(\\\"No JPEG Baseline decoder loaded\\\");const g=new Z.JpegImage;return g.parse(I),g.colorTransform=!1,8===A.bitsAllocated?(A.pixelData=g.getData(A.columns,A.rows),A):16===A.bitsAllocated?(A.pixelData=g.getData16(A.columns,A.rows),A):void 0},X={jpeg:void 0,decodeConfig:{}};const m=async function(A,I){if(await function(A){return X.decodeConfig=A,X.jpeg?Promise.resolve():new Promise(((A,I)=>{Q.e(610).then(Q.t.bind(Q,6610,23)).then((I=>{X.jpeg=I,A()}),I)}))}(),void 0===X.jpeg||void 0===X.jpeg.lossless||void 0===X.jpeg.lossless.Decoder)throw new Error(\\\"No JPEG Lossless decoder loaded\\\");const g=A.bitsAllocated<=8?1:2,B=I.buffer,C=(new X.jpeg.lossless.Decoder).decode(B,I.byteOffset,I.length,g);return 0===A.pixelRepresentation?16===A.bitsAllocated?(A.pixelData=new Uint16Array(C.buffer),A):(A.pixelData=new Uint8Array(C.buffer),A):(A.pixelData=new Int16Array(C.buffer),A)};var x=Q(6396),V=Q.n(x);const T=\\\"data:application/wasm;base64,\\\";function v(A,I){var g=Object.keys(A);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(A);I&&(B=B.filter((function(I){return Object.getOwnPropertyDescriptor(A,I).enumerable}))),g.push.apply(g,B)}return g}function j(A){for(var I=1;I<arguments.length;I++){var g=null!=arguments[I]?arguments[I]:{};I%2?v(Object(g),!0).forEach((function(I){a(A,I,g[I])})):Object.getOwnPropertyDescriptors?Object.defineProperties(A,Object.getOwnPropertyDescriptors(g)):v(Object(g)).forEach((function(I){Object.defineProperty(A,I,Object.getOwnPropertyDescriptor(g,I))}))}return A}const O={codec:void 0,decoder:void 0,decodeConfig:{}};const P=async function(A,I){await function(A){if(O.decodeConfig=A,O.codec)return Promise.resolve();const I=V()({locateFile:A=>A.endsWith(\\\".wasm\\\")?T:A});return new Promise(((A,g)=>{I.then((I=>{O.codec=I,O.decoder=new I.HTJ2KDecoder,A()}),g)}))}();const g=O.decoder,B=g.getEncodedBuffer(A.length);B.set(A),g.decode();const Q=g.getFrameInfo(),C=g.getDecodedBuffer();new Uint8Array(C.length).set(C);const E=`x: ${g.getImageOffset().x}, y: ${g.getImageOffset().y}`,i=g.getNumDecompositions(),o=g.getNumLayers(),D=[\\\"unknown\\\",\\\"LRCP\\\",\\\"RLCP\\\",\\\"RPCL\\\",\\\"PCRL\\\",\\\"CPRL\\\"][g.getProgressionOrder()+1],w=g.getIsReversible(),a=`${g.getBlockDimensions().width} x ${g.getBlockDimensions().height}`,F=`${g.getTileSize().width} x ${g.getTileSize().height}`,G=`${g.getTileOffset().x}, ${g.getTileOffset().y}`,s=`${C.length.toLocaleString()} bytes`,y=`${(C.length/B.length).toFixed(2)}:1`,h={columns:Q.width,rows:Q.height,bitsPerPixel:Q.bitsPerSample,signed:Q.isSigned,bytesPerPixel:I.bytesPerPixel,componentsPerPixel:Q.componentCount};let t=function(A,I){if(A.bitsPerSample>8)return A.isSigned?new Int16Array(I.buffer,I.byteOffset,I.byteLength/2):new Uint16Array(I.buffer,I.byteOffset,I.byteLength/2);if(A.isSigned)return new Int8Array(I.buffer,I.byteOffset,I.byteLength);return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}(Q,C);const{buffer:c,byteOffset:N,byteLength:R}=t,S=c.slice(N,N+R);t=new t.constructor(S);const U={imageOffset:E,numDecompositions:i,numLayers:o,progessionOrder:D,reversible:w,blockDimensions:a,tileSize:F,tileOffset:G,decodedSize:s,compressionRatio:y};return j(j(j({},I),{},{pixelData:t,imageInfo:h,encodeOptions:U},U),h)};function z(A,I){var g=Object.keys(A);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(A);I&&(B=B.filter((function(I){return Object.getOwnPropertyDescriptor(A,I).enumerable}))),g.push.apply(g,B)}return g}function _(A){for(var I=1;I<arguments.length;I++){var g=null!=arguments[I]?arguments[I]:{};I%2?z(Object(g),!0).forEach((function(I){a(A,I,g[I])})):Object.getOwnPropertyDescriptors?Object.defineProperties(A,Object.getOwnPropertyDescriptors(g)):z(Object(g)).forEach((function(I){Object.defineProperty(A,I,Object.getOwnPropertyDescriptor(g,I))}))}return A}const $=function(A,I,g,B,Q,C){const E=(new Date).getTime();let i,o=null;switch(I){case\\\"1.2.840.10008.1.2\\\":case\\\"1.2.840.10008.1.2.1\\\":case\\\"1.2.840.10008.1.2.1.99\\\":o=K(A,g);break;case\\\"1.2.840.10008.1.2.2\\\":o=M(A,g);break;case\\\"1.2.840.10008.1.2.5\\\":o=L(A,g);break;case\\\"1.2.840.10008.1.2.4.50\\\":i=_({},A),o=u(g,i);break;case\\\"1.2.840.10008.1.2.4.51\\\":o=W(A,g);break;case\\\"1.2.840.10008.1.2.4.57\\\":case\\\"1.2.840.10008.1.2.4.70\\\":o=m(A,g);break;case\\\"1.2.840.10008.1.2.4.80\\\":i=_({signed:1===A.pixelRepresentation,bytesPerPixel:A.bitsAllocated<=8?1:2},A),o=e(g,i);break;case\\\"1.2.840.10008.1.2.4.81\\\":i=_({signed:!1,bytesPerPixel:A.bitsAllocated<=8?1:2},A),o=e(g,i);break;case\\\"1.2.840.10008.1.2.4.90\\\":case\\\"1.2.840.10008.1.2.4.91\\\":i=_({},A),o=N(g,i);break;case\\\"3.2.840.10008.1.2.4.96\\\":i=_({},A),o=P(g,i);break;default:throw new Error(`no decoder for transfer syntax ${I}`)}if(!o)throw new Error(\\\"decodePromise not defined\\\");o.then((A=>{C(function(A,I,g){const B=void 0!==A.pixelRepresentation&&1===A.pixelRepresentation,Q=B&&void 0!==A.bitsStored?32-A.bitsStored:void 0;if(B&&void 0!==Q)for(let I=0;I<A.pixelData.length;I++)A.pixelData[I]=A.pixelData[I]<<Q>>Q;let C=A.pixelData;if(A.pixelDataLength=A.pixelData.length,I.targetBuffer){let g,B;({offset:g,length:B}=I.targetBuffer);const{arrayBuffer:Q,type:E}=I.targetBuffer;let i;switch(null==g&&(g=0),null==B&&0!==g?B=A.pixelDataLength-g:null==B&&(B=A.pixelDataLength),E){case\\\"Uint8Array\\\":i=Uint8Array;break;case\\\"Uint16Array\\\":i=Uint16Array;break;case\\\"Float32Array\\\":i=Float32Array;break;default:throw new Error(\\\"target array for image does not have a valid type.\\\")}const o=A.pixelData;if(B!==o.length)throw new Error(\\\"target array for image does not have the same length as the decoded image length.\\\");let D;D=Q?new i(Q,g,B):new i(B),D.set(o,0),C=D}if(I.preScale.enabled){const g=I.preScale.scalingParameters;if(!g)throw new Error(\\\"options.preScale.scalingParameters must be defined if preScale.enabled is true, and scalingParameters cannot be derived from the metadata providers.\\\");const{rescaleSlope:B,rescaleIntercept:Q}=g;\\\"number\\\"==typeof B&&\\\"number\\\"==typeof Q&&function(A,I){const g=A.length,{rescaleSlope:B,rescaleIntercept:Q,suvbw:C}=I;if(\\\"PT\\\"===I.modality){if(\\\"number\\\"!=typeof C)return;for(let I=0;I<g;I++)A[I]=C*(A[I]*B+Q)}else for(let I=0;I<g;I++)A[I]=A[I]*B+Q;return!0}(C,g)&&(A.preScale=_(_({},I.preScale),{},{scaled:!0}))}I.targetBuffer&&(!I.targetBuffer.arrayBuffer||I.targetBuffer.arrayBuffer instanceof ArrayBuffer)&&(A.pixelData=C);const E=(new Date).getTime();return A.decodeTimeInMS=E-g,A}(A,Q,E))})).catch((A=>{throw A}))};let AA;function IA(A){A.decodeTask.initializeCodecsOnStartup&&(c(A.decodeTask),Y(A.decodeTask))}const gA={taskType:\\\"decodeTask\\\",handler:function(A,I){IA(AA);const g=AA&&AA.decodeTask&&AA.decodeTask.strict,B=new Uint8Array(A.data.pixelData);$(A.data.imageFrame,A.data.transferSyntax,B,AA.decodeTask,A.data.options,(function(A){if(!A.pixelData)throw new Error(\\\"decodeTask: imageFrame.pixelData is undefined after decoding\\\");!function(A){let I=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const g=H(A.pixelData),B=!(J(A.smallestPixelValue)&&J(A.largestPixelValue));!0!==I||B?(A.smallestPixelValue=g.min,A.largestPixelValue=g.max):(A.smallestPixelValue!==g.min&&console.warn(\\\"Image smallestPixelValue tag is incorrect. Rendering performance will suffer considerably.\\\"),A.largestPixelValue!==g.max&&console.warn(\\\"Image largestPixelValue tag is incorrect. Rendering performance will suffer considerably.\\\"))}(A,g),A.pixelData=A.pixelData.buffer,I(A,[A.pixelData])}))},initialize:function(A){AA=A,IA(A)}};B(gA)})()})();\\n//# sourceMappingURL=index.worker.bundle.min.worker.js.map\", \"Worker\", undefined, __webpack_public_path__ + \"index.worker.bundle.min.worker.js\");\n}\n","// Not sure why but webpack isn't splitting this out unless we explicitly use worker-loader!\n// eslint-disable-next-line\n// import cornerstoneWADOImageLoaderWebWorker from 'worker-loader!../webWorker/index.worker.js';\nimport cornerstoneWADOImageLoaderWebWorker from '../webWorker/index.worker.js';\n\n// This is for the Webpack 5 approch but it's currently broken\n// so we will continue relying on worker-loader for now\n// https://github.com/webpack/webpack/issues/13899\n/* const cornerstoneWADOImageLoaderWebWorkerPath = new URL(\n  '../webWorker/index.js',\n  import.meta.url\n);*/\n\nimport { getOptions } from './internal/options.js';\n\n// the taskId to assign to the next task added via addTask()\nlet nextTaskId = 0;\n\n// array of queued tasks sorted with highest priority task first\nconst tasks = [];\n\n// array of web workers to dispatch decode tasks to\nconst webWorkers = [];\n\n// The options for CornerstoneWADOImageLoader\nconst options = getOptions();\n\nconst defaultConfig = {\n  maxWebWorkers: navigator.hardwareConcurrency || 1,\n  startWebWorkersOnDemand: true,\n  webWorkerTaskPaths: [],\n  taskConfiguration: {\n    decodeTask: {\n      initializeCodecsOnStartup: false,\n      strict: options.strict,\n    },\n  },\n};\n\nlet config;\n\nconst statistics = {\n  maxWebWorkers: 0,\n  numWebWorkers: 0,\n  numTasksQueued: 0,\n  numTasksExecuting: 0,\n  numTasksCompleted: 0,\n  totalTaskTimeInMS: 0,\n  totalTimeDelayedInMS: 0,\n};\n\n/**\n * Function to start a task on a web worker\n */\nfunction startTaskOnWebWorker() {\n  // return immediately if no decode tasks to do\n  if (!tasks.length) {\n    return;\n  }\n\n  // look for a web worker that is ready\n  for (let i = 0; i < webWorkers.length; i++) {\n    if (webWorkers[i].status === 'ready') {\n      // mark it as busy so tasks are not assigned to it\n      webWorkers[i].status = 'busy';\n\n      // get the highest priority task\n      const task = tasks.shift();\n\n      task.start = new Date().getTime();\n\n      // update stats with how long this task was delayed (waiting in queue)\n      const end = new Date().getTime();\n\n      statistics.totalTimeDelayedInMS += end - task.added;\n\n      // assign this task to this web worker and send the web worker\n      // a message to execute it\n      webWorkers[i].task = task;\n      webWorkers[i].worker.postMessage(\n        {\n          taskType: task.taskType,\n          workerIndex: i,\n          data: task.data,\n        },\n        task.transferList\n      );\n      statistics.numTasksExecuting++;\n\n      return;\n    }\n  }\n\n  // if no available web workers and we haven't started max web workers, start a new one\n  if (webWorkers.length < config.maxWebWorkers) {\n    spawnWebWorker();\n  }\n}\n\n/**\n * Function to handle a message from a web worker\n * @param msg\n */\nfunction handleMessageFromWorker(msg) {\n  // console.log('handleMessageFromWorker', msg.data);\n  if (msg.data.taskType === 'initialize') {\n    webWorkers[msg.data.workerIndex].status = 'ready';\n    startTaskOnWebWorker();\n  } else {\n    const start = webWorkers[msg.data.workerIndex].task.start;\n\n    const action = msg.data.status === 'success' ? 'resolve' : 'reject';\n\n    webWorkers[msg.data.workerIndex].task.deferred[action](msg.data.result);\n\n    webWorkers[msg.data.workerIndex].task = undefined;\n\n    statistics.numTasksExecuting--;\n    webWorkers[msg.data.workerIndex].status = 'ready';\n    statistics.numTasksCompleted++;\n\n    const end = new Date().getTime();\n\n    statistics.totalTaskTimeInMS += end - start;\n\n    startTaskOnWebWorker();\n  }\n}\n\n/**\n * Spawns a new web worker\n */\nfunction spawnWebWorker() {\n  // prevent exceeding maxWebWorkers\n  if (webWorkers.length >= config.maxWebWorkers) {\n    return;\n  }\n\n  // spawn the webworker\n  const worker = new cornerstoneWADOImageLoaderWebWorker();\n\n  // This is for the Webpack 5 approach but it's currently broken\n  /* const worker = new Worker(cornerstoneWADOImageLoaderWebWorkerPath, {\n    name: `cornerstoneWADOImageLoaderWebWorkerPath-${webWorkers.length + 1}`,\n    type: 'module',\n  });*/\n\n  // const worker = new Worker(\n  //   './cornerstoneWADOImageLoaderWebWorker.bundle.min.js',\n  //   {\n  //     name: `cornerstoneWADOImageLoaderWebWorkerPath-${webWorkers.length + 1}`,\n  //   }\n  // );\n\n  webWorkers.push({\n    worker,\n    status: 'initializing',\n  });\n  worker.addEventListener('message', handleMessageFromWorker);\n  worker.postMessage({\n    taskType: 'initialize',\n    workerIndex: webWorkers.length - 1,\n    config,\n  });\n}\n\n/**\n * Initialization function for the web worker manager - spawns web workers\n * @param configObject\n */\nfunction initialize(configObject) {\n  configObject = configObject || defaultConfig;\n\n  // prevent being initialized more than once\n  if (config) {\n    // throw new Error('WebWorkerManager already initialized');\n  }\n\n  config = configObject;\n\n  config.maxWebWorkers =\n    config.maxWebWorkers || navigator.hardwareConcurrency || 1;\n\n  // Spawn new web workers\n  if (!config.startWebWorkersOnDemand) {\n    for (let i = 0; i < config.maxWebWorkers; i++) {\n      spawnWebWorker();\n    }\n  }\n}\n\n/**\n * Terminate all running web workers.\n */\nfunction terminate() {\n  for (let i = 0; i < webWorkers.length; i++) {\n    webWorkers[i].worker.terminate();\n  }\n  webWorkers.length = 0;\n  config = undefined;\n}\n\n/**\n * dynamically loads a web worker task\n * @param sourcePath\n * @param taskConfig\n */\nfunction loadWebWorkerTask(sourcePath, taskConfig) {\n  // add it to the list of web worker tasks paths so on demand web workers\n  // load this properly\n  config.webWorkerTaskPaths.push(sourcePath);\n\n  // if a task specific configuration is provided, merge it into the config\n  if (taskConfig) {\n    config.taskConfiguration = Object.assign(\n      config.taskConfiguration,\n      taskConfig\n    );\n  }\n\n  // tell each spawned web worker to load this task\n  for (let i = 0; i < webWorkers.length; i++) {\n    webWorkers[i].worker.postMessage({\n      taskType: 'loadWebWorkerTask',\n      workerIndex: webWorkers.length - 1,\n      sourcePath,\n      config,\n    });\n  }\n}\n\n/**\n * Function to add a decode task to be performed\n *\n * @param taskType - the taskType for this task\n * @param data - data specific to the task\n * @param priority - optional priority of the task (defaults to 0), > 0 is higher, < 0 is lower\n * @param transferList - optional array of data to transfer to web worker\n * @returns {*}\n */\nfunction addTask(taskType, data, priority = 0, transferList) {\n  if (!config) {\n    initialize();\n  }\n\n  let deferred = {};\n  const promise = new Promise((resolve, reject) => {\n    deferred = {\n      resolve,\n      reject,\n    };\n  });\n\n  // find the right spot to insert this decode task (based on priority)\n  let i;\n\n  for (i = 0; i < tasks.length; i++) {\n    if (tasks[i].priority < priority) {\n      break;\n    }\n  }\n\n  const taskId = nextTaskId++;\n\n  // insert the decode task at position i\n  tasks.splice(i, 0, {\n    taskId,\n    taskType,\n    status: 'ready',\n    added: new Date().getTime(),\n    data,\n    deferred,\n    priority,\n    transferList,\n  });\n\n  // try to start a task on the web worker since we just added a new task and a web worker may be available\n  startTaskOnWebWorker();\n\n  return {\n    taskId,\n    promise,\n  };\n}\n\n/**\n * Changes the priority of a queued task\n * @param taskId - the taskId to change the priority of\n * @param priority - priority of the task (defaults to 0), > 0 is higher, < 0 is lower\n * @returns boolean - true on success, false if taskId not found\n */\nfunction setTaskPriority(taskId, priority = 0) {\n  // search for this taskId\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].taskId === taskId) {\n      // taskId found, remove it\n      const task = tasks.splice(i, 1)[0];\n\n      // set its priority\n      task.priority = priority;\n\n      // find the right spot to insert this decode task (based on priority)\n      for (i = 0; i < tasks.length; i++) {\n        if (tasks[i].priority < priority) {\n          break;\n        }\n      }\n\n      // insert the decode task at position i\n      tasks.splice(i, 0, task);\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Cancels a queued task and rejects\n * @param taskId - the taskId to cancel\n * @param reason - optional reason the task was rejected\n * @returns boolean - true on success, false if taskId not found\n */\nfunction cancelTask(taskId, reason) {\n  // search for this taskId\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].taskId === taskId) {\n      // taskId found, remove it\n      const task = tasks.splice(i, 1);\n\n      task.deferred.reject(reason);\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Function to return the statistics on running web workers\n * @returns object containing statistics\n */\nfunction getStatistics() {\n  statistics.maxWebWorkers = config.maxWebWorkers;\n  statistics.numWebWorkers = webWorkers.length;\n  statistics.numTasksQueued = tasks.length;\n\n  return statistics;\n}\n\nexport default {\n  initialize,\n  loadWebWorkerTask,\n  addTask,\n  getStatistics,\n  setTaskPriority,\n  cancelTask,\n  webWorkers,\n  terminate,\n};\n","/**\n * Calculate the minimum and maximum values in an Array\n *\n * @param {Number[]} storedPixelData\n * @return {{min: Number, max: Number}}\n */\nfunction getMinMax(storedPixelData) {\n  // we always calculate the min max values since they are not always\n  // present in DICOM and we don't want to trust them anyway as cornerstone\n  // depends on us providing reliable values for these\n  let min = storedPixelData[0];\n\n  let max = storedPixelData[0];\n\n  let storedPixel;\n  const numPixels = storedPixelData.length;\n\n  for (let index = 1; index < numPixels; index++) {\n    storedPixel = storedPixelData[index];\n    min = Math.min(min, storedPixel);\n    max = Math.max(max, storedPixel);\n  }\n\n  return {\n    min,\n    max,\n  };\n}\n\nexport default getMinMax;\n","import getMinMax from '../shared/getMinMax.js';\n\n/**\n * Special decoder for 8 bit jpeg that leverages the browser's built in JPEG decoder for increased performance\n */\n\nfunction arrayBufferToString(buffer) {\n  return binaryToString(\n    String.fromCharCode.apply(\n      null,\n      Array.prototype.slice.apply(new Uint8Array(buffer))\n    )\n  );\n}\n\nfunction binaryToString(binary) {\n  let error;\n\n  try {\n    return decodeURIComponent(escape(binary));\n  } catch (_error) {\n    error = _error;\n    if (error instanceof URIError) {\n      return binary;\n    }\n    throw error;\n  }\n}\n\nfunction decodeJPEGBaseline8BitColor(imageFrame, pixelData, canvas) {\n  const start = new Date().getTime();\n  const imgBlob = new Blob([pixelData], { type: 'image/jpeg' });\n\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    if (fileReader.readAsBinaryString === undefined) {\n      fileReader.readAsArrayBuffer(imgBlob);\n    } else {\n      fileReader.readAsBinaryString(imgBlob); // doesn't work on IE11\n    }\n\n    fileReader.onload = function () {\n      const img = new Image();\n\n      img.onload = function () {\n        canvas.height = img.height;\n        canvas.width = img.width;\n        imageFrame.rows = img.height;\n        imageFrame.columns = img.width;\n        const context = canvas.getContext('2d');\n\n        context.drawImage(this, 0, 0);\n        const imageData = context.getImageData(0, 0, img.width, img.height);\n        const end = new Date().getTime();\n\n        imageFrame.pixelData = imageData.data;\n        imageFrame.imageData = imageData;\n        imageFrame.decodeTimeInMS = end - start;\n\n        // calculate smallest and largest PixelValue\n        const minMax = getMinMax(imageFrame.pixelData);\n\n        imageFrame.smallestPixelValue = minMax.min;\n        imageFrame.largestPixelValue = minMax.max;\n\n        resolve(imageFrame);\n      };\n\n      img.onerror = function (error) {\n        reject(error);\n      };\n\n      if (fileReader.readAsBinaryString === undefined) {\n        img.src = `data:image/jpeg;base64,${window.btoa(\n          arrayBufferToString(fileReader.result)\n        )}`;\n      } else {\n        img.src = `data:image/jpeg;base64,${window.btoa(fileReader.result)}`; // doesn't work on IE11\n      }\n    };\n\n    fileReader.onerror = (e) => {\n      reject(e);\n    };\n  });\n}\n\nexport default decodeJPEGBaseline8BitColor;\n","import webWorkerManager from './webWorkerManager.js';\nimport decodeJPEGBaseline8BitColor from './decodeJPEGBaseline8BitColor.js';\n\n// dicomParser requires pako for browser-side decoding of deflate transfer syntax\n// We only need one function though, so lets import that so we don't make our bundle\n// too large.\nimport { inflateRaw } from 'pako/lib/inflate.js';\n\nwindow.pako = { inflateRaw };\n\nfunction processDecodeTask(imageFrame, transferSyntax, pixelData, options) {\n  const priority = options.priority || undefined;\n  const transferList = options.transferPixelData\n    ? [pixelData.buffer]\n    : undefined;\n\n  return webWorkerManager.addTask(\n    'decodeTask',\n    {\n      imageFrame,\n      transferSyntax,\n      pixelData,\n      options,\n    },\n    priority,\n    transferList\n  ).promise;\n}\n\nfunction decodeImageFrame(\n  imageFrame,\n  transferSyntax,\n  pixelData,\n  canvas,\n  options = {}\n) {\n  switch (transferSyntax) {\n    case '1.2.840.10008.1.2':\n      // Implicit VR Little Endian\n      return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n    case '1.2.840.10008.1.2.1':\n      // Explicit VR Little Endian\n      return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n    case '1.2.840.10008.1.2.2':\n      // Explicit VR Big Endian (retired)\n      return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n    case '1.2.840.10008.1.2.1.99':\n      // Deflate transfer syntax (deflated by dicomParser)\n      return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n    case '1.2.840.10008.1.2.5':\n      // RLE Lossless\n      return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n    case '1.2.840.10008.1.2.4.50':\n      // JPEG Baseline lossy process 1 (8 bit)\n\n      // Handle 8-bit JPEG Baseline color images using the browser's built-in\n      // JPEG decoding\n      if (\n        imageFrame.bitsAllocated === 8 &&\n        (imageFrame.samplesPerPixel === 3 || imageFrame.samplesPerPixel === 4)\n      ) {\n        return decodeJPEGBaseline8BitColor(imageFrame, pixelData, canvas);\n      }\n\n      return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n    case '1.2.840.10008.1.2.4.51':\n      // JPEG Baseline lossy process 2 & 4 (12 bit)\n      return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n    case '1.2.840.10008.1.2.4.57':\n      // JPEG Lossless, Nonhierarchical (Processes 14)\n      return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n    case '1.2.840.10008.1.2.4.70':\n      // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\n      return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n    case '1.2.840.10008.1.2.4.80':\n      // JPEG-LS Lossless Image Compression\n      return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n    case '1.2.840.10008.1.2.4.81':\n      // JPEG-LS Lossy (Near-Lossless) Image Compression\n      return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n    case '1.2.840.10008.1.2.4.90':\n      // JPEG 2000 Lossless\n      return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n    case '1.2.840.10008.1.2.4.91':\n      // JPEG 2000 Lossy\n      return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n\n    case '3.2.840.10008.1.2.4.96':\n      // HTJ2K\n      return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  }\n\n  /* Don't know if these work...\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\n   {\n   return cornerstoneWADOImageLoader.decodeJPEG2000(dataSet, frame);\n   }\n   // JPEG 2000 Part 2 Multicomponent Image Compression\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\n   {\n   return cornerstoneWADOImageLoader.decodeJPEG2000(dataSet, frame);\n   }\n   */\n\n  return Promise.reject(\n    new Error(`No decoder for transfer syntax ${transferSyntax}`)\n  );\n}\n\nexport default decodeImageFrame;\n","export default function (photoMetricInterpretation) {\n  return (\n    photoMetricInterpretation === 'RGB' ||\n    photoMetricInterpretation === 'PALETTE COLOR' ||\n    photoMetricInterpretation === 'YBR_FULL' ||\n    photoMetricInterpretation === 'YBR_FULL_422' ||\n    photoMetricInterpretation === 'YBR_PARTIAL_422' ||\n    photoMetricInterpretation === 'YBR_PARTIAL_420' ||\n    photoMetricInterpretation === 'YBR_RCT' ||\n    photoMetricInterpretation === 'YBR_ICT'\n  );\n}\n","import {\n  convertRGBColorByPixel,\n  convertRGBColorByPlane,\n  convertYBRFullByPixel,\n  convertYBRFull422ByPixel,\n  convertYBRFullByPlane,\n  convertPALETTECOLOR,\n} from './colorSpaceConverters/index.js';\n\nfunction convertRGB(imageFrame, colorBuffer, useRGBA) {\n  if (imageFrame.planarConfiguration === 0) {\n    convertRGBColorByPixel(imageFrame.pixelData, colorBuffer, useRGBA);\n  } else {\n    convertRGBColorByPlane(imageFrame.pixelData, colorBuffer, useRGBA);\n  }\n}\n\nfunction convertYBRFull(imageFrame, colorBuffer, useRGBA) {\n  if (imageFrame.planarConfiguration === 0) {\n    convertYBRFullByPixel(imageFrame.pixelData, colorBuffer, useRGBA);\n  } else {\n    convertYBRFullByPlane(imageFrame.pixelData, colorBuffer, useRGBA);\n  }\n}\n\nexport default function convertColorSpace(imageFrame, colorBuffer, useRGBA) {\n  // convert based on the photometric interpretation\n  if (imageFrame.photometricInterpretation === 'RGB') {\n    convertRGB(imageFrame, colorBuffer, useRGBA);\n  } else if (imageFrame.photometricInterpretation === 'YBR_RCT') {\n    convertRGB(imageFrame, colorBuffer, useRGBA);\n  } else if (imageFrame.photometricInterpretation === 'YBR_ICT') {\n    convertRGB(imageFrame, colorBuffer, useRGBA);\n  } else if (imageFrame.photometricInterpretation === 'PALETTE COLOR') {\n    convertPALETTECOLOR(imageFrame, colorBuffer, useRGBA);\n  } else if (imageFrame.photometricInterpretation === 'YBR_FULL_422') {\n    convertYBRFull422ByPixel(imageFrame.pixelData, colorBuffer, useRGBA);\n  } else if (imageFrame.photometricInterpretation === 'YBR_FULL') {\n    convertYBRFull(imageFrame, colorBuffer, useRGBA);\n  } else {\n    throw new Error(\n      `No color space conversion for photometric interpretation ${imageFrame.photometricInterpretation}`\n    );\n  }\n}\n","export default function (imageFrame, colorBuffer, useRGBA) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: ybrBuffer must not be undefined');\n  }\n  if (imageFrame.length % 2 !== 0) {\n    throw new Error('decodeRGB: ybrBuffer length must be divisble by 3');\n  }\n\n  const numPixels = imageFrame.length / 2;\n\n  let ybrIndex = 0;\n\n  let bufferIndex = 0;\n\n  if (useRGBA) {\n    for (let i = 0; i < numPixels; i += 2) {\n      const y1 = imageFrame[ybrIndex++];\n      const y2 = imageFrame[ybrIndex++];\n      const cb = imageFrame[ybrIndex++];\n      const cr = imageFrame[ybrIndex++];\n\n      colorBuffer[bufferIndex++] = y1 + 1.402 * (cr - 128); // red\n      colorBuffer[bufferIndex++] =\n        y1 - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n      colorBuffer[bufferIndex++] = y1 + 1.772 * (cb - 128); // blue\n      colorBuffer[bufferIndex++] = 255; // alpha\n\n      colorBuffer[bufferIndex++] = y2 + 1.402 * (cr - 128); // red\n      colorBuffer[bufferIndex++] =\n        y2 - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n      colorBuffer[bufferIndex++] = y2 + 1.772 * (cb - 128); // blue\n      colorBuffer[bufferIndex++] = 255; // alpha\n    }\n\n    return;\n  }\n\n  for (let i = 0; i < numPixels; i += 2) {\n    const y1 = imageFrame[ybrIndex++];\n    const y2 = imageFrame[ybrIndex++];\n    const cb = imageFrame[ybrIndex++];\n    const cr = imageFrame[ybrIndex++];\n\n    colorBuffer[bufferIndex++] = y1 + 1.402 * (cr - 128); // red\n    colorBuffer[bufferIndex++] =\n      y1 - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n    colorBuffer[bufferIndex++] = y1 + 1.772 * (cb - 128); // blue\n\n    colorBuffer[bufferIndex++] = y2 + 1.402 * (cr - 128); // red\n    colorBuffer[bufferIndex++] =\n      y2 - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n    colorBuffer[bufferIndex++] = y2 + 1.772 * (cb - 128); // blue\n  }\n}\n","function isJPEGBaseline8BitColor(imageFrame, transferSyntax) {\n  transferSyntax = transferSyntax || imageFrame.transferSyntax;\n\n  if (\n    imageFrame.bitsAllocated === 8 &&\n    transferSyntax === '1.2.840.10008.1.2.4.50' &&\n    (imageFrame.samplesPerPixel === 3 || imageFrame.samplesPerPixel === 4)\n  ) {\n    return true;\n  }\n}\n\nexport default isJPEGBaseline8BitColor;\n","import external from '../externalModules.js';\nimport getImageFrame from './getImageFrame.js';\nimport decodeImageFrame from './decodeImageFrame.js';\nimport isColorImageFn from './isColorImage.js';\nimport convertColorSpace from './convertColorSpace.js';\nimport getMinMax from '../shared/getMinMax.js';\nimport isJPEGBaseline8BitColor from './isJPEGBaseline8BitColor.js';\nimport { getOptions } from './internal/options.js';\nimport getScalingParameters from './getScalingParameters.js';\n\nlet lastImageIdDrawn = '';\n\nfunction isModalityLUTForDisplay(sopClassUid) {\n  // special case for XA and XRF\n  // https://groups.google.com/forum/#!searchin/comp.protocols.dicom/Modality$20LUT$20XA/comp.protocols.dicom/UBxhOZ2anJ0/D0R_QP8V2wIJ\n  return (\n    sopClassUid !== '1.2.840.10008.5.1.4.1.1.12.1' && // XA\n    sopClassUid !== '1.2.840.10008.5.1.4.1.1.12.2.1'\n  ); // XRF\n}\n\nfunction convertToIntPixelData(floatPixelData) {\n  const floatMinMax = getMinMax(floatPixelData);\n  const floatRange = Math.abs(floatMinMax.max - floatMinMax.min);\n  const intRange = 65535;\n  const slope = floatRange / intRange;\n  const intercept = floatMinMax.min;\n  const numPixels = floatPixelData.length;\n  const intPixelData = new Uint16Array(numPixels);\n\n  let min = 65535;\n\n  let max = 0;\n\n  for (let i = 0; i < numPixels; i++) {\n    const rescaledPixel = Math.floor((floatPixelData[i] - intercept) / slope);\n\n    intPixelData[i] = rescaledPixel;\n    min = Math.min(min, rescaledPixel);\n    max = Math.max(max, rescaledPixel);\n  }\n\n  return {\n    min,\n    max,\n    intPixelData,\n    slope,\n    intercept,\n  };\n}\n\n/**\n * Helper function to set pixel data to the right typed array.  This is needed because web workers\n * can transfer array buffers but not typed arrays\n * @param imageFrame\n */\nfunction setPixelDataType(imageFrame) {\n  if (imageFrame.bitsAllocated === 32) {\n    imageFrame.pixelData = new Float32Array(imageFrame.pixelData);\n  } else if (imageFrame.bitsAllocated === 16) {\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(imageFrame.pixelData);\n    } else {\n      imageFrame.pixelData = new Int16Array(imageFrame.pixelData);\n    }\n  } else {\n    imageFrame.pixelData = new Uint8Array(imageFrame.pixelData);\n  }\n}\n\n/**\n * Removes the A from RGBA to return RGB buffer, this is used when the\n * decoding happens with browser API which results in RGBA, but if useRGBA flag\n * is set to false, we want to return RGB\n *\n * @param imageFrame - decoded image in RGBA\n * @param targetBuffer - target buffer to write to\n */\nfunction removeAFromRGBA(imageFrame, targetBuffer) {\n  const numPixels = imageFrame.length / 4;\n\n  let rgbIndex = 0;\n\n  let bufferIndex = 0;\n\n  for (let i = 0; i < numPixels; i++) {\n    targetBuffer[bufferIndex++] = imageFrame[rgbIndex++]; // red\n    targetBuffer[bufferIndex++] = imageFrame[rgbIndex++]; // green\n    targetBuffer[bufferIndex++] = imageFrame[rgbIndex++]; // blue\n    rgbIndex++; // skip alpha\n  }\n\n  return targetBuffer;\n}\n\nfunction createImage(imageId, pixelData, transferSyntax, options = {}) {\n  // whether to use RGBA for color images, default true as cs-legacy uses RGBA\n  // but we don't need RGBA in cs3d, and it's faster, and memory-efficient\n  // in cs3d\n  let useRGBA = true;\n\n  if (options.useRGBA !== undefined) {\n    useRGBA = options.useRGBA;\n  }\n\n  // always preScale the pixel array unless it is asked not to\n  options.preScale = {\n    enabled:\n      options.preScale && options.preScale.enabled !== undefined\n        ? options.preScale.enabled\n        : false,\n  };\n\n  if (!pixelData || !pixelData.length) {\n    return Promise.reject(new Error('The file does not contain image data.'));\n  }\n\n  const { cornerstone } = external;\n  const canvas = document.createElement('canvas');\n  const imageFrame = getImageFrame(imageId);\n\n  // Get the scaling parameters from the metadata\n  if (options.preScale.enabled) {\n    const scalingParameters = getScalingParameters(\n      cornerstone.metaData,\n      imageId\n    );\n\n    if (scalingParameters) {\n      options.preScale = {\n        ...options.preScale,\n        scalingParameters,\n      };\n    }\n  }\n  const decodePromise = decodeImageFrame(\n    imageFrame,\n    transferSyntax,\n    pixelData,\n    canvas,\n    options\n  );\n\n  const { decodeConfig } = getOptions();\n  const { convertFloatPixelDataToInt } = decodeConfig;\n\n  return new Promise((resolve, reject) => {\n    // eslint-disable-next-line complexity\n    decodePromise.then(function (imageFrame) {\n      // If we have a target buffer that was written to in the\n      // Decode task, point the image to it here.\n      // We can't have done it within the thread incase it was a SharedArrayBuffer.\n      let alreadyTyped = false;\n\n      if (options.targetBuffer) {\n        let offset, length;\n        // If we have a target buffer, write to that instead. This helps reduce memory duplication.\n\n        ({ offset, length } = options.targetBuffer);\n        const { arrayBuffer, type } = options.targetBuffer;\n\n        let TypedArrayConstructor;\n\n        if (length === null || length === undefined) {\n          length = imageFrame.pixelDataLength;\n        }\n\n        if (offset === null || offset === undefined) {\n          offset = 0;\n        }\n\n        switch (type) {\n          case 'Uint8Array':\n            TypedArrayConstructor = Uint8Array;\n            break;\n          case 'Uint16Array':\n            TypedArrayConstructor = Uint16Array;\n            break;\n          case 'Float32Array':\n            TypedArrayConstructor = Float32Array;\n            break;\n          default:\n            throw new Error(\n              'target array for image does not have a valid type.'\n            );\n        }\n\n        if (length !== imageFrame.pixelDataLength) {\n          throw new Error(\n            'target array for image does not have the same length as the decoded image length.'\n          );\n        }\n\n        // TypedArray.Set is api level and ~50x faster than copying elements even for\n        // Arrays of different types, which aren't simply memcpy ops.\n        let typedArray;\n\n        if (arrayBuffer) {\n          typedArray = new TypedArrayConstructor(arrayBuffer, offset, length);\n        } else {\n          typedArray = new TypedArrayConstructor(imageFrame.pixelData);\n        }\n\n        // If need to scale, need to scale correct array.\n        imageFrame.pixelData = typedArray;\n        alreadyTyped = true;\n      }\n\n      if (!alreadyTyped) {\n        setPixelDataType(imageFrame);\n      }\n\n      const imagePlaneModule =\n        cornerstone.metaData.get('imagePlaneModule', imageId) || {};\n      const voiLutModule =\n        cornerstone.metaData.get('voiLutModule', imageId) || {};\n      const modalityLutModule =\n        cornerstone.metaData.get('modalityLutModule', imageId) || {};\n      const sopCommonModule =\n        cornerstone.metaData.get('sopCommonModule', imageId) || {};\n      const isColorImage = isColorImageFn(imageFrame.photometricInterpretation);\n\n      if (isColorImage) {\n        if (useRGBA) {\n          // JPEGBaseline (8 bits) is already returning the pixel data in the right format (rgba)\n          // because it's using a canvas to load and decode images.\n          if (!isJPEGBaseline8BitColor(imageFrame, transferSyntax)) {\n            canvas.height = imageFrame.rows;\n            canvas.width = imageFrame.columns;\n\n            const context = canvas.getContext('2d');\n\n            const imageData = context.createImageData(\n              imageFrame.columns,\n              imageFrame.rows\n            );\n\n            convertColorSpace(imageFrame, imageData.data, useRGBA);\n\n            imageFrame.imageData = imageData;\n            imageFrame.pixelData = imageData.data;\n          }\n        } else if (isJPEGBaseline8BitColor(imageFrame, transferSyntax)) {\n          // If we don't need the RGBA but the decoding is done with RGBA (the case\n          // for JPEG Baseline 8 bit color), AND the option specifies to use RGB (no RGBA)\n          // we need to remove the A channel from pixel data\n          const colorBuffer = new Uint8ClampedArray(\n            (imageFrame.pixelData.length / 4) * 3\n          );\n\n          // remove the A from the RGBA of the imageFrame\n          imageFrame.pixelData = removeAFromRGBA(\n            imageFrame.pixelData,\n            colorBuffer\n          );\n        } else if (imageFrame.photometricInterpretation === 'PALETTE COLOR') {\n          canvas.height = imageFrame.rows;\n          canvas.width = imageFrame.columns;\n\n          const context = canvas.getContext('2d');\n\n          const imageData = context.createImageData(\n            imageFrame.columns,\n            imageFrame.rows\n          );\n\n          convertColorSpace(imageFrame, imageData.data, true);\n\n          const colorBuffer = new imageData.data.constructor(\n            (imageData.data.length / 4) * 3\n          );\n\n          // remove the A from the RGBA of the imageFrame\n          imageFrame.pixelData = removeAFromRGBA(imageData.data, colorBuffer);\n        }\n\n        // calculate smallest and largest PixelValue of the converted pixelData\n        const minMax = getMinMax(imageFrame.pixelData);\n\n        imageFrame.smallestPixelValue = minMax.min;\n        imageFrame.largestPixelValue = minMax.max;\n      }\n\n      const image = {\n        imageId,\n        color: isColorImage,\n        columnPixelSpacing: imagePlaneModule.columnPixelSpacing,\n        columns: imageFrame.columns,\n        height: imageFrame.rows,\n        preScale: imageFrame.preScale,\n        intercept: modalityLutModule.rescaleIntercept\n          ? modalityLutModule.rescaleIntercept\n          : 0,\n        slope: modalityLutModule.rescaleSlope\n          ? modalityLutModule.rescaleSlope\n          : 1,\n        invert: imageFrame.photometricInterpretation === 'MONOCHROME1',\n        minPixelValue: imageFrame.smallestPixelValue,\n        maxPixelValue: imageFrame.largestPixelValue,\n        rowPixelSpacing: imagePlaneModule.rowPixelSpacing,\n        rows: imageFrame.rows,\n        sizeInBytes: imageFrame.pixelData.byteLength,\n        width: imageFrame.columns,\n        windowCenter: voiLutModule.windowCenter\n          ? voiLutModule.windowCenter[0]\n          : undefined,\n        windowWidth: voiLutModule.windowWidth\n          ? voiLutModule.windowWidth[0]\n          : undefined,\n        voiLUTFunction: voiLutModule.voiLUTFunction\n          ? voiLutModule.voiLUTFunction\n          : undefined,\n        decodeTimeInMS: imageFrame.decodeTimeInMS,\n        floatPixelData: undefined,\n        imageFrame,\n        rgba: isColorImage && useRGBA,\n      };\n\n      // If pixel data is intrinsically floating 32 array, we convert it to int for\n      // display in cornerstone. For other cases when pixel data is typed as\n      // Float32Array for scaling; this conversion is not needed.\n      if (\n        imageFrame.pixelData instanceof Float32Array &&\n        convertFloatPixelDataToInt\n      ) {\n        const floatPixelData = imageFrame.pixelData;\n        const results = convertToIntPixelData(floatPixelData);\n\n        image.minPixelValue = results.min;\n        image.maxPixelValue = results.max;\n        image.slope = results.slope;\n        image.intercept = results.intercept;\n        image.floatPixelData = floatPixelData;\n        image.getPixelData = () => results.intPixelData;\n      } else {\n        image.getPixelData = () => imageFrame.pixelData;\n      }\n\n      if (image.color) {\n        image.getCanvas = function () {\n          if (lastImageIdDrawn === imageId) {\n            return canvas;\n          }\n\n          canvas.height = image.rows;\n          canvas.width = image.columns;\n          const context = canvas.getContext('2d');\n\n          context.putImageData(imageFrame.imageData, 0, 0);\n          lastImageIdDrawn = imageId;\n\n          return canvas;\n        };\n      }\n\n      // Modality LUT\n      if (\n        modalityLutModule.modalityLUTSequence &&\n        modalityLutModule.modalityLUTSequence.length > 0 &&\n        isModalityLUTForDisplay(sopCommonModule.sopClassUID)\n      ) {\n        image.modalityLUT = modalityLutModule.modalityLUTSequence[0];\n      }\n\n      // VOI LUT\n      if (\n        voiLutModule.voiLUTSequence &&\n        voiLutModule.voiLUTSequence.length > 0\n      ) {\n        image.voiLUT = voiLutModule.voiLUTSequence[0];\n      }\n\n      if (image.color) {\n        image.windowWidth = 255;\n        image.windowCenter = 127;\n      }\n\n      // set the ww/wc to cover the dynamic range of the image if no values are supplied\n      if (image.windowCenter === undefined || image.windowWidth === undefined) {\n        const maxVoi = image.maxPixelValue * image.slope + image.intercept;\n        const minVoi = image.minPixelValue * image.slope + image.intercept;\n\n        image.windowWidth = maxVoi - minVoi;\n        image.windowCenter = (maxVoi + minVoi) / 2;\n      }\n      resolve(image);\n    }, reject);\n  });\n}\n\nexport default createImage;\n","/**\n * It returns the scaling parameters for the image with the given imageId. This can be\n * used to get passed (as an option) to the imageLoader in order to apply scaling to the image inside\n * the imageLoader.\n * @param imageId - The imageId of the image\n * @returns ScalingParameters\n */\nexport default function getScalingParameters(metaData, imageId) {\n  const modalityLutModule = metaData.get('modalityLutModule', imageId) || {};\n\n  const generalSeriesModule =\n    metaData.get('generalSeriesModule', imageId) || {};\n\n  const { modality } = generalSeriesModule;\n\n  const scalingParameters = {\n    rescaleSlope: modalityLutModule.rescaleSlope,\n    rescaleIntercept: modalityLutModule.rescaleIntercept,\n    modality,\n  };\n\n  const suvFactor = metaData.get('scalingModule', imageId) || {};\n\n  return {\n    ...scalingParameters,\n    ...(modality === 'PT' && { suvbw: suvFactor.suvbw }),\n  };\n}\n","import external from '../../externalModules.js';\nimport getPixelData from './getPixelData.js';\nimport createImage from '../createImage.js';\n\n/**\n * Helper method to extract the transfer-syntax from the response of the server.\n * @param {string} contentType The value of the content-type header as returned by the WADO-RS server.\n * @return The transfer-syntax as announced by the server, or Implicit Little Endian by default.\n */\nexport function getTransferSyntaxForContentType(contentType) {\n  const defaultTransferSyntax = '1.2.840.10008.1.2'; // Default is Implicit Little Endian.\n\n  if (!contentType) {\n    return defaultTransferSyntax;\n  }\n\n  // Browse through the content type parameters\n  const parameters = contentType.split(';');\n  const params = {};\n\n  parameters.forEach((parameter) => {\n    // Look for a transfer-syntax=XXXX pair\n    const parameterValues = parameter.split('=');\n\n    if (parameterValues.length !== 2) {\n      return;\n    }\n\n    const value = parameterValues[1].trim().replace(/\"/g, '');\n\n    params[parameterValues[0].trim()] = value;\n  });\n\n  // This is useful if the PACS doesn't respond with a syntax\n  // in the content type.\n  // http://dicom.nema.org/medical/dicom/current/output/chtml/part18/chapter_6.html#table_6.1.1.8-3b\n  const defaultTransferSyntaxByType = {\n    'image/jpeg': '1.2.840.10008.1.2.4.50',\n    'image/x-dicom-rle': '1.2.840.10008.1.2.5',\n    'image/x-jls': '1.2.840.10008.1.2.4.80',\n    'image/jls': '1.2.840.10008.1.2.4.80',\n    'image/jll': '1.2.840.10008.1.2.4.70',\n    'image/jp2': '1.2.840.10008.1.2.4.90',\n    'image/jpx': '1.2.840.10008.1.2.4.92',\n    // Temporary types, until ratified by DICOM committed - TODO\n    'image/jphc': '3.2.840.10008.1.2.4.96',\n    'image/jxl': '1.2.840.10008.1.2.4.140',\n  };\n\n  if (params['transfer-syntax']) {\n    return params['transfer-syntax'];\n  } else if (\n    contentType &&\n    !Object.keys(params).length &&\n    defaultTransferSyntaxByType[contentType]\n  ) {\n    // dcm4che seems to be reporting the content type as just 'image/jp2'?\n    return defaultTransferSyntaxByType[contentType];\n  } else if (params.type && defaultTransferSyntaxByType[params.type]) {\n    return defaultTransferSyntaxByType[params.type];\n  } else if (defaultTransferSyntaxByType[contentType]) {\n    return defaultTransferSyntaxByType[contentType];\n  }\n\n  return defaultTransferSyntax;\n}\n\nfunction getImageRetrievalPool() {\n  return external.cornerstone.imageRetrievalPoolManager;\n}\n\nfunction loadImage(imageId, options = {}) {\n  const imageRetrievalPool = getImageRetrievalPool();\n\n  const start = new Date().getTime();\n\n  const promise = new Promise((resolve, reject) => {\n    // TODO: load bulk data items that we might need\n\n    // Uncomment this on to test jpegls codec in OHIF\n    // const mediaType = 'multipart/related; type=\"image/x-jls\"';\n    // const mediaType = 'multipart/related; type=\"application/octet-stream\"; transfer-syntax=\"image/x-jls\"';\n    const mediaType =\n      'multipart/related; type=application/octet-stream; transfer-syntax=*';\n    // const mediaType =\n    //   'multipart/related; type=\"image/jpeg\"; transfer-syntax=1.2.840.10008.1.2.4.50';\n\n    function sendXHR(imageURI, imageId, mediaType) {\n      // get the pixel data from the server\n      return getPixelData(imageURI, imageId, mediaType)\n        .then((result) => {\n          const transferSyntax = getTransferSyntaxForContentType(\n            result.contentType\n          );\n\n          const pixelData = result.imageFrame.pixelData;\n          const imagePromise = createImage(\n            imageId,\n            pixelData,\n            transferSyntax,\n            options\n          );\n\n          imagePromise.then((image) => {\n            // add the loadTimeInMS property\n            const end = new Date().getTime();\n\n            image.loadTimeInMS = end - start;\n            resolve(image);\n          }, reject);\n        }, reject)\n        .catch((error) => {\n          reject(error);\n        });\n    }\n\n    const requestType = options.requestType || 'interaction';\n    const additionalDetails = options.additionalDetails || { imageId };\n    const priority = options.priority === undefined ? 5 : options.priority;\n    const addToBeginning = options.addToBeginning || false;\n    const uri = imageId.substring(7);\n\n    imageRetrievalPool.addRequest(\n      sendXHR.bind(this, uri, imageId, mediaType),\n      requestType,\n      additionalDetails,\n      priority,\n      addToBeginning\n    );\n  });\n\n  return {\n    promise,\n    cancelFn: undefined,\n  };\n}\n\nexport default loadImage;\n","import {\n  getNumberString,\n  getNumberValue,\n  getNumberValues,\n  getValue,\n  metaDataProvider,\n} from './metaData/index.js';\n\nimport findIndexOfString from './findIndexOfString.js';\nimport getPixelData from './getPixelData.js';\nimport metaDataManager from './metaDataManager.js';\nimport loadImage from './loadImage.js';\nimport register from './register.js';\n\nconst metaData = {\n  getNumberString,\n  getNumberValue,\n  getNumberValues,\n  getValue,\n  metaDataProvider,\n};\n\nexport default {\n  metaData,\n  findIndexOfString,\n  getPixelData,\n  loadImage,\n  metaDataManager,\n  register,\n};\n","import loadImage from './loadImage.js';\nimport { metaDataProvider } from './metaData/index.js';\n\nexport default function (cornerstone) {\n  // register wadors scheme and metadata provider\n  cornerstone.registerImageLoader('wadors', loadImage);\n  cornerstone.metaData.addProvider(metaDataProvider);\n}\n","import wadors from './wadors/index.js';\nimport wadouri from './wadouri/index.js';\n\n/**\n * Register the WADO-URI and WADO-RS image loaders and metaData providers\n * with an instance of Cornerstone Core.\n *\n * @param cornerstone The Cornerstone Core library to register the image loaders with\n */\nfunction registerLoaders(cornerstone) {\n  wadors.register(cornerstone);\n  wadouri.register(cornerstone);\n}\n\nexport default registerLoaders;\n","/* eslint import/extensions:0 */\nimport registerLoaders from './imageLoader/registerLoaders.js';\n\nlet cornerstone;\n\nlet dicomParser;\n\nconst external = {\n  set cornerstone(cs) {\n    cornerstone = cs;\n\n    registerLoaders(cornerstone);\n  },\n  get cornerstone() {\n    if (!cornerstone) {\n      if (window && window.cornerstone) {\n        cornerstone = window.cornerstone;\n\n        registerLoaders(cornerstone);\n      } else {\n        throw new Error(\n          'cornerstoneWADOImageLoader requires a copy of Cornerstone to work properly. Please add cornerstoneWADOImageLoader.external.cornerstone = cornerstone; to your application.'\n        );\n      }\n    }\n\n    return cornerstone;\n  },\n  set dicomParser(dp) {\n    dicomParser = dp;\n  },\n  get dicomParser() {\n    if (!dicomParser) {\n      if (window && window.dicomParser) {\n        dicomParser = window.dicomParser;\n      } else {\n        throw new Error(\n          'cornerstoneWADOImageLoader requires a copy of dicomParser to work properly. Please add cornerstoneWADOImageLoader.external.dicomParser = dicomParser; to your application.'\n        );\n      }\n    }\n\n    return dicomParser;\n  },\n};\n\nexport default external;\n","function parseImageId(imageId) {\n  // build a url by parsing out the url scheme and frame index from the imageId\n  const firstColonIndex = imageId.indexOf(':');\n\n  let url = imageId.substring(firstColonIndex + 1);\n  const frameIndex = url.indexOf('frame=');\n\n  let frame;\n\n  if (frameIndex !== -1) {\n    const frameStr = url.substr(frameIndex + 6);\n\n    frame = parseInt(frameStr, 10);\n    url = url.substr(0, frameIndex - 1);\n  }\n\n  return {\n    scheme: imageId.substr(0, firstColonIndex),\n    url,\n    frame,\n  };\n}\n\nexport default parseImageId;\n","// @ts-check\n\nimport external from '../../externalModules.js';\n\nfunction fixFragments(dataSet) {\n  // The partially parsed pixelData element has incorrect fragment\n  // lengths because the byte array is truncated, so we manually set\n  // it to the actual length.\n  const fragments = dataSet.elements.x7fe00010.fragments;\n  const totalLength = dataSet.byteArray.length;\n\n  for (const fragment of fragments) {\n    const { position, length } = fragment;\n\n    if (length > totalLength - position) {\n      console.log(\n        `Truncated fragment, changing fragment length from ${\n          fragment.length\n        } to ${totalLength - position}`\n      );\n      fragment.length = totalLength - position;\n    }\n  }\n\n  return dataSet;\n}\n\nfunction parsePartialByteArray(byteArray) {\n  const { dicomParser } = external;\n  /**\n   * First parse just up to pixelData. This will make sure the\n   * metadata header is correctly parsed (assuming no other error is\n   * thrown during parsing). Then, parse again using the whole partial\n   * arraybuffer. This will error, but still kick out the parsed\n   * partial pixel data in the error object.\n   */\n\n  let dataSet = dicomParser.parseDicom(byteArray, {\n    untilTag: 'x7fe00010',\n  });\n\n  if (!dataSet.elements.x7fe00010) {\n    console.warn('Pixel data not found!');\n    // Re-fetch more of the file\n  }\n\n  let pixelDataSet;\n\n  try {\n    // This is expected to fail, since the file is incomplete, but\n    // dicomParser helpfully spits out the parsed partial dataset in\n    // the error object. The problem is, the dataset here is\n    // incomplete, because dicomParser throws *before* combining the\n    // metadata header and regular datasets, so transfer syntax and\n    // other metadata headers aren't included.\n    pixelDataSet = dicomParser.parseDicom(byteArray);\n  } catch (err) {\n    console.error(err);\n    console.log('pixel data dataset:', err.dataSet);\n    pixelDataSet = err.dataSet;\n  }\n\n  // Add the parsed partial pixel data element to the dataset\n  // including the metadata headers.\n  dataSet.elements.x7fe00010 = pixelDataSet.elements.x7fe00010;\n\n  dataSet = fixFragments(dataSet);\n\n  return dataSet;\n}\n\nexport default async function dataSetFromPartialContent(\n  byteArray,\n  loadRequest,\n  metadata\n) {\n  const dataSet = parsePartialByteArray(byteArray);\n  const { uri, imageId, fileTotalLength } = metadata;\n\n  // Allow re-fetching of more of the file\n  dataSet.fetchMore = async function (fetchOptions) {\n    // Default to fetching the rest of the file if no lengthToFetch is set. Also\n    // default to fetching the same URI/imageId\n    const _options = Object.assign(\n      {\n        uri,\n        imageId,\n        fetchedLength: byteArray.length, // Not sure if this would ever need to be configurable tbh\n        lengthToFetch: fileTotalLength - byteArray.length,\n      },\n      fetchOptions\n    );\n    const { fetchedLength, lengthToFetch } = _options;\n\n    // Use passed xhr loader to re-fetch new byte range\n    const { arrayBuffer } = await loadRequest(uri, imageId, {\n      byteRange: `${fetchedLength}-${fetchedLength + lengthToFetch}`,\n    });\n\n    // Combine byte ranges\n    const byteArrayToAppend = new Uint8Array(arrayBuffer);\n    const combinedByteArray = new Uint8Array(\n      dataSet.byteArray.length + byteArrayToAppend.length\n    );\n\n    combinedByteArray.set(dataSet.byteArray);\n    combinedByteArray.set(byteArrayToAppend, dataSet.byteArray.length);\n\n    // Re-parse potentially partial byte range and return\n    return dataSetFromPartialContent(combinedByteArray, loadRequest, metadata);\n  };\n\n  return dataSet;\n}\n","import external from '../../externalModules.js';\nimport { xhrRequest } from '../internal/index.js';\nimport dataSetFromPartialContent from './dataset-from-partial-content.js';\n\n/**\n * This object supports loading of DICOM P10 dataset from a uri and caching it so it can be accessed\n * by the caller.  This allows a caller to access the datasets without having to go through cornerstone's\n * image loader mechanism.  One reason a caller may need to do this is to determine the number of frames\n * in a multiframe sop instance so it can create the imageId's correctly.\n */\nlet cacheSizeInBytes = 0;\n\nlet loadedDataSets = {};\n\nlet promises = {};\n\n// returns true if the wadouri for the specified index has been loaded\nfunction isLoaded(uri) {\n  return loadedDataSets[uri] !== undefined;\n}\n\nfunction get(uri) {\n  if (!loadedDataSets[uri]) {\n    return;\n  }\n\n  return loadedDataSets[uri].dataSet;\n}\n\nfunction update(uri, dataSet) {\n  const loadedDataSet = loadedDataSets[uri];\n\n  if (!loadedDataSet) {\n    console.error(`No loaded dataSet for uri ${uri}`);\n\n    return;\n  }\n  // Update dataset\n  cacheSizeInBytes -= loadedDataSet.dataSet.byteArray.length;\n  loadedDataSet.dataSet = dataSet;\n  cacheSizeInBytes += dataSet.byteArray.length;\n\n  external.cornerstone.triggerEvent(\n    external.cornerstone.events,\n    'datasetscachechanged',\n    {\n      uri,\n      action: 'updated',\n      cacheInfo: getInfo(),\n    }\n  );\n}\n\n// loads the dicom dataset from the wadouri sp\nfunction load(uri, loadRequest = xhrRequest, imageId) {\n  const { cornerstone, dicomParser } = external;\n\n  // if already loaded return it right away\n  if (loadedDataSets[uri]) {\n    // console.log('using loaded dataset ' + uri);\n    return new Promise((resolve) => {\n      loadedDataSets[uri].cacheCount++;\n      resolve(loadedDataSets[uri].dataSet);\n    });\n  }\n\n  // if we are currently loading this uri, increment the cacheCount and return its promise\n  if (promises[uri]) {\n    // console.log('returning existing load promise for ' + uri);\n    promises[uri].cacheCount++;\n\n    return promises[uri];\n  }\n\n  // This uri is not loaded or being loaded, load it via an xhrRequest\n  const loadDICOMPromise = loadRequest(uri, imageId);\n\n  // handle success and failure of the XHR request load\n  const promise = new Promise((resolve, reject) => {\n    loadDICOMPromise\n      .then(async function (dicomPart10AsArrayBuffer) {\n        const partialContent = {\n          isPartialContent: false,\n          fileTotalLength: null,\n        };\n\n        // Allow passing extra data with the loader promise so as not to change\n        // the API\n        if (!(dicomPart10AsArrayBuffer instanceof ArrayBuffer)) {\n          if (!dicomPart10AsArrayBuffer.arrayBuffer) {\n            return reject(\n              new Error(\n                'If not returning ArrayBuffer, must return object with `arrayBuffer` parameter'\n              )\n            );\n          }\n          partialContent.isPartialContent =\n            dicomPart10AsArrayBuffer.flags.isPartialContent;\n          partialContent.fileTotalLength =\n            dicomPart10AsArrayBuffer.flags.fileTotalLength;\n          dicomPart10AsArrayBuffer = dicomPart10AsArrayBuffer.arrayBuffer;\n        }\n\n        const byteArray = new Uint8Array(dicomPart10AsArrayBuffer);\n\n        // Reject the promise if parsing the dicom file fails\n        let dataSet;\n\n        try {\n          if (partialContent.isPartialContent) {\n            // This dataSet object will include a fetchMore function,\n            dataSet = await dataSetFromPartialContent(byteArray, loadRequest, {\n              uri,\n              imageId,\n              fileTotalLength: partialContent.fileTotalLength,\n            });\n          } else {\n            dataSet = dicomParser.parseDicom(byteArray);\n          }\n        } catch (error) {\n          return reject(error);\n        }\n\n        loadedDataSets[uri] = {\n          dataSet,\n          cacheCount: promise.cacheCount,\n        };\n        cacheSizeInBytes += dataSet.byteArray.length;\n        resolve(dataSet);\n\n        cornerstone.triggerEvent(cornerstone.events, 'datasetscachechanged', {\n          uri,\n          action: 'loaded',\n          cacheInfo: getInfo(),\n        });\n      }, reject)\n      .then(\n        () => {\n          // Remove the promise if success\n          delete promises[uri];\n        },\n        () => {\n          // Remove the promise if failure\n          delete promises[uri];\n        }\n      );\n  });\n\n  promise.cacheCount = 1;\n\n  promises[uri] = promise;\n\n  return promise;\n}\n\n// remove the cached/loaded dicom dataset for the specified wadouri to free up memory\nfunction unload(uri) {\n  const { cornerstone } = external;\n\n  // console.log('unload for ' + uri);\n  if (loadedDataSets[uri]) {\n    loadedDataSets[uri].cacheCount--;\n    if (loadedDataSets[uri].cacheCount === 0) {\n      // console.log('removing loaded dataset for ' + uri);\n      cacheSizeInBytes -= loadedDataSets[uri].dataSet.byteArray.length;\n      delete loadedDataSets[uri];\n\n      cornerstone.triggerEvent(cornerstone.events, 'datasetscachechanged', {\n        uri,\n        action: 'unloaded',\n        cacheInfo: getInfo(),\n      });\n    }\n  }\n}\n\nexport function getInfo() {\n  return {\n    cacheSizeInBytes,\n    numberOfDataSetsCached: Object.keys(loadedDataSets).length,\n  };\n}\n\n// removes all cached datasets from memory\nfunction purge() {\n  loadedDataSets = {};\n  promises = {};\n  cacheSizeInBytes = 0;\n}\n\nexport default {\n  isLoaded,\n  load,\n  unload,\n  getInfo,\n  purge,\n  get,\n  update,\n};\n","import external from '../../../externalModules.js';\nimport getNumberValues from './getNumberValues.js';\nimport parseImageId from '../parseImageId.js';\nimport dataSetCacheManager from '../dataSetCacheManager.js';\nimport getImagePixelModule from './getImagePixelModule.js';\nimport getOverlayPlaneModule from './getOverlayPlaneModule.js';\nimport getLUTs from './getLUTs.js';\nimport getModalityLUTOutputPixelRepresentation from './getModalityLUTOutputPixelRepresentation.js';\n\nfunction metaDataProvider(type, imageId) {\n  const { dicomParser } = external;\n  const parsedImageId = parseImageId(imageId);\n\n  const dataSet = dataSetCacheManager.get(parsedImageId.url);\n\n  if (!dataSet) {\n    return;\n  }\n\n  if (type === 'generalSeriesModule') {\n    return {\n      modality: dataSet.string('x00080060'),\n      seriesInstanceUID: dataSet.string('x0020000e'),\n      seriesNumber: dataSet.intString('x00200011'),\n      studyInstanceUID: dataSet.string('x0020000d'),\n      seriesDate: dicomParser.parseDA(dataSet.string('x00080021')),\n      seriesTime: dicomParser.parseTM(dataSet.string('x00080031') || ''),\n    };\n  }\n\n  if (type === 'patientStudyModule') {\n    return {\n      patientAge: dataSet.intString('x00101010'),\n      patientSize: dataSet.floatString('x00101020'),\n      patientWeight: dataSet.floatString('x00101030'),\n    };\n  }\n\n  if (type === 'imagePlaneModule') {\n    const imageOrientationPatient = getNumberValues(dataSet, 'x00200037', 6);\n    const imagePositionPatient = getNumberValues(dataSet, 'x00200032', 3);\n    const pixelSpacing = getNumberValues(dataSet, 'x00280030', 2);\n\n    let columnPixelSpacing = null;\n\n    let rowPixelSpacing = null;\n\n    if (pixelSpacing) {\n      rowPixelSpacing = pixelSpacing[0];\n      columnPixelSpacing = pixelSpacing[1];\n    }\n\n    let rowCosines = null;\n\n    let columnCosines = null;\n\n    if (imageOrientationPatient) {\n      rowCosines = [\n        parseFloat(imageOrientationPatient[0]),\n        parseFloat(imageOrientationPatient[1]),\n        parseFloat(imageOrientationPatient[2]),\n      ];\n      columnCosines = [\n        parseFloat(imageOrientationPatient[3]),\n        parseFloat(imageOrientationPatient[4]),\n        parseFloat(imageOrientationPatient[5]),\n      ];\n    }\n\n    return {\n      frameOfReferenceUID: dataSet.string('x00200052'),\n      rows: dataSet.uint16('x00280010'),\n      columns: dataSet.uint16('x00280011'),\n      imageOrientationPatient,\n      rowCosines,\n      columnCosines,\n      imagePositionPatient,\n      sliceThickness: dataSet.floatString('x00180050'),\n      sliceLocation: dataSet.floatString('x00201041'),\n      pixelSpacing,\n      rowPixelSpacing,\n      columnPixelSpacing,\n    };\n  }\n\n  if (type === 'imagePixelModule') {\n    return getImagePixelModule(dataSet);\n  }\n\n  if (type === 'modalityLutModule') {\n    return {\n      rescaleIntercept: dataSet.floatString('x00281052'),\n      rescaleSlope: dataSet.floatString('x00281053'),\n      rescaleType: dataSet.string('x00281054'),\n      modalityLUTSequence: getLUTs(\n        dataSet.uint16('x00280103'),\n        dataSet.elements.x00283000\n      ),\n    };\n  }\n\n  if (type === 'voiLutModule') {\n    const modalityLUTOutputPixelRepresentation =\n      getModalityLUTOutputPixelRepresentation(dataSet);\n\n    return {\n      windowCenter: getNumberValues(dataSet, 'x00281050', 1),\n      windowWidth: getNumberValues(dataSet, 'x00281051', 1),\n      voiLUTSequence: getLUTs(\n        modalityLUTOutputPixelRepresentation,\n        dataSet.elements.x00283010\n      ),\n    };\n  }\n\n  if (type === 'sopCommonModule') {\n    return {\n      sopClassUID: dataSet.string('x00080016'),\n      sopInstanceUID: dataSet.string('x00080018'),\n    };\n  }\n\n  if (type === 'petIsotopeModule') {\n    const radiopharmaceuticalInfo = dataSet.elements.x00540016;\n\n    if (radiopharmaceuticalInfo === undefined) {\n      return;\n    }\n\n    const firstRadiopharmaceuticalInfoDataSet =\n      radiopharmaceuticalInfo.items[0].dataSet;\n\n    return {\n      radiopharmaceuticalInfo: {\n        radiopharmaceuticalStartTime: dicomParser.parseTM(\n          firstRadiopharmaceuticalInfoDataSet.string('x00181072') || ''\n        ),\n        radionuclideTotalDose:\n          firstRadiopharmaceuticalInfoDataSet.floatString('x00181074'),\n        radionuclideHalfLife:\n          firstRadiopharmaceuticalInfoDataSet.floatString('x00181075'),\n      },\n    };\n  }\n\n  if (type === 'overlayPlaneModule') {\n    return getOverlayPlaneModule(dataSet);\n  }\n\n  // Note: this is not a DICOM module, but a useful metadata that can be\n  // retrieved from the image\n  if (type === 'transferSyntax') {\n    return {\n      transferSyntaxUID: dataSet.string('x00020010'),\n    };\n  }\n}\n\nexport default metaDataProvider;\n","export default function getOverlayPlaneModule(dataSet) {\n  const overlays = [];\n\n  for (let overlayGroup = 0x00; overlayGroup <= 0x1e; overlayGroup += 0x02) {\n    let groupStr = `x60${overlayGroup.toString(16)}`;\n\n    if (groupStr.length === 4) {\n      groupStr = `x600${overlayGroup.toString(16)}`;\n    }\n\n    const data = dataSet.elements[`${groupStr}3000`];\n\n    if (!data) {\n      continue;\n    }\n\n    const pixelData = [];\n\n    for (let i = 0; i < data.length; i++) {\n      for (let k = 0; k < 8; k++) {\n        const byte_as_int = dataSet.byteArray[data.dataOffset + i];\n\n        pixelData[i * 8 + k] = (byte_as_int >> k) & 0b1; // eslint-disable-line no-bitwise\n      }\n    }\n\n    overlays.push({\n      rows: dataSet.uint16(`${groupStr}0010`),\n      columns: dataSet.uint16(`${groupStr}0011`),\n      type: dataSet.string(`${groupStr}0040`),\n      x: dataSet.int16(`${groupStr}0050`, 1) - 1,\n      y: dataSet.int16(`${groupStr}0050`, 0) - 1,\n      pixelData,\n      description: dataSet.string(`${groupStr}0022`),\n      label: dataSet.string(`${groupStr}1500`),\n      roiArea: dataSet.string(`${groupStr}1301`),\n      roiMean: dataSet.string(`${groupStr}1302`),\n      roiStandardDeviation: dataSet.string(`${groupStr}1303`),\n    });\n  }\n\n  return {\n    overlays,\n  };\n}\n","let files = [];\n\nfunction add(file) {\n  const fileIndex = files.push(file);\n\n  return `dicomfile:${fileIndex - 1}`;\n}\n\nfunction get(index) {\n  return files[index];\n}\n\nfunction remove(index) {\n  files[index] = undefined;\n}\n\nfunction purge() {\n  files = [];\n}\n\nexport default {\n  add,\n  get,\n  remove,\n  purge,\n};\n","import external from '../../externalModules.js';\n\n/**\n * Function to deal with extracting an image frame from an encapsulated data set.\n */\n\nfunction framesAreFragmented(dataSet) {\n  const numberOfFrames = dataSet.intString('x00280008');\n  const pixelDataElement = dataSet.elements.x7fe00010;\n\n  return numberOfFrames !== pixelDataElement.fragments.length;\n}\n\nexport default function getEncapsulatedImageFrame(dataSet, frameIndex) {\n  const { dicomParser } = external;\n\n  if (\n    dataSet.elements.x7fe00010 &&\n    dataSet.elements.x7fe00010.basicOffsetTable.length\n  ) {\n    // Basic Offset Table is not empty\n    return dicomParser.readEncapsulatedImageFrame(\n      dataSet,\n      dataSet.elements.x7fe00010,\n      frameIndex\n    );\n  }\n\n  // Empty basic offset table\n\n  if (framesAreFragmented(dataSet)) {\n    const basicOffsetTable = dicomParser.createJPEGBasicOffsetTable(\n      dataSet,\n      dataSet.elements.x7fe00010\n    );\n\n    return dicomParser.readEncapsulatedImageFrame(\n      dataSet,\n      dataSet.elements.x7fe00010,\n      frameIndex,\n      basicOffsetTable\n    );\n  }\n\n  return dicomParser.readEncapsulatedPixelDataFromFragments(\n    dataSet,\n    dataSet.elements.x7fe00010,\n    frameIndex\n  );\n}\n","/* eslint no-bitwise: 0 */\n\nfunction isBitSet(byte, bitPos) {\n  return byte & (1 << bitPos);\n}\n\n/**\n * Function to deal with unpacking a binary frame\n */\nfunction unpackBinaryFrame(byteArray, frameOffset, pixelsPerFrame) {\n  // Create a new pixel array given the image size\n  const pixelData = new Uint8Array(pixelsPerFrame);\n\n  for (let i = 0; i < pixelsPerFrame; i++) {\n    // Compute byte position\n    const bytePos = Math.floor(i / 8);\n\n    // Get the current byte\n    const byte = byteArray[bytePos + frameOffset];\n\n    // Bit position (0-7) within byte\n    const bitPos = i % 8;\n\n    // Check whether bit at bitpos is set\n    pixelData[i] = isBitSet(byte, bitPos) ? 1 : 0;\n  }\n\n  return pixelData;\n}\n\nexport default unpackBinaryFrame;\n","import unpackBinaryFrame from './unpackBinaryFrame.js';\n\n/**\n * Function to deal with extracting an image frame from an encapsulated data set.\n */\n\nfunction getUncompressedImageFrame(dataSet, frameIndex) {\n  const pixelDataElement =\n    dataSet.elements.x7fe00010 || dataSet.elements.x7fe00008;\n  const bitsAllocated = dataSet.uint16('x00280100');\n  const rows = dataSet.uint16('x00280010');\n  const columns = dataSet.uint16('x00280011');\n\n  let samplesPerPixel = dataSet.uint16('x00280002');\n\n  /**\n   * From: http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.7.6.3.html\n   *\n   * Though the chrominance channels are downsampled, there are still nominally\n   * three channels, hence Samples per Pixel (0028,0002) has a value of 3, not\n   * 2. I.e., for pixel data in a Native (uncompressed) format, the Value Length\n   * of Pixel Data (7FE0,0010) is not:\n   *\n   * Rows (0028,0010) * Columns (0028,0011) * Number of Frames (0028,0008) *\n   * Samples per Pixel (0028,0002) * (⌊(Bits Allocated (0028,0100)-1)/8⌋+1)\n   *\n   * padded to an even length, as it would otherwise be, but rather is:\n   *\n   * Rows (0028,0010) * Columns (0028,0011) * Number of Frames (0028,0008) * 2 *\n   * (⌊(Bits Allocated (0028,0100)-1)/8⌋+1)\n   *\n   * padded to an even length.\n   */\n  const photometricInterpretation = dataSet.string('x00280004');\n\n  if (photometricInterpretation === 'YBR_FULL_422') {\n    samplesPerPixel = 2;\n    console.warn(\n      `Using SamplesPerPixel of 2 for YBR_FULL_422 photometric interpretation.\n      See http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.7.6.3.html for more information.`\n    );\n  }\n\n  const pixelDataOffset = pixelDataElement.dataOffset;\n  const pixelsPerFrame = rows * columns * samplesPerPixel;\n\n  let frameOffset;\n\n  if (bitsAllocated === 8) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(\n      dataSet.byteArray.buffer,\n      frameOffset,\n      pixelsPerFrame\n    );\n  } else if (bitsAllocated === 16) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 2;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(\n      dataSet.byteArray.buffer,\n      frameOffset,\n      pixelsPerFrame * 2\n    );\n  } else if (bitsAllocated === 1) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 0.125;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return unpackBinaryFrame(dataSet.byteArray, frameOffset, pixelsPerFrame);\n  } else if (bitsAllocated === 32) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 4;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(\n      dataSet.byteArray.buffer,\n      frameOffset,\n      pixelsPerFrame * 4\n    );\n  }\n\n  throw new Error('unsupported pixel format');\n}\n\nexport default getUncompressedImageFrame;\n","import parseImageId from './parseImageId.js';\nimport fileManager from './fileManager.js';\n\nfunction loadFileRequest(uri) {\n  const parsedImageId = parseImageId(uri);\n  const fileIndex = parseInt(parsedImageId.url, 10);\n  const file = fileManager.get(fileIndex);\n\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = (e) => {\n      const dicomPart10AsArrayBuffer = e.target.result;\n\n      resolve(dicomPart10AsArrayBuffer);\n    };\n\n    fileReader.onerror = reject;\n\n    fileReader.readAsArrayBuffer(file);\n  });\n}\n\nexport default loadFileRequest;\n","import getEncapsulatedImageFrame from './getEncapsulatedImageFrame.js';\nimport getUncompressedImageFrame from './getUncompressedImageFrame.js';\n\nfunction getPixelData(dataSet, frameIndex = 0) {\n  const pixelDataElement =\n    dataSet.elements.x7fe00010 || dataSet.elements.x7fe00008;\n\n  if (!pixelDataElement) {\n    return null;\n  }\n\n  if (pixelDataElement.encapsulatedPixelData) {\n    return getEncapsulatedImageFrame(dataSet, frameIndex);\n  }\n\n  return getUncompressedImageFrame(dataSet, frameIndex);\n}\n\nexport default getPixelData;\n","import createImage from '../createImage.js';\nimport parseImageId from './parseImageId.js';\nimport dataSetCacheManager from './dataSetCacheManager.js';\nimport loadFileRequest from './loadFileRequest.js';\nimport getPixelData from './getPixelData.js';\nimport { xhrRequest } from '../internal/index.js';\n\n// add a decache callback function to clear out our dataSetCacheManager\nfunction addDecache(imageLoadObject, imageId) {\n  imageLoadObject.decache = function () {\n    // console.log('decache');\n    const parsedImageId = parseImageId(imageId);\n\n    dataSetCacheManager.unload(parsedImageId.url);\n  };\n}\n\nfunction loadImageFromPromise(\n  dataSetPromise,\n  imageId,\n  frame = 0,\n  sharedCacheKey,\n  options,\n  callbacks\n) {\n  const start = new Date().getTime();\n  const imageLoadObject = {\n    cancelFn: undefined,\n  };\n\n  imageLoadObject.promise = new Promise((resolve, reject) => {\n    dataSetPromise.then(\n      (dataSet /* , xhr*/) => {\n        const pixelData = getPixelData(dataSet, frame);\n        const transferSyntax = dataSet.string('x00020010');\n        const loadEnd = new Date().getTime();\n        const imagePromise = createImage(\n          imageId,\n          pixelData,\n          transferSyntax,\n          options\n        );\n\n        addDecache(imageLoadObject, imageId);\n\n        imagePromise.then(\n          (image) => {\n            image.data = dataSet;\n            image.sharedCacheKey = sharedCacheKey;\n            const end = new Date().getTime();\n\n            image.loadTimeInMS = loadEnd - start;\n            image.totalTimeInMS = end - start;\n            if (\n              callbacks !== undefined &&\n              callbacks.imageDoneCallback !== undefined\n            ) {\n              callbacks.imageDoneCallback(image);\n            }\n            resolve(image);\n          },\n          function (error) {\n            // Reject the error, and the dataSet\n            reject({\n              error,\n              dataSet,\n            });\n          }\n        );\n      },\n      function (error) {\n        // Reject the error\n        reject({\n          error,\n        });\n      }\n    );\n  });\n\n  return imageLoadObject;\n}\n\nfunction loadImageFromDataSet(\n  dataSet,\n  imageId,\n  frame = 0,\n  sharedCacheKey,\n  options\n) {\n  const start = new Date().getTime();\n\n  const promise = new Promise((resolve, reject) => {\n    const loadEnd = new Date().getTime();\n\n    let imagePromise;\n\n    try {\n      const pixelData = getPixelData(dataSet, frame);\n      const transferSyntax = dataSet.string('x00020010');\n\n      imagePromise = createImage(imageId, pixelData, transferSyntax, options);\n    } catch (error) {\n      // Reject the error, and the dataSet\n      reject({\n        error,\n        dataSet,\n      });\n\n      return;\n    }\n\n    imagePromise.then((image) => {\n      image.data = dataSet;\n      image.sharedCacheKey = sharedCacheKey;\n      const end = new Date().getTime();\n\n      image.loadTimeInMS = loadEnd - start;\n      image.totalTimeInMS = end - start;\n      resolve(image);\n    }, reject);\n  });\n\n  return {\n    promise,\n    cancelFn: undefined,\n  };\n}\n\nfunction getLoaderForScheme(scheme) {\n  if (scheme === 'dicomweb' || scheme === 'wadouri') {\n    return xhrRequest;\n  } else if (scheme === 'dicomfile') {\n    return loadFileRequest;\n  }\n}\n\nfunction loadImage(imageId, options = {}) {\n  const parsedImageId = parseImageId(imageId);\n\n  options = Object.assign({}, options);\n  let loader = options.loader;\n\n  if (loader === undefined) {\n    loader = getLoaderForScheme(parsedImageId.scheme);\n  } else {\n    delete options.loader;\n  }\n\n  // if the dataset for this url is already loaded, use it\n  if (dataSetCacheManager.isLoaded(parsedImageId.url)) {\n    const dataSet = dataSetCacheManager.get(parsedImageId.url, loader, imageId);\n\n    return loadImageFromDataSet(\n      dataSet,\n      imageId,\n      parsedImageId.frame,\n      parsedImageId.url,\n      options\n    );\n  }\n\n  // load the dataSet via the dataSetCacheManager\n  const dataSetPromise = dataSetCacheManager.load(\n    parsedImageId.url,\n    loader,\n    imageId\n  );\n\n  return loadImageFromPromise(\n    dataSetPromise,\n    imageId,\n    parsedImageId.frame,\n    parsedImageId.url,\n    options\n  );\n}\n\nexport { loadImageFromPromise, getLoaderForScheme, loadImage };\n","import {\n  getImagePixelModule,\n  getLUTs,\n  getModalityLUTOutputPixelRepresentation,\n  getNumberValues,\n  metaDataProvider,\n} from './metaData/index.js';\n\nimport dataSetCacheManager from './dataSetCacheManager.js';\nimport fileManager from './fileManager.js';\nimport getEncapsulatedImageFrame from './getEncapsulatedImageFrame.js';\nimport getUncompressedImageFrame from './getUncompressedImageFrame.js';\nimport loadFileRequest from './loadFileRequest.js';\nimport {\n  loadImageFromPromise,\n  getLoaderForScheme,\n  loadImage,\n} from './loadImage.js';\nimport parseImageId from './parseImageId.js';\nimport unpackBinaryFrame from './unpackBinaryFrame.js';\nimport register from './register.js';\n\nconst metaData = {\n  getImagePixelModule,\n  getLUTs,\n  getModalityLUTOutputPixelRepresentation,\n  getNumberValues,\n  metaDataProvider,\n};\n\nexport default {\n  metaData,\n  dataSetCacheManager,\n  fileManager,\n  getEncapsulatedImageFrame,\n  getUncompressedImageFrame,\n  loadFileRequest,\n  loadImageFromPromise,\n  getLoaderForScheme,\n  loadImage,\n  parseImageId,\n  unpackBinaryFrame,\n  register,\n};\n","import { loadImage } from './loadImage.js';\nimport { metaDataProvider } from './metaData/index.js';\n\nexport default function (cornerstone) {\n  // register dicomweb and wadouri image loader prefixes\n  cornerstone.registerImageLoader('dicomweb', loadImage);\n  cornerstone.registerImageLoader('wadouri', loadImage);\n  cornerstone.registerImageLoader('dicomfile', loadImage);\n\n  // add wadouri metadata provider\n  cornerstone.metaData.addProvider(metaDataProvider);\n}\n","import { setOptions } from './internal/index.js';\n\nfunction configure(options) {\n  setOptions(options);\n}\n\nexport default configure;\n","export default '0.0.0-semantically-released';\n","import {\n  convertRGBColorByPixel,\n  convertRGBColorByPlane,\n  convertYBRFullByPixel,\n  convertYBRFullByPlane,\n  convertPALETTECOLOR,\n} from './colorSpaceConverters/index.js';\n\nimport { default as wadouri } from './wadouri/index.js';\nimport { default as wadors } from './wadors/index.js';\nimport { default as configure } from './configure.js';\nimport { default as convertColorSpace } from './convertColorSpace.js';\nimport { default as createImage } from './createImage.js';\nimport { default as decodeImageFrame } from './decodeImageFrame.js';\nimport { default as decodeJPEGBaseline8BitColor } from './decodeJPEGBaseline8BitColor.js';\nimport { default as getImageFrame } from './getImageFrame.js';\nimport { default as getMinMax } from '../shared/getMinMax.js';\nimport { default as isColorImage } from './isColorImage.js';\nimport { default as isJPEGBaseline8BitColor } from './isJPEGBaseline8BitColor.js';\nimport { default as webWorkerManager } from './webWorkerManager.js';\nimport { default as getPixelData } from './wadors/getPixelData.js';\nimport { default as version } from '../version.js';\nimport { internal } from './internal/index.js';\nimport { default as external } from '../externalModules.js';\n\nconst cornerstoneWADOImageLoader = {\n  convertRGBColorByPixel,\n  convertRGBColorByPlane,\n  convertYBRFullByPixel,\n  convertYBRFullByPlane,\n  convertPALETTECOLOR,\n  wadouri,\n  wadors,\n  configure,\n  convertColorSpace,\n  createImage,\n  decodeImageFrame,\n  decodeJPEGBaseline8BitColor,\n  getImageFrame,\n  getPixelData,\n  getMinMax,\n  isColorImage,\n  isJPEGBaseline8BitColor,\n  webWorkerManager,\n  version,\n  internal,\n  external,\n};\n\nexport {\n  convertRGBColorByPixel,\n  convertRGBColorByPlane,\n  convertYBRFullByPixel,\n  convertYBRFullByPlane,\n  convertPALETTECOLOR,\n  wadouri,\n  wadors,\n  configure,\n  convertColorSpace,\n  createImage,\n  decodeImageFrame,\n  decodeJPEGBaseline8BitColor,\n  getImageFrame,\n  getPixelData,\n  getMinMax,\n  isColorImage,\n  isJPEGBaseline8BitColor,\n  webWorkerManager,\n  version,\n  internal,\n  external,\n};\n\nexport default cornerstoneWADOImageLoader;\n"],"names":["root","factory","exports","module","define","amd","this","parent","isPrototypeOf","flags","RegExpPrototype","RegExp","prototype","it","Object","defineProperty","key","desc","sham","getRegExpFlags","path","Symbol","WrappedWellKnownSymbolModule","f","isCallable","tryToString","$TypeError","TypeError","argument","$String","String","isObject","toIndexedObject","toAbsoluteIndex","lengthOfArrayLike","createMethod","IS_INCLUDES","$this","el","fromIndex","value","O","length","index","includes","indexOf","bind","uncurryThis","IndexedObject","toObject","arraySpeciesCreate","push","TYPE","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","IS_FILTER_REJECT","NO_HOLES","callbackfn","that","specificCreate","result","self","boundFunction","create","target","undefined","forEach","map","filter","some","every","find","findIndex","filterReject","fails","wellKnownSymbol","V8_VERSION","SPECIES","METHOD_NAME","array","constructor","foo","Boolean","createProperty","$Array","Array","max","Math","start","end","k","fin","n","slice","isArray","isConstructor","originalArray","C","arraySpeciesConstructor","toString","stringSlice","TO_STRING_TAG_SUPPORT","classofRaw","TO_STRING_TAG","$Object","CORRECT_ARGUMENTS","arguments","tag","error","tryGet","callee","F","getPrototypeOf","done","DESCRIPTORS","definePropertyModule","createPropertyDescriptor","object","bitmap","enumerable","configurable","writable","toPropertyKey","propertyKey","createNonEnumerableProperty","options","global","get","documentAll","document","all","IS_HTMLDDA","EXISTS","createElement","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","navigator","userAgent","match","version","process","Deno","versions","v8","split","apply","getOwnPropertyDescriptor","isForced","hasOwn","wrapConstructor","NativeConstructor","Wrapper","a","b","c","source","FORCED","USE_NATIVE","VIRTUAL_PROTOTYPE","sourceProperty","targetProperty","nativeProperty","resultProperty","descriptor","TARGET","GLOBAL","STATIC","stat","PROTO","proto","nativeSource","targetPrototype","forced","dontCallGetSet","wrap","real","exec","NATIVE_BIND","FunctionPrototype","Function","call","Reflect","aCallable","fn","test","hasOwnProperty","getDescriptor","PROPER","name","CONFIGURABLE","uncurryThisWithBind","aFunction","variable","namespace","method","isNullOrUndefined","V","P","func","check","globalThis","window","g","getBuiltIn","classof","propertyIsEnumerable","store","functionToString","inspectSource","set","has","NATIVE_WEAK_MAP","shared","sharedKey","hiddenKeys","OBJECT_ALREADY_INITIALIZED","WeakMap","state","metadata","facade","STATE","enforce","getterFor","type","$documentAll","noop","empty","construct","constructorRegExp","INCORRECT_TO_STRING","isConstructorModern","isConstructorLegacy","called","replacement","feature","detection","data","normalize","POLYFILL","NATIVE","string","replace","toLowerCase","USE_SYMBOL_AS_UID","$Symbol","IteratorPrototype","setToStringTag","Iterators","returnThis","IteratorConstructor","NAME","next","ENUMERABLE_NEXT","$","IS_PURE","FunctionName","createIteratorConstructor","setPrototypeOf","defineBuiltIn","IteratorsCore","PROPER_FUNCTION_NAME","CONFIGURABLE_FUNCTION_NAME","BUGGY_SAFARI_ITERATORS","ITERATOR","KEYS","VALUES","ENTRIES","Iterable","DEFAULT","IS_SET","CurrentIteratorPrototype","methods","KEY","getIterationMethod","KIND","defaultIterator","IterablePrototype","INCORRECT_VALUES_NAME","nativeIterator","anyNativeIterator","entries","values","keys","PrototypeOfArrayIteratorPrototype","arrayIterator","toLength","obj","ceil","floor","trunc","x","activeXDocument","anObject","definePropertiesModule","enumBugKeys","html","documentCreateElement","PROTOTYPE","SCRIPT","IE_PROTO","EmptyConstructor","scriptTag","content","LT","NullProtoObjectViaActiveX","write","close","temp","parentWindow","NullProtoObject","ActiveXObject","iframeDocument","iframe","JS","domain","style","display","appendChild","src","contentWindow","open","Properties","V8_PROTOTYPE_DEFINE_BUG","objectKeys","defineProperties","props","IE8_DOM_DEFINE","$defineProperty","$getOwnPropertyDescriptor","ENUMERABLE","WRITABLE","Attributes","current","propertyIsEnumerableModule","$getOwnPropertyNames","arraySlice","windowNames","getOwnPropertyNames","getWindowNames","internalObjectKeys","concat","getOwnPropertySymbols","CORRECT_PROTOTYPE_GETTER","ObjectPrototype","names","i","$propertyIsEnumerable","NASHORN_BUG","aPossiblePrototype","setter","CORRECT_SETTER","__proto__","input","pref","val","valueOf","hasIndices","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","regExpFlags","R","TAG","SET_METHOD","uid","defineGlobalProperty","SHARED","mode","copyright","license","toIntegerOrInfinity","requireObjectCoercible","charAt","charCodeAt","CONVERT_TO_STRING","pos","first","second","S","position","size","codeAt","symbol","SymbolPrototype","TO_PRIMITIVE","hint","arity","NATIVE_SYMBOL","keyFor","min","integer","number","isSymbol","getMethod","ordinaryToPrimitive","exoticToPrim","toPrimitive","id","postfix","random","iterator","wrappedWellKnownSymbolModule","WellKnownSymbolsStore","createWellKnownSymbol","withoutSetter","doesNotExceedSafeInteger","arrayMethodHasSpeciesSupport","IS_CONCAT_SPREADABLE","IS_CONCAT_SPREADABLE_SUPPORT","isConcatSpreadable","spreadable","arg","len","E","A","addToUnscopables","InternalStateModule","defineIterator","createIterResultObject","ARRAY_ITERATOR","setInternalState","getInternalState","iterated","kind","Arguments","$stringify","numberToString","tester","low","hi","WRONG_SYMBOLS_CONVERSION","ILL_FORMED_UNICODE","stringifyWithSymbolsFix","replacer","args","$replacer","fixIllFormed","offset","prev","stringify","space","JSON","getOwnPropertySymbolsModule","$getOwnPropertySymbols","STRING_ITERATOR","point","defineWellKnownSymbol","$toString","nativeObjectCreate","getOwnPropertyNamesModule","getOwnPropertyNamesExternal","getOwnPropertyDescriptorModule","defineSymbolToPrimitive","$forEach","HIDDEN","SYMBOL","QObject","nativeGetOwnPropertyDescriptor","nativeDefineProperty","nativeGetOwnPropertyNames","nativePropertyIsEnumerable","AllSymbols","ObjectPrototypeSymbols","USE_SETTER","findChild","setSymbolDescriptor","ObjectPrototypeDescriptor","description","$defineProperties","properties","IS_OBJECT_PROTOTYPE","unsafe","useSetter","useSimple","NATIVE_SYMBOL_REGISTRY","StringToSymbolRegistry","SymbolToStringRegistry","sym","DOMIterables","COLLECTION_NAME","Collection","CollectionPrototype","zlib_inflate","utils","strings","msg","ZStream","GZheader","Z_NO_FLUSH","Z_FINISH","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Inflate","assign","chunkSize","windowBits","to","opt","raw","err","ended","chunks","strm","avail_out","status","inflateInit2","Error","header","inflateGetHeader","dictionary","string2buf","Uint8Array","inflateSetDictionary","inflate","inflator","flush_mode","_flush_mode","last_avail_out","next_in","avail_in","output","next_out","inflateReset","onEnd","next_out_utf8","utf8border","tail","utf8str","buf2string","subarray","onData","inflateEnd","chunk","join","flattenChunks","_has","sources","shift","p","l","STR_APPLY_UIA_OK","fromCharCode","__","_utf8len","q","str","TextEncoder","encode","buf","c2","m_pos","str_len","buf_len","TextDecoder","decode","out","utf16buf","c_len","buf2binstring","adler","s1","s2","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","crcTable","Uint32Array","table","makeTable","crc","t","text","time","xflags","os","extra","extra_len","comment","hcrc","BAD","_in","last","_out","beg","dmax","wsize","whave","wnext","s_window","hold","bits","lcode","dcode","lmask","dmask","here","op","dist","from","from_source","lencode","distcode","lenbits","distbits","top","dolen","dodist","sane","adler32","crc32","inflate_fast","inflate_table","HEAD","DICT","TYPEDO","COPY_","LEN_","LEN","CHECK","MEM","zswap32","InflateState","havedict","total","head","wbits","ncode","nlen","ndist","have","lens","Uint16Array","work","lendyn","distdyn","back","was","inflateStateCheck","inflateResetKeep","total_in","total_out","Int32Array","inflateReset2","ret","lenfix","distfix","virgin","fixedtables","updatewindow","copy","inflateInit","flush","put","left","here_bits","here_op","here_val","last_bits","last_op","last_val","hbuf","opts","order","inf_leave","data_type","dictLength","dictid","inflateInfo","MAXBITS","lbase","lext","dbase","dext","lens_index","codes","table_index","incr","fill","mask","curr","drop","used","huff","base","count","offs","workerConstructor","workerOptions","url","globalScope","blob","Blob","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","URL","webkitURL","objectURL","createObjectURL","worker","revokeObjectURL","encodeURIComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","definition","o","prop","r","toStringTag","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","imageFrame","colorBuffer","useRGBA","numPixels","rgbIndex","bufferIndex","rIndex","gIndex","bIndex","ybrIndex","y","cb","cr","yIndex","cbIndex","crIndex","convertLUTto8Bit","lut","numEntries","cleanedLUT","Uint8ClampedArray","columns","rows","pixelData","rData","redPaletteColorLookupTableData","gData","greenPaletteColorLookupTableData","bData","bluePaletteColorLookupTableData","palIndex","redPaletteColorLookupTableDescriptor","rDataCleaned","gDataCleaned","bDataCleaned","getLutDescriptor","dataSet","elements","uint16","getLutData","lutDataSet","lutDescriptor","lutData","byteArray","dataOffset","imagePixelModule","samplesPerPixel","photometricInterpretation","bitsAllocated","bitsStored","highBit","pixelRepresentation","planarConfiguration","pixelAspectRatio","smallestPixelValue","largestPixelValue","int16","populateSmallestLargestPixelValues","x00281101","greenPaletteColorLookupTableDescriptor","bluePaletteColorLookupTableDescriptor","numLutEntries","lutBitsAllocated","x00281201","populatePaletteColorLut","getLUT","numLUTEntries","firstValueMapped","numBitsPerEntry","lutSequence","items","luts","sopClassUID","rescaleIntercept","floatString","rescaleSlope","minStoredPixelValue","getMinStoredPixelValue","x00283000","minimumLength","valueAsString","parseFloat","element","defaultValue","Value","getValue","imageIdToURI","imageId","colonIndex","substring","metadataByImageURI","add","imageURI","remove","purge","dicomParser","external","metaData","metaDataManager","modality","seriesInstanceUID","seriesNumber","getNumberValue","studyInstanceUID","seriesDate","parseDA","seriesTime","parseTM","patientAge","patientSize","patientWeight","imageOrientationPatient","getNumberValues","imagePositionPatient","pixelSpacing","columnPixelSpacing","rowPixelSpacing","rowCosines","columnCosines","frameOfReferenceUID","sliceThickness","sliceLocation","windowCenter","windowWidth","rescaleType","sopInstanceUID","radiopharmaceuticalInfo","radiopharmaceuticalStartTime","radionuclideTotalDose","radionuclideHalfLife","overlays","overlayGroup","groupStr","byte_as_int","label","roiArea","roiMean","roiStandardDeviation","getOverlayPlaneModule","transferSyntaxUID","checkToken","token","endIndex","uint","j","stringToUint8Array","xhr","beforeSend","beforeProcessing","Promise","resolve","response","imageCreated","strict","decodeConfig","convertFloatPixelDataToInt","setOptions","newOptions","getOptions","defaultHeaders","params","cornerstone","errorInterceptor","request","XMLHttpRequest","promise","reject","beforeSendHeaders","responseType","headers","setRequestHeader","deferred","onloadstart","event","eventData","triggerEvent","events","onloadend","onreadystatechange","readyState","then","catch","onprogress","oProgress","loaded","percentComplete","lengthComputable","round","EVENTS","IMAGE_LOAD_PROGRESS","onerror","onabort","send","internal","xhrRequest","findContentType","substr","trim","uri","Accept","loadPromise","imageFrameAsArrayBuffer","contentType","getResponseHeader","tokenIndex","findIndexOfString","uint8ArrayToString","boundary","findBoundary","_typeof","_toPropertyKey","prim","res","Number","_defineProperty","Worker_fn","nextTaskId","tasks","webWorkers","defaultConfig","maxWebWorkers","hardwareConcurrency","startWebWorkersOnDemand","webWorkerTaskPaths","taskConfiguration","decodeTask","initializeCodecsOnStartup","config","statistics","numWebWorkers","numTasksQueued","numTasksExecuting","numTasksCompleted","totalTaskTimeInMS","totalTimeDelayedInMS","startTaskOnWebWorker","task","Date","getTime","added","postMessage","taskType","workerIndex","transferList","spawnWebWorker","handleMessageFromWorker","action","cornerstoneWADOImageLoaderWebWorker","addEventListener","initialize","configObject","loadWebWorkerTask","sourcePath","taskConfig","addTask","priority","taskId","splice","getStatistics","setTaskPriority","cancelTask","reason","terminate","storedPixelData","storedPixel","arrayBufferToString","buffer","binary","decodeURIComponent","escape","_error","URIError","binaryToString","canvas","imgBlob","fileReader","FileReader","readAsBinaryString","readAsArrayBuffer","onload","img","Image","height","width","context","getContext","drawImage","imageData","getImageData","decodeTimeInMS","minMax","getMinMax","btoa","processDecodeTask","transferSyntax","transferPixelData","webWorkerManager","pako","inflateRaw","decodeJPEGBaseline8BitColor","photoMetricInterpretation","convertRGB","convertRGBColorByPixel","convertRGBColorByPlane","convertColorSpace","convertPALETTECOLOR","y1","y2","convertYBRFull422ByPixel","convertYBRFullByPixel","convertYBRFullByPlane","convertYBRFull","lastImageIdDrawn","removeAFromRGBA","targetBuffer","preScale","enabled","getImageFrame","scalingParameters","modalityLutModule","generalSeriesModule","suvFactor","suvbw","getScalingParameters","decodePromise","decodeImageFrame","alreadyTyped","arrayBuffer","TypedArrayConstructor","typedArray","pixelDataLength","Float32Array","Int16Array","setPixelDataType","imagePlaneModule","voiLutModule","sopCommonModule","isColorImage","isColorImageFn","isJPEGBaseline8BitColor","createImageData","image","color","intercept","slope","invert","minPixelValue","maxPixelValue","sizeInBytes","byteLength","voiLUTFunction","floatPixelData","rgba","results","floatMinMax","abs","intPixelData","rescaledPixel","convertToIntPixelData","getPixelData","sopClassUid","getCanvas","putImageData","modalityLUTSequence","modalityLUT","voiLUTSequence","voiLUT","maxVoi","minVoi","imageRetrievalPool","requestType","additionalDetails","addToBeginning","addRequest","mediaType","defaultTransferSyntax","parameters","parameter","parameterValues","defaultTransferSyntaxByType","getTransferSyntaxForContentType","createImage","loadTimeInMS","cancelFn","getNumberString","metaDataProvider","loadImage","register","registerImageLoader","addProvider","wadors","wadouri","cs","registerLoaders","dp","firstColonIndex","frameIndex","frame","frameStr","parseInt","scheme","parsePartialByteArray","pixelDataSet","parseDicom","untilTag","x7fe00010","console","warn","log","fragments","totalLength","fragment","fixFragments","async","dataSetFromPartialContent","loadRequest","fileTotalLength","fetchMore","fetchOptions","_options","fetchedLength","lengthToFetch","byteRange","byteArrayToAppend","combinedByteArray","cacheSizeInBytes","loadedDataSets","promises","getInfo","numberOfDataSetsCached","isLoaded","load","cacheCount","loadDICOMPromise","dicomPart10AsArrayBuffer","partialContent","isPartialContent","ArrayBuffer","cacheInfo","unload","update","loadedDataSet","parsedImageId","parseImageId","dataSetCacheManager","intString","getImagePixelModule","getLUTs","modalityLUTOutputPixelRepresentation","getModalityLUTOutputPixelRepresentation","x00283010","x00540016","firstRadiopharmaceuticalInfoDataSet","files","file","getEncapsulatedImageFrame","basicOffsetTable","readEncapsulatedImageFrame","framesAreFragmented","createJPEGBasicOffsetTable","readEncapsulatedPixelDataFromFragments","isBitSet","byte","bitPos","frameOffset","pixelsPerFrame","pixelDataElement","x7fe00008","pixelDataOffset","unpackBinaryFrame","fileIndex","fileManager","encapsulatedPixelData","getUncompressedImageFrame","loadImageFromPromise","dataSetPromise","sharedCacheKey","callbacks","imageLoadObject","loadEnd","imagePromise","decache","addDecache","totalTimeInMS","imageDoneCallback","getLoaderForScheme","loadFileRequest","loader","loadImageFromDataSet","configure"],"sourceRoot":""}